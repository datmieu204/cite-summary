{
    "ID": "P11-1060",
    "citations": [
        {
            "Number": 1,
            "refer_ID": "P11-1060",
            "refer_sids": [
                112.0
            ],
            "refer_text": "Our learning algorithm alternates between (i) using the current parameters \u03b8 to generate the K-best set \u02dcZL,\u03b8(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.",
            "cite_ID": "D11-1039",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "Clarkeet al (2010) and Liang et al (2011) describe approaches for learning semantic parsers from questions paired with database answers, while Goldwasser et al (2011) presents work on unsupervised learning",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 2,
            "refer_ID": "P11-1060",
            "refer_sids": [
                112.0
            ],
            "refer_text": "Our learning algorithm alternates between (i) using the current parameters \u03b8 to generate the K-best set \u02dcZL,\u03b8(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.",
            "cite_ID": "P13-1092",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "In particular, Clarke et al (2010) and Liang et al (2011) proposed methods to learn from question answer pairs alone, which represents a significant advance",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 4,
            "refer_ID": "P11-1060",
            "refer_sids": [
                25.0
            ],
            "refer_text": "We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.",
            "cite_ID": "P13-1092",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "More recently, Liang et al (2011 )proposedDCS for dependency-based compositional semantics, which represents a semantic parse as a tree with nodes representing database elements and operations, and edges representing relational joins",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 5,
            "refer_ID": "P11-1060",
            "refer_sids": [
                21.0
            ],
            "refer_text": "The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).",
            "cite_ID": "P13-1092",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "GUSP represents meaning by a semantic tree, which is similar to DCS (Liang et al, 2011)",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 7,
            "refer_ID": "P11-1060",
            "refer_sids": [
                25.0
            ],
            "refer_text": "We first present a basic version (Section 2.1) of dependency-based compositional semantics (DCS), which captures the core idea of using trees to represent formal semantics.",
            "cite_ID": "W12-2802",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "Matuszek et al [2010], Liang et al [2011] and Chen and Mooney [2011] describe models that learn compositional semantics, but word meanings are symbolic structures rather than patterns of features in the external world",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 9,
            "refer_ID": "P11-1060",
            "refer_sids": [
                148.0
            ],
            "refer_text": "This bootstrapping behavior occurs naturally: The \u201ceasy\u201d examples are processed first, where easy is defined by the ability of the current model to generate the correct answer using any tree. with scope variation.",
            "cite_ID": "D12-1069",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "One line of work eliminates the need for an annotated logical form, instead using only the correct answer for a database query (Liangetal2011) or even a binary correct/incorrect signal (Clarke et al2010)",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 10,
            "refer_ID": "P11-1060",
            "refer_sids": [
                13.0
            ],
            "refer_text": "We want to induce latent logical forms z (and parameters 0) given only question-answer pairs (x, y), which is much cheaper to obtain than (x, z) pairs.",
            "cite_ID": "N12-1049",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "For example, Liang et al (2011) constructs a latent parse similar in structure to a dependency grammar, but representing a logical form",
            "label": [
                "Result_Citation"
            ]
        },
        {
            "Number": 11,
            "refer_ID": "P11-1060",
            "refer_sids": [
                112.0
            ],
            "refer_text": "Our learning algorithm alternates between (i) using the current parameters \u03b8 to generate the K-best set \u02dcZL,\u03b8(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.",
            "cite_ID": "P12-1045",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "Clarke et al (2010) and Liang et al (2011) trained systems on question and answer pairs by automatically finding semantic interpretations of the questions that would generate the correct answers",
            "label": [
                "Result_Citation"
            ]
        },
        {
            "Number": 12,
            "refer_ID": "P11-1060",
            "refer_sids": [
                21.0
            ],
            "refer_text": "The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).",
            "cite_ID": "P14-1008",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "Dependency-based Compositional Semantics (DCS) provides an intuitive way to model semantics of questions, by using simple dependency-like trees (Liang et al, 2011)",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 13,
            "refer_ID": "P11-1060",
            "refer_sids": [
                47.0
            ],
            "refer_text": "This algorithm is linear in the number of nodes times the size of the denotations.1 Now the dual importance of trees in DCS is clear: We have seen that trees parallel syntactic dependency structure, which will facilitate parsing.",
            "cite_ID": "P14-1008",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "DCS trees has been proposed to represent natural language semantics with a structure similar to dependency trees (Liang et al, 2011) (Figure 1)",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 14,
            "refer_ID": "P11-1060",
            "refer_sids": [
                112.0
            ],
            "refer_text": "Our learning algorithm alternates between (i) using the current parameters \u03b8 to generate the K-best set \u02dcZL,\u03b8(x) for each training example x, and (ii) optimizing the parameters to put probability mass on the correct trees in these sets; sets containing no correct answers are skipped.",
            "cite_ID": "P14-1008",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "are explained in? 2.5. 5http: //nlp.stanford.edu/software/corenlp.shtml 6 In (Liang et al, 2011) DCS trees are learned from QApairs and database entries",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 15,
            "refer_ID": "P11-1060",
            "refer_sids": [
                44.0
            ],
            "refer_text": "S sid=\"44\" ssid=\"20\">The recurrence is as follows: At each node, we compute the set of tuples v consistent with the predicate at that node (v \u2208 w(p)), and S(x)}, where a set of pairs S is treated as a set-valued function S(x) = {y : (x, y) \u2208 S} with domain S1 = {x : (x, y) \u2208 S}.",
            "cite_ID": "P14-1008",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "as in the sentence? Tropi cal storm Debby is blamed for death?, which is a tropical storm, is Debby, etc. Technically, each germ in a DCS tree indicates a variable when the DCS tree is translated to a FOL formula, and the abstract denotation of the germ corresponds to the set of consistent values (Liang et al, 2011) of that variable",
            "label": [
                "Method_Citation"
            ]
        },
        {
            "Number": 16,
            "refer_ID": "P11-1060",
            "refer_sids": [
                106.0
            ],
            "refer_text": "Learning Given a training dataset D containing (x, y) pairs, we define the regularized marginal log-likelihood objective O(\u03b8) = E(x,y)ED log p\u03b8(JzKw = y  |x, z \u2208 ZL(x)) \u2212 \u03bbk\u03b8k22, which sums over all DCS trees z that evaluate to the target answer y.",
            "cite_ID": "D11-1140",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "Clarke et al (2010) and Liang et al (2011) replace semantic annotations in the training set with target answers which are more easily available",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 17,
            "refer_ID": "P11-1060",
            "refer_sids": [
                21.0
            ],
            "refer_text": "The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).",
            "cite_ID": "D11-1140",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "and Collins, 2005, 2007),? -WASP (Wong and Mooney, 2007), UBL (Kwiatkowski et al, 2010) systems and DCS (Liang et al, 2011)",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 18,
            "refer_ID": "P11-1060",
            "refer_sids": [
                172.0
            ],
            "refer_text": "Free from the burden It also allows us to easily add new lexical triggers of annotating logical forms, we hope to use our without becoming mired in the semantic formalism. techniques in developing even more accurate and Quantifiers and superlatives significantly compli- broader-coverage language understanding systems. cate scoping in lambda calculus, and often type rais- Acknowledgments We thank Luke Zettlemoyer ing needs to be employed.",
            "cite_ID": "P13-1007",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "In general, every plural NPpotentially introduces an implicit universal, ranging 1For example, Liang et al (2011) in their state-of-the-art statistical semantic parser within the domain of natural language queries to databases, explicitly devise quantifier scoping in the semantic model",
            "label": [
                "Result_Citation"
            ]
        },
        {
            "Number": 19,
            "refer_ID": "P11-1060",
            "refer_sids": [
                21.0
            ],
            "refer_text": "The main technical contribution of this work is a new semantic representation, dependency-based compositional semantics (DCS), which is both simple and expressive (Section 2).",
            "cite_ID": "D11-1022",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "DD-ADMM may be useful in other frameworks involving logical constraints, such as the models for compositional semantics presented by Liang et al (2011)",
            "label": [
                "Aim_Citation"
            ]
        },
        {
            "Number": 20,
            "refer_ID": "P11-1060",
            "refer_sids": [
                171.0
            ],
            "refer_text": "This yields a more system is based on a new semantic representation, factorized and flexible representation that is easier DCS, which offers a simple and expressive alterto search through and parametrize using features. native to lambda calculus.",
            "cite_ID": "P12-1051",
            "cite_maker_sids": [
                0
            ],
            "cite_sids": [
                0
            ],
            "cite_text": "In fact, for any CFG G, it 1See Liang et al (2011) for work in representing lambda calculus expressions with trees",
            "label": [
                "Method_Citation"
            ]
        }
    ]
}