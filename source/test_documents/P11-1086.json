{
    "ID": "P11-1086",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Rule Markov Models for Fast Tree-to-String Translation",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most statistical machine translation systems on rules that can be formed out of smaller rules in the grammar).",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though this practice improves translation by weakening independence assumptions in the translation model, it nevertheless results in huge, redundant grammars, making both trainand decoding Here, we take the approach, where we only use minrules that cannot be formed out other rules), and instead rely on a model the derivation history to capture dependencies between minimal rules.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Large-scale experiments on a state-of-the-art tree-to-string translation system show that our approach leads to a slimmer model, a faster decoder, yet the same translation quality (measured using B ) as composed rules.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Statistical machine translation systems typically model the translation process as a sequence of translation steps, each of which uses a translation rule, for example, a phrase pair in phrase-based translation or a tree-to-string rule in tree-to-string translation.",
                    "sid": 4,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These rules are usually applied independently of each other, which violates the conventional wisdom that translation should be done in context.",
                    "sid": 5,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To alleviate this problem, most state-of-the-art systems rely on composed rules, which are larger rules that can be formed out of smaller rules (including larger phrase pairs that can be formerd out of smaller phrase pairs), as opposed to minimal rules, which are rules that cannot be formed out of other rules.",
                    "sid": 6,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this approach does improve translation quality dramatically by weakening the independence assumptions in the translation model, they suffer from two main problems.",
                    "sid": 7,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, composition can cause a combinatorial explosion in the number of rules.",
                    "sid": 8,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To avoid this, ad-hoc limits are placed during composition, like upper bounds on the number of nodes in the composed rule, or the height of the rule.",
                    "sid": 9,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Under such limits, the grammar size is manageable, but still much larger than the minimal-rule grammar.",
                    "sid": 10,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, due to large grammars, the decoder has to consider many more hypothesis translations, which slows it down.",
                    "sid": 11,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nevertheless, the advantages outweigh the disadvantages, and to our knowledge, all top-performing systems, both phrase-based and syntax-based, use composed rules.",
                    "sid": 12,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, Galley et al. (2004) initially built a syntax-based system using only minimal rules, and subsequently reported (Galley et al., 2006) that composing rules improves B by 3.6 points, while increasing grammar size 60-fold and decoding time 15-fold.",
                    "sid": 13,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The alternative we propose is to replace composed rules with a rule Markov model that generates rules conditioned on their context.",
                    "sid": 14,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we restrict a rule\u2019s context to the vertical chain of ancestors of the rule.",
                    "sid": 15,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This ancestral context would play the same role as the context formerly provided by rule composition.",
                    "sid": 16,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dependency treelet model developed by Quirk and Menezes (2006) takes such an approach within the framework of dependency translation.",
                    "sid": 17,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, their study leaves unanswered whether a rule Markov model can take the place of composed rules.",
                    "sid": 18,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we investigate the use of rule Markov models in the context of treeto-string translation (Liu et al., 2006; Huang et al., The derivation tree is generated as follows.",
                    "sid": 19,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With 2006).",
                    "sid": 20,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We make three new contributions. probability P(r1  |c), we generate the rule at the root First, we carry out a detailed comparison of rule node, r1.",
                    "sid": 21,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then generate rule r2 with probability Markov models with composed rules.",
                    "sid": 22,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experi- P(r2  |r1), and so on, always taking the leftmost open ments show that, using trigram rule Markov mod- substitution site on the English derived tree, and genels, we achieve an improvement of 2.2 B over erating a rule ri conditioned on its chain of ancestors a baseline of minimal rules.",
                    "sid": 23,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When we compare with probability P(ri  |ancn1(ri)).",
                    "sid": 24,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We carry on until against vertically composed rules, we find that our no more children can be generated.",
                    "sid": 25,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus the probarule Markov model has the same accuracy, but our bility of a derivation tree T is model is much smaller and decoding with our model P(T) = H P(r  |ancn1(r)) (1) is 30% faster.",
                    "sid": 26,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When we compare against full com- r\u2208T posed rules, we find that our rule Markov model still For the minimal rule derivation tree in Figure 2, the often reaches the same level of accuracy, again with probability is: savings in space and time.",
                    "sid": 27,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P(T) = P(r1  |c) \u00b7 P(r2  |r1) \u00b7 P(r3  |r1) Second, we investigate methods for pruning rule \u00b7 P(r4  |r1, r3) \u00b7 P(r6  |r1, r3, r4) Markov models, finding that even very simple prun- \u00b7 P(r7  |r1, r3, r4) \u00b7 P(r5  |r1, r3) (2) ing criteria actually improve the accuracy of the Training We run the algorithm of Galley et al. model, while of course decreasing its size.",
                    "sid": 28,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2004) on word-aligned parallel text to obtain a sinThird, we present a very fast decoder for tree-to- gle derivation of minimal rules for each sentence string grammars with rule Markov models.",
                    "sid": 29,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Huang pair.",
                    "sid": 30,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Unaligned words are handled by attaching and Mi (2010) have recently introduced an efficient them to the highest node possible in the parse tree.) incremental decoding algorithm for tree-to-string The rule Markov model translation, which operates top-down and maintains can then be trained on the path set of these derivaa derivation history of translation rules encountered. tion trees.",
                    "sid": 31,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This history is exactly the vertical chain of ancestors Smoothing We use interpolation with absolute corresponding to the contexts in our rule Markov discounting (Ney et al., 1994): model, which makes it an ideal decoder for our Pabs(r  |ancn1(r)) = max c(r  |ancn 1(r)) \u2212 Dn, 0 model.",
                    "sid": 32,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Er\u2032 c(r\u2032  |ancn1(r\u2032)) We start by describing our rule Markov model { 1 (Section 2) and then how to decode using the rule + (1 \u2212 An)Pabs(r  |ancn\u22121 Markov model (Section 3).",
                    "sid": 33,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 (r)), (3) 2 Rule Markov models where c(r  |ancn 1(r)) is the number of times we have Our model which conditions the generation of a rule seen rule r after the vertical context ancn1(r), Dn is on the vertical chain of its ancestors, which allows it the discount for a context of length n, and (1 \u2212 An) is to capture interactions between rules. set to the value that makes the smoothed probability Consider the example Chinese-English tree-to- distribution sum to one. string grammar in Figure 1 and the example deriva- We experiment with bigram and trigram rule tion in Figure 2.",
                    "sid": 34,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each row is a derivation step; the Markov models.",
                    "sid": 35,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each, we try different values of tree on the left is the derivation tree (in which each D1 and D2, the discount for bigrams and trigrams, node is a rule and its children are the rules that sub- respectively.",
                    "sid": 36,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ney et al. (1994) suggest using the folstitute into it) and the tree pair on the right is the lowing value for the discount Dn: source and target derived tree.",
                    "sid": 37,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For any derivation n1 node r, let anc1(r) be the parent of r (or c if it has no Dn = (4) parent), anc2(r) be the grandparent of node r (or c if n1 + n2 it has no grandparent), and so on.",
                    "sid": 38,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let ancn1(r) be the chain of ancestors anc1(r) \u00b7 \u00b7 \u00b7 ancn(r).",
                    "sid": 39,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "857 rule id translation rule Here, n1 and n2 are the total number of n-grams with exactly one and two counts, respectively.",
                    "sid": 40,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For our corpus, D1 = 0.871 and D2 = 0.902.",
                    "sid": 41,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Additionally, we experiment with 0.4 and 0.5 for Dn.",
                    "sid": 42,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pruning In addition to full n-gram Markov models, we experiment with three approaches to build smaller models to investigate if pruning helps.",
                    "sid": 43,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our results will show that smaller models indeed give a higher B score than the full bigram and trigram models.",
                    "sid": 44,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The approaches we use are: In this paper, we use our rule Markov model framework in the context of tree-to-string translation.",
                    "sid": 45,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tree-to-string translation systems (Liu et al., 2006; Huang et al., 2006) have gained popularity in recent years due to their speed and simplicity.",
                    "sid": 46,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The input to the translation system is a source parse tree and the output is the target string.",
                    "sid": 47,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Huang and Mi (2010) have recently introduced an efficient incremental decoding algorithm for tree-to-string translation.",
                    "sid": 48,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The decoder operates top-down and maintains a derivation history of translation rules encountered.",
                    "sid": 49,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The history is exactly the vertical chain of ancestors corresponding to the contexts in our rule Markov model.",
                    "sid": 50,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This makes incremental decoding a natural fit with our generative story.",
                    "sid": 51,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section, we describe how to integrate our rule Markov model into this incremental decoding algorithm.",
                    "sid": 52,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that it is also possible to integrate our rule Markov model with other decoding algorithms, for example, the more common non-incremental top-down/bottom-up approach (Huang et al., 2006), but it would involve a non-trivial change to the decoding algorithms to keep track of the vertical derivation history, which would result in significant overhead.",
                    "sid": 53,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Algorithm Given the input parse tree in Figure 3, Figure 4 illustrates the search process of the incremental decoder with the grammar of Figure 1.",
                    "sid": 54,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We write X@\u03b7 for a tree node with label X at tree address \u03b7 (Shieber et al., 1995).",
                    "sid": 55,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The root node has address \u01eb, and the ith child of node \u03b7 has address \u03b7.i.",
                    "sid": 56,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At each step, the decoder maintains a stack of active rules, which are rules that have not been completed yet, and the rightmost (n \u2212 1) English words translated thus far (the hypothesis), where n is the order of the word language model (in Figure 4, n = 2).",
                    "sid": 57,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The stack together with the translated English words comprise a state of the decoder.",
                    "sid": 58,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The last column in the figure shows the rule Markov model probabilities with the conditioning context.",
                    "sid": 59,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, we use a trigram rule Markov model.",
                    "sid": 60,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After initialization, the process starts at step 1, where we predict rule r1 (the shaded rule) with probability P(r1  |\u01eb) and push its English side onto the stack, with variables replaced by the corresponding tree nodes: x1 becomes NP@1 and x2 becomes VP@2.",
                    "sid": 61,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This gives us the following stack: the English word order.",
                    "sid": 62,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expand node NP@1 first with English word order.",
                    "sid": 63,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then predict lexical rule r2 with probability P(r2  |r1) and push rule r2 onto the stack: [\u2022 NP@1 VP@2 ] [.",
                    "sid": 64,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bush] In step 3, we perform a scan operation, in which we append the English word just after the dot to the current hypothesis and move the dot after the word.",
                    "sid": 65,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the dot is at the end of the top rule in the stack, we perform a complete operation in step 4 where we pop the finished rule at the top of the stack.",
                    "sid": 66,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the scan and complete steps, we don\u2019t need to compute rule probabilities.",
                    "sid": 67,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An interesting branch occurs after step 10 with two competing lexical rules, r6 and r\u20326.",
                    "sid": 68,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Chinese word y\u02c7u can be translated as either a preposition with (leading to step 11) or a conjunction and (leading to step 11\u2032).",
                    "sid": 69,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word n-gram model does not have enough information to make the correct choice, with.",
                    "sid": 70,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a result, good translations might be pruned because of the beam.",
                    "sid": 71,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, our rule Markov model has the correct preference because of the conditioning ancestral sequence (r3, r4), shown in Figure 5.",
                    "sid": 72,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since VP@2.2 has a preference for y\u02c7u translating to with, our corpus statistics will give a higher probability to P(r6  |r3, r4) than P(r\u20326  |r3, r4).",
                    "sid": 73,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This helps the decoder to score the correct translation higher.",
                    "sid": 74,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Complexity analysis With the incremental decoding algorithm, adding rule Markov models does not change the time complexity, which is O(nc|V|g\u22121), where n is the sentence length, c is the maximum number of incoming hyperedges for each node in the translation forest, V is the target-language vocabulary, and g is the order of the n-gram language model (Huang and Mi, 2010).",
                    "sid": 75,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, if one were to use rule Markov models with a conventional CKY-style bottom-up decoder (Liu et al., 2006), the complexity would increase to O(nCm\u22121|V|4(g\u22121)), where C is the maximum number of outgoing hyperedges for each node in the translation forest, and m is the order of the rule Markov model.",
                    "sid": 76,
                    "ssid": 73,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 experiments and results",
            "number": "2",
            "sents": [
                {
                    "text": "The training corpus consists of 1.5M sentence pairs with 38M/32M words of Chinese/English, respectively.",
                    "sid": 77,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our development set is the newswire portion of the 2006 NIST MT Evaluation test set (616 sentences), and our test set is the newswire portion of the 2008 NIST MT Evaluation test set (691 sentences).",
                    "sid": 78,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We word-aligned the training data using GIZA++ followed by link deletion (Fossum et al., 2008), and then parsed the Chinese sentences using the Berkeley parser (Petrov and Klein, 2007).",
                    "sid": 79,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To extract tree-to-string translation rules, we applied the algorithm of Galley et al. (2004).",
                    "sid": 80,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We trained our rule Markov model on derivations of minimal rules as described above.",
                    "sid": 81,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our trigram word language model was trained on the target side of the training corpus using the SRILM toolkit (Stolcke, 2002) with modified Kneser-Ney smoothing.",
                    "sid": 82,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The base feature set for all systems is similar to the set used in Mi et al. (2008).",
                    "sid": 83,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The features are combined into a standard log-linear model, which we trained using minimum error-rate training (Och, 2003) to maximize the B score on the development set.",
                    "sid": 84,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At decoding time, we again parse the input sentences using the Berkeley parser, and convert them into translation forests using rule patternmatching (Mi et al., 2008).",
                    "sid": 85,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate translation quality using case-insensitive IBM B -4, calculated by the script mteval-v13a.pl.",
                    "sid": 86,
                    "ssid": 10,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4.2 results",
            "number": "3",
            "sents": [
                {
                    "text": "Table 1 presents the main results of our paper.",
                    "sid": 87,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used grammars of minimal rules and composed rules of maximum height 3 as our baselines.",
                    "sid": 88,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For decoding, we used a beam size of 50.",
                    "sid": 89,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the best bigram rule Markov models and the minimal rule grammar gives us an improvement of 1.5 B over the minimal rule baseline.",
                    "sid": 90,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the best trigram rule Markov model brings our gain up to 2.3 B . level as composed and vertically composed rules, but is smaller and faster.",
                    "sid": 91,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of parameters is shown for both the full model and the model filtered for the concatenation of the development and test sets (dev+test).",
                    "sid": 92,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These gains are statistically significant with p < 0.01, using bootstrap resampling with 1000 samples (Koehn, 2004).",
                    "sid": 93,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We find that by just using bigram context, we are able to get at least 1 B point higher than the minimal rule grammar.",
                    "sid": 94,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is interesting to see that using just bigram rule interactions can give us a reasonable boost.",
                    "sid": 95,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We get our highest gains from using trigram context where our best performing rule Markov model gives us 2.3 B points over minimal rules.",
                    "sid": 96,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This suggests that using longer contexts helps the decoder to find better translations.",
                    "sid": 97,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also compared rule Markov models against composed rules.",
                    "sid": 98,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since our models are currently limited to conditioning on vertical context, the closest comparison is against vertically composed rules.",
                    "sid": 99,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We find that our approach performs equally well using much less time and space.",
                    "sid": 100,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Comparing against full composed rules, we find that our system matches the score of the baseline composed rule grammar of maximum height 3, while using many fewer parameters.",
                    "sid": 101,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(It should be noted that a parameter in the rule Markov model is just a floating-point number, whereas a parameter in the composed-rule system is an entire rule; therefore the difference in memory usage would be even greater.)",
                    "sid": 102,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Decoding with our model is 0.2 seconds faster per sentence than with composed rules.",
                    "sid": 103,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These experiments clearly show that rule Markov models with minimal rules increase translation quality significantly and with lower memory requirements than composed rules.",
                    "sid": 104,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One might wonder if the best performance can be obtained by combining composed rules with a rule Markov model.",
                    "sid": 105,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is straightforward to implement: the rule Markov model is still defined over derivations of minimal rules, but in the decoder\u2019s prediction step, the rule Markov model\u2019s value on a composed rule is calculated by decomposing it into minimal rules and computing the product of their probabilities.",
                    "sid": 106,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We find that using our best trigram rule Markov model with composed rules gives us a 0.5 B gain on top of the composed rule grammar, statistically significant with p < 0.05, achieving our highest score of 28.0.1 Tables 2 and 3 show how the various types of rule Markov models compare, for bigrams and trigrams, respectively.",
                    "sid": 107,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is interesting that the full bigram and trigram rule Markov models do not give our highest B scores; pruning the models not only saves space but improves their performance.",
                    "sid": 108,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We think that this is probably due to overfitting.",
                    "sid": 109,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 shows that the RM-A trigram model does fairly well under all the settings of Dn we tried.",
                    "sid": 110,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 5 shows the performance of vertically composed rules at various settings.",
                    "sid": 111,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here we have chosen the setting that gives the best performance on the test set for inclusion in Table 1.",
                    "sid": 112,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 6 shows the performance offully composed rules and fully composed rules with a rule Markov Model at various settings.2 In the second line (2.9 million rules), the drop in B score resulting from adding the rule Markov model is not statistically significant.",
                    "sid": 113,
                    "ssid": 27,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 related work",
            "number": "4",
            "sents": [
                {
                    "text": "Besides the Quirk and Menezes (2006) work discussed in Section 1, there are two other previous 2For these experiments, a beam size of 100 was used. efforts both using a rule bigram model in machine translation, that is, the probability of the current rule only depends on the immediate previous rule in the vertical context, whereas our rule Markov model can condition on longer and sparser derivation histories.",
                    "sid": 114,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among them, Ding and Palmer (2005) also use a dependency treelet model similar to Quirk and Menezes (2006), and Liu and Gildea (2008) use a tree-to-string model more like ours.",
                    "sid": 115,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Neither compared to the scenario with composed rules.",
                    "sid": 116,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Outside of machine translation, the idea of weakening independence assumptions by modeling the derivation history is also found in parsing (Johnson, 1998), where rule probabilities are conditioned on parent and grand-parent nonterminals.",
                    "sid": 117,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, besides the difference between parsing and translation, there are still two major differences.",
                    "sid": 118,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, our work conditions rule probabilities on parent and grandparent rules, not just nonterminals.",
                    "sid": 119,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, we compare against a composed-rule system, which is analogous to the Data Oriented Parsing (DOP) approach in parsing (Bod, 2003).",
                    "sid": 120,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To our knowledge, there has been no direct comparison between a history-based PCFG approach and DOP approach in the parsing literature.",
                    "sid": 121,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 conclusion",
            "number": "5",
            "sents": [
                {
                    "text": "In this paper, we have investigated whether we can eliminate composed rules without any loss in translation quality.",
                    "sid": 122,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have developed a rule Markov model that captures vertical bigrams and trigrams of minimal rules, and tested it in the framework of treeto-string translation.",
                    "sid": 123,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We draw three main conclusions from our experiments.",
                    "sid": 124,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, our rule Markov models dramatically improve a grammar of minimal rules, giving an improvement of 2.3 B .",
                    "sid": 125,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, when we compare against vertically composed rules we are able to get about the same B score, but our model is much smaller and decoding with our model is faster.",
                    "sid": 126,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, when we compare against full composed rules, we find that we can reach the same level of performance under some conditions, but in order to do so consistently, we believe we need to extend our model to condition on horizontal context in addition to vertical context.",
                    "sid": 127,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hope that by modeling context in both axes, we will be able to completely replace composed-rule grammars with smaller minimal-rule grammars.",
                    "sid": 128,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "6",
            "sents": [
                {
                    "text": "We would like to thank Fernando Pereira, Yoav Goldberg, Michael Pust, Steve DeNeefe, Daniel Marcu and Kevin Knight for their comments.",
                    "sid": 129,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mi\u2019s contribution was made while he was visiting USC/ISI.",
                    "sid": 130,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This work was supported in part by DARPA under contracts HR0011-06-C-0022 (subcontract to BBN Technologies), HR0011-09-10028, and DOI-NBC N10AP20031, by a Google Faculty Research Award to Huang, and by the National Natural Science Foundation of China under contracts 60736014 and 90920004.",
                    "sid": 131,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}