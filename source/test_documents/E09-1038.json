{
    "ID": "E09-1038",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Enhancing Unlexicalized Parsing Performance Using a Wide Coverage Lexicon Fuzzy Tag-Set Mapping and EM-HMM-Based Lexical Probabilities",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present a framework for interfacing a PCFG parser with lexical information from an external resource following a different tagging scheme than the treebank.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is achieved by defining a stochastic mapping layer between the two resources.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical probabilities for rare events are estimated in a semi-supervised manner from a lexicon and large unannotated corpora.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show that this solution greatly enhances the performance of an unlexicalized Hebrew PCFG parser, resulting in state-of-the-art Hebrew parsing results both when a segmentation oracle is assumed, and in a real-word parsing scenario of parsing unsegmented tokens.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "The intuition behind unlexicalized parsers is that the lexicon is mostly separated from the syntax: specific lexical items are mostly irrelevant for accurate parsing, and can be mediated through the use of POS tags and morphological hints.",
                    "sid": 5,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This same intuition also resonates in highly lexicalized formalism such as CCG: while the lexicon categories are very fine grained and syntactic in nature, once the lexical category for a lexical item is determined, the specific lexical form is not taken into any further consideration.",
                    "sid": 6,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Despite this apparent separation between the lexical and the syntactic levels, both are usually estimated solely from a single treebank.",
                    "sid": 7,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, while PCFGs can be accurate, they suffer from vocabulary coverage problems: treebanks are small and lexicons induced from them are limited.",
                    "sid": 8,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reason for this treebank-centric view in PCFG learning is 3-fold: the English treebank is fairly large and English morphology is fairly simple, so that in English, the treebank does provide mostly adequate lexical coverage1; Lexicons enumerate analyses, but don\u2019t provide probabilities for them; and, most importantly, the treebank and the external lexicon are likely to follow different annotation schemas, reflecting different linguistic perspectives.",
                    "sid": 9,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On a different vein of research, current POS tagging technology deals with much larger quantities of training data than treebanks can provide, and lexicon-based unsupervised approaches to POS tagging are practically unlimited in the amount of training data they can use.",
                    "sid": 10,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "POS taggers rely on richer knowledge than lexical estimates derived from the treebank, have evolved sophisticated strategies to handle OOV and can provide distributions p(t|w, context) instead of \u201cbest tag\u201d only.",
                    "sid": 11,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Can these two worlds be combined?",
                    "sid": 12,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose that parsing performance can be greatly improved by using a wide coverage lexicon to suggest analyses for unknown tokens, and estimating the respective lexical probabilities using a semisupervised technique, based on the training procedure of a lexicon-based HMM POS tagger.",
                    "sid": 13,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For many resources, this approach can be taken only on the proviso that the annotation schemes of the two resources can be aligned.",
                    "sid": 14,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We take Modern Hebrew parsing as our case study.",
                    "sid": 15,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hebrew is a Semitic language with rich morphological structure.",
                    "sid": 16,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This rich structure yields a large number of distinct word forms, resulting in a high OOV rate (Adler et al., 2008a).",
                    "sid": 17,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This poses a serious problem for estimating lexical probabilities from small annotated corpora, such as the Hebrew treebank (Sima\u2019an et al., 2001).",
                    "sid": 18,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hebrew has a wide coverage lexicon / morphological-analyzer (henceforth, KC Analyzer) available2, but its tagset is different than the one used by the Hebrew Treebank.",
                    "sid": 19,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are not mere technical differences, but derive from different perspectives on the data.",
                    "sid": 20,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Hebrew TB tagset is syntactic in nature, while the KC tagset is lexicographic.",
                    "sid": 21,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This difference in perspective yields different performance for parsers induced from tagged data, and a simple mapping between the two schemes is impossible to define (Sec.",
                    "sid": 22,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2).",
                    "sid": 23,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A naive approach for combining the use of the two resources would be to manually re-tag the Treebank with the KC tagset, but we show this approach harms our parser\u2019s performance.",
                    "sid": 24,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, we propose a novel, layered approach (Sec.",
                    "sid": 25,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1), in which syntactic (TB) tags are viewed as contextual refinements of the lexicon (KC) tags, and conversely, KC tags are viewed as lexical clustering of the syntactic ones.",
                    "sid": 26,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This layered representation allows us to easily integrate the syntactic and the lexicon-based tagsets, without explicitly requiring the Treebank to be re-tagged.",
                    "sid": 27,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hebrew parsing is further complicated by the fact that common prepositions, conjunctions and articles are prefixed to the following word and pronominal elements often appear as suffixes.",
                    "sid": 28,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The segmentation of prefixes and suffixes can be ambiguous and must be determined in a specific context only.",
                    "sid": 29,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, the leaves of the syntactic parse trees do not correspond to space-delimited tokens, and the yield of the tree is not known in advance.",
                    "sid": 30,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show that enhancing the parser with external lexical information is greatly beneficial, both in an artificial scenario where the token segmentation is assumed to be known (Sec.",
                    "sid": 31,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4), and in a more realistic one in which parsing and segmentation are handled jointly by the parser (Goldberg and Tsarfaty, 2008) (Sec.",
                    "sid": 32,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5).",
                    "sid": 33,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "External lexical information enhances unlexicalized parsing performance by as much as 6.67 F-points, an error reduction of 20% over a Treebank-only parser.",
                    "sid": 34,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our results are not only the best published results for parsing Hebrew, but also on par with state-of-the-art lexicalized Arabic parsing results assuming goldstandard fine-grained Part-of-Speech (Maamouri et al., 2008).3",
                    "sid": 35,
                    "ssid": 31,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 a tale of two resources",
            "number": "2",
            "sents": [
                {
                    "text": "Modern Hebrew has 2 major linguistic resources: the Hebrew Treebank (TB), and a wide coverage Lexicon-based morphological analyzer developed and maintained by the Knowledge Center for Processing Hebrew (KC Analyzer).",
                    "sid": 36,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Hebrew Treebank consists of sentences manually annotated with constituent-based syntactic information.",
                    "sid": 37,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most recent version (V2) (Guthmann et al., 2009) has 6,219 sentences, and covers 28,349 unique tokens and 17,731 unique segments4.",
                    "sid": 38,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The KC Analyzer assigns morphological analyses (prefixes, suffixes, POS, gender, person, etc.) to Hebrew tokens.",
                    "sid": 39,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is based on a lexicon of roughly 25,000 word lemmas and their inflection patterns.",
                    "sid": 40,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From these, 562,439 unique word forms are derived.",
                    "sid": 41,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are then prefixed (subject to constraints) by 73 prepositional prefixes.",
                    "sid": 42,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is interesting to note that even with these numbers, the Lexicon\u2019s coverage is far from complete.",
                    "sid": 43,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Roughly 1,500 unique tokens from the Hebrew Treebank cannot be assigned any analysis by the KC Lexicon, and Adler et al. (2008a) report that roughly 4.5% of the tokens in a 42M tokens corpus of news text are unknown to the Lexicon.",
                    "sid": 44,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For roughly 400 unique cases in the Treebank, the Lexicon provides some analyses, but not a correct one.",
                    "sid": 45,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This goes to emphasize the productive nature of Hebrew morphology, and stress that robust lexical probability estimates cannot be derived from an annotated resource as small as the Treebank.",
                    "sid": 46,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical vs. Syntactic POS Tags The analyses produced by the KC Analyzer are not compatible with the Hebrew TB.",
                    "sid": 47,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The KC tagset (Adler et al., 2008b; Netzer et al., 2007; Adler, 2007) takes a lexical approach to POS tagging (\u201ca word can assume only POS tags that would be assigned to it in a dictionary\u201d), while the TB takes a syntactic one (\u201cif the word in this particular positions functions as an Adverb, tag it as an Adverb, even though it is listed in the dictionary only as a Noun\u201d).",
                    "sid": 48,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present 2 cases that emphasize the difference: Adjectives: the Treebank treats any word in an adjectivial position as an Adjective.",
                    "sid": 49,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This includes also demonstrative pronouns m -r5, (this boy).",
                    "sid": 50,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, from the KC point of view, the fact that a pronoun can be used to modify a noun does not mean it should appear in a dictionary as an adjective.",
                    "sid": 51,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The MOD tag: similarly, the TB has a special POS-tag for words that perform syntactic modification.",
                    "sid": 52,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are mostly adverbs, but almost any Adjective can, in some circumstances, belong to that class as well.",
                    "sid": 53,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This category is highly syntactic, and does not conform to the lexicon based approach.",
                    "sid": 54,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, many adverbs and prepositions in Hebrew are lexicalized instances of a preposition followed by a noun (e.g., m5rz, \u201cin+softness\u201d, softly).",
                    "sid": 55,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These can admit both the lexicalized and the compositional analyses.",
                    "sid": 56,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Indeed, many words admit the lexicalized analyses in one of the resource but not in the other (e.g., rztv5 \u201cfor+benefit\u201d is Prep in the TB but only Prep+Noun in the KC, while for -ren \u201cfrom+side\u201d it is the other way around).",
                    "sid": 57,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the syntactic POS tags annotation of the TB is very useful for assigning the correct tree structure when the correct POS tag is known, there are clear benefits to an annotation scheme that can be easily backed by a dictionary.",
                    "sid": 58,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We created a unified resource, in which every word occurrence in the Hebrew treebank is assigned a KC-based analysis.",
                    "sid": 59,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This was done in a semi-automatic manner \u2013 for most cases the mapping could be defined deterministically.",
                    "sid": 60,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rest (less than a thousand instances) were manually assigned.",
                    "sid": 61,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some Treebank tokens had no analyses in the KC lexicon, and some others did not have a correct analysis.",
                    "sid": 62,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These were marked as \u201cUNKNOWN\u201d and \u201cMISSING\u201d respectively.5 The result is a Treebank which is morphologically annotated according to two different schemas.",
                    "sid": 63,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On average, each of the 257 TB tags is mapped to 2.46 of the 273 KC tags.6 While this resource can serve as a basis for many linguistically motivated inquiries, the rest of this paper is 5Another solution would be to add these missing cases to the KC Lexicon.",
                    "sid": 64,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our view this act is harmful: we don\u2019t want our Lexicon to artificially overfit our annotated corpora.",
                    "sid": 65,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6A \u201ctag\u201d in this context means the complete morphological information available for a morpheme in the Treebank: its part of speech, inflectional features and possessive suffixes, but not prefixes or nominative and accusative suffixes, which are taken to be separate morphemes. devoted to using it for constructing a better parser.",
                    "sid": 66,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tagsets Comparison In (Adler et al., 2008b), we hypothesized that due to its syntax-based nature, the Treebank morphological tagset is more suitable than the KC one for syntax related tasks.",
                    "sid": 67,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Is this really the case?",
                    "sid": 68,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To verify it, we simulate a scenario in which the complete gold morphological information is available.",
                    "sid": 69,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We train 2 PCFG grammars, one on each tagged version of the Treebank, and test them on the subset of the development set in which every token is completely covered by the KC Analyzer (351 sentences).7 The input to the parser is the yields and disambiguated pre-terminals of the trees to be parsed.",
                    "sid": 70,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parsing results are presented in Table 1.",
                    "sid": 71,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that this scenario does not reflect actual parsing performance, as the gold information is never available in practice, and surface forms are highly ambiguous.",
                    "sid": 72,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With gold morphological information, the TB tagging scheme is more informative for the parser.",
                    "sid": 73,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntax-oriented annotation scheme of the TB is more informative for parsing than the lexicographic KC scheme.",
                    "sid": 74,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, we would like our parser to use this TB tagset whenever possible, and the KC tagset only for rare or unseen words.",
                    "sid": 75,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A Layered Representation It seems that learning a treebank PCFG assuming such a different tagset would require a treebank tagged with the alternative annotation scheme.",
                    "sid": 76,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rather than assuming the existence of such an alternative resource, we present here a novel approach in which we view the different tagsets as corresponding to different aspects of the morphosyntactic representation of pre-terminals in the parse trees.",
                    "sid": 77,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of these layers captures subtleties and regularities in the data, none of which we would want to (and sometimes, cannot) reduce to the other.",
                    "sid": 78,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We, therefore, propose to retain both tagsets and learn a fuzzy mapping between them.",
                    "sid": 79,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In practice, we propose an integrated representation of the tree in which the bottommost layer represents the yield of the tree, the surface forms are tagged with dictionary-based KC POS tags, and syntactic TB POS tags are in turn mapped onto the KC ones (see Figure 1).",
                    "sid": 80,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This representation helps to retain the information both for the syntactic and the morphological POS tagsets, and can be seen as capturing the interaction between the morphological and syntactic aspects, allowing for a seamless integration of the two levels of representation.",
                    "sid": 81,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We refer to this intermediate layer of representation as a morphosyntactic-transfer layer and we formally depict it as p(tKC|tTB).",
                    "sid": 82,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This layered representation naturally gives rise to a generative model in which a phrase level constituent first generates a syntactic POS tag (tTB), and this in turn generates the lexical POS tag(s) (tKC).",
                    "sid": 83,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The KC tag then ultimately generates the terminal symbols (w).",
                    "sid": 84,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that a morphological analyzer assigns all possible analyses to a given terminal symbol.",
                    "sid": 85,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our terminal symbols are, therefore, pairs: (w, t), and our lexical rules are of the form t \u2014* (w, t).",
                    "sid": 86,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This gives rise to the following equivalence: p((w, tKC)|tTB) = p(tKC|tTB)p((w, tKC)|tKC) In Sections (4, 5) we use this layered generative process to enable a smooth integration of a PCFG treebank-learned grammar, an external wide-coverage lexicon, and lexical probabilities learned in a semi-supervised manner.",
                    "sid": 87,
                    "ssid": 52,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 semi-supervised lexical probability estimations",
            "number": "3",
            "sents": [
                {
                    "text": "A PCFG parser requires lexical probabilities of the form p(w|t) (Charniak et al., 1996).",
                    "sid": 88,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such information is not readily available in the lexicon.",
                    "sid": 89,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it can be estimated from the lexicon and large unannotated corpora, by using the well-known Baum-Welch (EM) algorithm to learn a trigram HMM tagging model of the form p(t1, ... , tn, w1, ... , wn) = argmax H p(ti|ti_1, ti_2)p(wi|ti), and taking the emission probabilities p(w|t) of that model.",
                    "sid": 90,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Hebrew, things are more complicated, as each emission w is not a space delimited token, but rather a smaller unit (a morphological segment, henceforth a segment).",
                    "sid": 91,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Adler and Elhadad (2006) present a lattice-based modification of the BaumWelch algorithm to handle this segmentation ambiguity.",
                    "sid": 92,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traditionally, such unsupervised EM-trained HMM taggers are thought to be inaccurate, but (Goldberg et al., 2008) showed that by feeding the EM process with sufficiently good initial probabilities, accurate taggers (> 91% accuracy) can be learned for both English and Hebrew, based on a (possibly incomplete) lexicon and large amount of raw text.",
                    "sid": 93,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also present a method for automatically obtaining these initial probabilities.",
                    "sid": 94,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As stated in Section 2, the KC Analyzer (Hebrew Lexicon) coverage is incomplete.",
                    "sid": 95,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Adler et al. (2008a) use the lexicon to learn a Maximum Entropy model for predicting possible analyses for unknown tokens based on their orthography, thus extending the lexicon to cover (even if noisily) any unknown token.",
                    "sid": 96,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In what follows, we use KCAnalyzer to refer to this extended version.",
                    "sid": 97,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, these 3 works are combined to create a state-of-the-art POS-tagger and morphological disambiguator for Hebrew (Adler, 2007): initial lexical probabilities are computed based on the MaxEnt-extended KC Lexicon, and are then fed to the modified Baum-Welch algorithm, which is used to fit a morpheme-based tagging model over a very large corpora.",
                    "sid": 98,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the emission probabilities P(W|T) of that model cover all the morphemes seen in the unannotated training corpus, even those not covered by the KC Analyzer.8 We hypothesize that such emission probabilities are good estimators for the morpheme-based P(T \u2014* W) lexical probabilities needed by a PCFG parser.",
                    "sid": 99,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To test this hypothesis, we use it to estimate p(tKC \u2014* w) in some of our models.",
                    "sid": 100,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 parsing with a segmentation oracle",
            "number": "4",
            "sents": [
                {
                    "text": "We now turn to describing our first set of experiments, in which we assume the correct segmentation for each input sentence is known.",
                    "sid": 101,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is a strong assumption, as the segmentation stage is ambiguous, and segmentation information provides very useful morphological hints that greatly constrain the search space of the parser.",
                    "sid": 102,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the setting is simpler to understand than the one in which the parser performs both segmentation and POS tagging, and the results show some interesting trends.",
                    "sid": 103,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, some recent studies on parsing Hebrew, as well as all studies on parsing Arabic, make this oracle assumption.",
                    "sid": 104,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As such, the results serve as an interesting comparison.",
                    "sid": 105,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that in real-world parsing situations, the parser is faced with a stream of ambiguous unsegmented tokens, making results in this setting not indicative of real-world parsing performance.",
                    "sid": 106,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The main question we address is the incorporation of an external lexical resource into the parsing process.",
                    "sid": 107,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is challenging as different resources follow different tagging schemes.",
                    "sid": 108,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One way around it is re-tagging the treebank according to the new tagging scheme.",
                    "sid": 109,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This will serve as a baseline in our experiment.",
                    "sid": 110,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The alternative method uses the Layered Representation described above (Sec.",
                    "sid": 111,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1).",
                    "sid": 112,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compare the performance of the two approaches, and also compare them against the performance of the original treebank without external information.",
                    "sid": 113,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We follow the intuition that external lexical resources are needed only when the information contained in the treebank is too sparse.",
                    "sid": 114,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, we use treebank-derived estimates for reliable events, and resort to the external resources only in the cases of rare or OOV words, for which the treebank distribution is not reliable.",
                    "sid": 115,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Grammar and Notation For all our experiments, we use the same grammar, and change only the way lexical probabilities are implemented.",
                    "sid": 116,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar is an unlexicalized treebank-estimated PCFG with linguistically motivated state-splits.9 In what follows, a lexical event is a word segment which is assigned a single POS thereby functioning as a leaf in a syntactic parse tree.",
                    "sid": 117,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A rare 9Details of the grammar: all functional information is removed from the non-terminals, finite and non-finite verbs, as well as possessive and other PPs are distinguished, definiteness structure of constituents is marked, and parent annotation is employed.",
                    "sid": 118,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is the same grammar as described in (Goldberg and Tsarfaty, 2008).",
                    "sid": 119,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(lexical) event is an event occurring less than K times in the training data, and a reliable (lexical) event is one occurring at least K times in the training data.",
                    "sid": 120,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use OOV to denote lexical events appearing 0 times in the training data. count(\u00b7) is a counting function over the training data, rare stands for any rare event, and wrare is a specific rare event.",
                    "sid": 121,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "KCA(\u00b7) is the KC Analyzer function, mapping a lexical event to a set of possible tags (analyses) according to the lexicon.",
                    "sid": 122,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All our models use relative frequency estimated probabilities for reliable lexical events: p(t \u2192 ment of rare (including OOV) events.",
                    "sid": 123,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our Baseline, no external resource is used.",
                    "sid": 124,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We smooth for rare and OOV events using a pertag probability distribution over rare segments, which we estimate using relative frequency over rare segments in the training data: p(wrare|t) = in treebank grammars are usually estimated.",
                    "sid": 125,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We experiment with two flavours of lexical models.",
                    "sid": 126,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first, LexFilter, the KC Analyzer is consulted for rare events.",
                    "sid": 127,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We estimate rare events using the same per-tag distribution as in the baseline, but use the KC Analyzer to filter out any incompatible cases, that is, we force to 0 the probability of any analysis not supported by the lexicon: Our second flavour of lexical models, LexProbs, the KC Analyzer is consulted to propose analyses for rare events, and the probability of an analysis is estimated via the HMM emission function described in Section 3, which we denote B: In both LexFilter and LexProbs, we resort to the relative frequency estimation in case the event is not covered in the KC Analyzer.",
                    "sid": 128,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we are comparing 3 different representations: TB, which is the original Treebank, KC which is the Treebank converted to use the KC Analyzer tagset, and Layered, which is the layered representation described above.",
                    "sid": 129,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The details of the lexical models vary according to the representation we choose to work with.",
                    "sid": 130,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the TB setting, our lexical rules are of the form ttb \u2192 w. Only the Baseline models are relevant here, as the tagset is not compatible with that of the external lexicon.",
                    "sid": 131,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the KC setting, our lexical rules are of the form tkc \u2192 w, and their probabilities are estimated as described above.",
                    "sid": 132,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that this setting requires our trees to be tagged with the new (KC) tagset, and parsed sentences are also tagged with this tagset.",
                    "sid": 133,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Layered setting, we use lexical rules of the form ttb \u2192 w. Reliable events are estimated as usual, via relative frequency over the original treebank.",
                    "sid": 134,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For rare events, we estimate p(ttb \u2192 w|ttb) = p(ttb \u2192 tkc|ttb)p(tkc \u2192 w|tkc), where the transfer probabilities p(ttb \u2192 tkc) are estimated via relative frequencies over the layered trees, and the emission probabilities are estimated either based on other rare events (LexFilter) or based on the semi-supervised method described in Section 3 (LexProbs).",
                    "sid": 135,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The layered setting has several advantages: First, the resulting trees are all tagged with the original TB tagset.",
                    "sid": 136,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, the training procedure does not require a treebank tagged with the KC tagset: Instead of learning the transfer layer from the treebank we could alternatively base our counts on a different parallel resource, estimate it from unannotated data using EM, define it heuristically, or use any other estimation procedure.",
                    "sid": 137,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We perform all our experiments on Version 2 of the Hebrew Treebank, and follow the train/test/dev split introduced in (Tsarfaty and Sima\u2019an, 2007): section 1 is used for development, sections 2-12 for training, and section 13 is the test set, which we do not use in this work.",
                    "sid": 138,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All the reported results are on the development set.10 After removal of empty sentences, we have 5241 sentences for training, and 483 for testing.",
                    "sid": 139,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to some changes in the Treebank11, our results are not directly comparable to earlier works.",
                    "sid": 140,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, our baseline models are very similar to the models presented in, e.g.",
                    "sid": 141,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Goldberg and Tsarfaty, 2008).",
                    "sid": 142,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to compare the performance of the model on the various tagset representations (TB tags, KC tags, Layered), we remove from the test set 51 sentences in which at least one token is marked as not having any correct segmentation in the KC Analyzer.",
                    "sid": 143,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This introduces a slight bias in favor of the KC-tags setting, and makes the test somewhat easier for all the models.",
                    "sid": 144,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it allows for a relatively fair comparison between the various models.12",
                    "sid": 145,
                    "ssid": 45,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "results and discussion",
            "number": "5",
            "sents": [
                {
                    "text": "As expected, all the results are much lower than those with gold fine-grained POS (Table 1).",
                    "sid": 146,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When not using any external knowledge (Baseline), the TB tagset performs slightly better than the converted treebank (KC).",
                    "sid": 147,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note, however, that the difference is less pronounced than in the gold morphology case.",
                    "sid": 148,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When varying the rare words threshold from 2 to 10, performance drops considerably.",
                    "sid": 149,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Without external knowledge, the parser is facing difficulties coping with unseen events.",
                    "sid": 150,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The incorporation of an external lexical knowledge in the form of pruning illegal tag assignments for unseen words based on the KC lexicon (LexFilter) substantially improves the results (\u223c 72 to \u223c 77).",
                    "sid": 151,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The additional lexical knowledge clearly improves the parser.",
                    "sid": 152,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, varying the rare words threshold in this setting hardly affects the parser performance: the external lexicon suffices to guide the parser in the right direction.",
                    "sid": 153,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Keeping the rare words threshold high is desirable, as it reduces overfitting to the treebank vocabulary.",
                    "sid": 154,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expected the addition of the semisupervised p(t \u2192 w) distribution (LexProbs) to improve the parser, but found it to have an insignificant effect.",
                    "sid": 155,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The correct segmentation seems to remove enough ambiguity as to let the parser base its decisions on the generic tag distribution for rare events.",
                    "sid": 156,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all the settings with a Segmentation Oracle, there is no significant difference between the KC and the Layered representation.",
                    "sid": 157,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We prefer the layered representation as it provides more flexibility, does not require trees tagged with the KC tagset, and produces parse trees with the original TB POS tags at the leaves.",
                    "sid": 158,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Parsing without a Segmentation Oracle When parsing real world data, correct token segmentation is not known in advance.",
                    "sid": 159,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For methodological reasons, this issue has either been setaside (Tsarfaty and Sima\u2019an, 2007), or dealt with in a pipeline model in which a morphological disambiguator is run prior to parsing to determine the correct segmentation.",
                    "sid": 160,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, Tsarfaty (2006) argues that there is a strong interaction between syntax and morphological segmentation, and that the two tasks should be modeled jointly, and not in a pipeline model.",
                    "sid": 161,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several studies followed this line, (Cohen and Smith, 2007) the most recent of which is Goldberg and Tsarfaty (2008), who presented a model based on unweighted lattice parsing for performing the joint task.",
                    "sid": 162,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This model uses a morphological analyzer to construct a lattice over all possible morphological analyses of an input sentence.",
                    "sid": 163,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The arcs of the lattice are (w, t) pairs, and a lattice parser is used to build a parse over the lattice.",
                    "sid": 164,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Viterbi parse over the lattice chooses a lattice path, which induces a segmentation over the input sentence.",
                    "sid": 165,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, parsing and segmentation are performed jointly.",
                    "sid": 166,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical rules in the model are defined over the lattice arcs (t \u2014* (w, t)|t), and smoothed probabilities for them are estimated from the treebank via relative frequency over terminal/preterminal pairs.",
                    "sid": 167,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lattice paths themselves are unweighted, reflecting the intuition that all morphological analyses are a-priori equally likely, and that their perspective strengths should come from the segments they contain and their interaction with the syntax.",
                    "sid": 168,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Goldberg and Tsarfaty (2008) use a data-driven morphological analyzer derived from the treebank.",
                    "sid": 169,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their better models incorporated some external lexical knowledge by use of an Hebrew spell checker to prune some illegal segmentations.",
                    "sid": 170,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In what follows, we use the layered representation to adapt this joint model to use as its morphological analyzer the wide coverage KC Analyzer in enhancement of a data-driven one.",
                    "sid": 171,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, we further enhance the model with the semisupervised lexical probabilities described in Sec 3.",
                    "sid": 172,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model of Goldberg and Tsarfaty (2008) uses a morphological analyzer to constructs a lattice for each input token.",
                    "sid": 173,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, the sentence lattice is built by concatenating the individual token lattices.",
                    "sid": 174,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The morphological analyzer used in that work is data driven based on treebank observations, and employs some well crafted heuristics for OOV tokens (for details, see the original paper).",
                    "sid": 175,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, we use instead a morphological analyzer which uses the KC Lexicon for rare and OOV tokens.",
                    "sid": 176,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin by adapting the rare vs. reliable events distinction from Section 4 to cover unsegmented tokens.",
                    "sid": 177,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We define a reliable token to be a token from the training corpus, which each of its possible segments according to the training corpus was seen in the training corpus at least K times.14 All other tokens are considered to be rare.",
                    "sid": 178,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our morphological analyzer works as follows: For reliable tokens, it returns the set of analyses seen for this token in the treebank (each analysis is a sequence of pairs of the form (w, tTB)).",
                    "sid": 179,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For rare tokens, it returns the set of analyses returned by the KC analyzer (here, analyses are sequences of pairs of the form (w, tKC)).",
                    "sid": 180,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lattice arcs, then, can take two possible forms, either (w, tTB) or (w, tKC).",
                    "sid": 181,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical rules of the form tTB \u2014* (w, tTB) are reliable, and their probabilities estimated via relative frequency over events seen in training.",
                    "sid": 182,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical rules of the form tTB \u2014* (w, tKC) are estimated in accordance with the transfer layer introduced above: p(tTB \u2014* (w, tKC)) _ p(tKC|tTB)p((w, tKC)|tKC).",
                    "sid": 183,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining question is how to estimate p((w, tKC)|tKC).",
                    "sid": 184,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, we use either the LexFilter (estimated over all rare events) or LexProbs (estimated via the semisupervised emission probabilities)models, as defined in Section 4.1 above.",
                    "sid": 185,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As our Baseline, we take the best model of (Goldberg and Tsarfaty, 2008), run against the current version of the Treebank.15 This model uses the same grammar as described in Section 4.1 above, and use some external information in the form of a spell-checker wordlist.",
                    "sid": 186,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compare this Baseline with the LexFilter and LexProbs models over the Layered representation.",
                    "sid": 187,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the same test/train splits as described in Section 4.",
                    "sid": 188,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Contrary to the Oracle segmentation setting, here we evaluate against all sentences, including those containing tokens for which the KC Analyzer does not contain any correct analyses.",
                    "sid": 189,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to token segmentation ambiguity, the resulting parse yields may be different than the gold ones, and evalb can not be used.",
                    "sid": 190,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, we use the evaluation measure of (Tsarfaty, 2006), also used in (Goldberg and Tsarfaty, 2008), which is an adaptation of parseval to use characters instead of space-delimited tokens as its basic units.",
                    "sid": 191,
                    "ssid": 46,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "results and discussion",
            "number": "6",
            "sents": [
                {
                    "text": "The results are expectedly lower than with the segmentation Oracle, as the joint task is much harder, but the external lexical information greatly benefits the parser also in the joint setting.",
                    "sid": 192,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While significant, the improvement from the Baseline to LexFilter is quite small, which is due to the Baseline\u2019s own rather strong illegal analyses filtering heuristic.",
                    "sid": 193,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, unlike the oracle segmentation case, here the semisupervised lexical probabilities (LexProbs) have a major effect on the parser performance (\u2014 69 to \u2014 73.5 F-score), an overall improvement of \u2014 6.6 F-points over the Baseline, which is the previous state-of-the art for this joint task.",
                    "sid": 194,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This supports our intuition that rare lexical events are better estimated using a large unannotated corpus, and not using a generic treebank distribution, or sparse treebank based counts, and that lexical probabilities have a crucial role in resolving segmentation ambiguities.",
                    "sid": 195,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "15While we use the same software as (Goldberg and Tsarfaty, 2008), the results reported here are significantly lower.",
                    "sid": 196,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is due to differences in annotation scheme between V1 and V2 of the Hebrew TB The parsers with the extended lexicon were unable to assign a parse to about 10 of the 483 test sentences.",
                    "sid": 197,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We count them as having 0-Fscore in the table results.16 The Baseline parser could not assign a parse to more than twice that many sentences, suggesting its lexical pruning heuristic is quite harsh.",
                    "sid": 198,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, the unparsed sentences amount to most of the difference between the Baseline and LexFilter parsers.",
                    "sid": 199,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, changing the rare tokens threshold has a significant effect on parsing accuracy, which suggests that the segmentation for rare tokens is highly consistent within the corpus.",
                    "sid": 200,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When an unknown token is encountered, a clear bias should be taken toward segmentations that were previously seen in the same corpus.",
                    "sid": 201,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given that that effect is remedied to some extent by introducing the semi-supervised lexical probabilities, we believe that segmentation accuracy for unseen tokens can be further improved, perhaps using resources such as (Gabay et al., 2008), and techniques for incorporating some document, as opposed to sentence level information, into the parsing process.",
                    "sid": 202,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 conclusions",
            "number": "7",
            "sents": [
                {
                    "text": "We present a framework for interfacing a parser with an external lexicon following a different annotation scheme.",
                    "sid": 203,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike other studies (Yang Huang et al., 2005; Szolovits, 2003) in which such interfacing is achieved by a restricted heuristic mapping, we propose a novel, stochastic approach, based on a layered representation.",
                    "sid": 204,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show that using an external lexicon for dealing with rare lexical events greatly benefits a PCFG parser for Hebrew, and that results can be further improved by the incorporation of lexical probabilities estimated in a semi-supervised manner using a wide-coverage lexicon and a large unannotated corpus.",
                    "sid": 205,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the future, we plan to integrate this framework with a parsing model that is specifically crafted to cope with morphologically rich, free-word order languages, as proposed in (Tsarfaty and Sima\u2019an, 2008).",
                    "sid": 206,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Apart from Hebrew, our method is applicable in any setting in which there exist a small treebank and a wide-coverage lexical resource.",
                    "sid": 207,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example parsing Arabic using the Arabic Treebank and the Buckwalter analyzer, or parsing English biomedical text using a biomedical treebank and the UMLS Specialist Lexicon.",
                    "sid": 208,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}