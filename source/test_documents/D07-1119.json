{
    "ID": "D07-1119",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Multilingual Dependency Parsing and Domain Adaptation using DeSR",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We describe our experiments using the DeSR parser in the multilingual and do main adaptation tracks of the CoNLL 2007 shared task.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DeSR implements an incre mental deterministic Shift/Reduce parsing algorithm, using specific rules to handle non-projective dependencies.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the multi lingual track we adopted a second order averaged perceptron and performed feature selection to tune a feature model for each language.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the domain adaptation track we applied a tree revision method which learns how to correct the mistakes made by the base parser on the adaptation domain.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Classifier-based dependency parsers (Yamada and Matsumoto, 2003; Nivre and Scholz, 2004) learn from an annotated corpus how to select an appropriate sequence of Shift/Reduce actions to construct the dependency tree for a sentence.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Learning is based on techniques such as SVM (Vapnik 1998) or Memory Based Learning (Daelemans 2003), which provide high accuracy but are often computationally expensive.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the multilingual track in the CoNLL 2007 Shared Task, we employed a Shift/Reduce parser which uses a perceptron algorithm with second-order feature maps, in order to verify whether a simpler and faster algorithm can still achieve comparable accuracy.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the domain adaptation track we wished to explore the use of tree revisions in order to incorporate language knowledge from a new domain.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "multilingual track. ",
            "number": "2",
            "sents": [
                {
                    "text": "The overall parsing algorithm is a deterministic classifier-based statistical parser, which extends the approach by Yamada and Matsumoto (2003), by using different reduction rules that ensure deterministic incremental processing of the input sentence and by adding specific rules for handling non-projective dependencies.",
                    "sid": 9,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser also performs dependency labeling within a single processing step.",
                    "sid": 10,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser is modular and can use several learning algorithms.",
                    "sid": 11,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The submitted runs used a second order Average Perceptron, derived from the multiclass perceptron of Crammer and Singer (2003).",
                    "sid": 12,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No additional resources were used.",
                    "sid": 13,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No pre processing or post-processing was used, except stemming for English, by means of the Snowball stemmer (Porter 2001).",
                    "sid": 14,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "deterministic classifier-based parsing. ",
            "number": "3",
            "sents": [
                {
                    "text": "DeSR (Attardi, 2006) is an incremental determinis tic classifier-based parser.",
                    "sid": 15,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser constructs dependency trees employing a deterministic bot tom-up algorithm which performs Shift/Reduce actions while analyzing input sentences in left-to right order.",
                    "sid": 16,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using a notation similar to (Nivre and Scholz, 2003), the state of the parser is represented by a 1112 quadruple ?S, I, T, A?, where S is the stack of past tokens, I is the list of (remaining) input tokens, T is a stack of temporary tokens and A is the arc rela tion for the dependency graph.",
                    "sid": 17,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given an input string W, the parser is initialized to ?(), W, (), ()?, and terminates when it reaches a configuration ?S, (), (), A?.",
                    "sid": 18,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The three basic parsing rule schemas are as fol lows: ?S, n|I, T, A?",
                    "sid": 19,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Shift ?n|S, I, T, A?",
                    "sid": 20,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s|S, n|I, T, A?",
                    "sid": 21,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rightd ?S, n|I, T, A?{(s, d, n)}?",
                    "sid": 22,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s|S, n|I, T, A?",
                    "sid": 23,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Leftd ?S, s|I, T, A?{(n, d, s)}?",
                    "sid": 24,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The schemas for the Left and Right rules are in stantiated for each dependency type d ? D, for a total of 2|D| + 1 rules.",
                    "sid": 25,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These rules perform both attachment and labeling.",
                    "sid": 26,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At each step the parser uses classifiers trained on a treebank corpus in order to predict which action to perform and which dependency label to as sign given the current configuration.",
                    "sid": 27,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "non-projective relations. ",
            "number": "4",
            "sents": [
                {
                    "text": "For handling non-projective relations, Nivre and Nilsson (2005) suggested applying a preprocessing step to a dependency parser, which consists in lifting non-projective arcs to their head re peatedly, until the tree becomes pseudo-projective.",
                    "sid": 28,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A post-processing step is then required to restore the arcs to the proper heads.",
                    "sid": 29,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In DeSR non-projective dependencies are handled in a single step by means of the following ad ditional parsing rules, slightly different from those in (Attardi, 2006): ?s1|s2|S, n|I, T, A?",
                    "sid": 30,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Right2d ? S, s1|n|I, T, A?{(s2, d, n)}?",
                    "sid": 31,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s1|s2|S, n|I, T, A?",
                    "sid": 32,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Left2d ?s2|S, s1|I, T, A?{(n, d, s2)}?",
                    "sid": 33,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s1|s2|s3|S, n|I, T, A?",
                    "sid": 34,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Right3d ? S, s1|s2|n|I, T, A?{(s3, d, n)}?",
                    "sid": 35,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s1|s2|s3|S, n|I, T, A?",
                    "sid": 36,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Left3d ?s2|s3|S, s1|I, T, A?{(n, d, s3)}?",
                    "sid": 37,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?s1|s2|S, n|I, T, A?",
                    "sid": 38,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Extract ?n|s1|S, I, s2|T, A?",
                    "sid": 39,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "?S, I, s1|T, A?",
                    "sid": 40,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Insert ?s1|S, I, T, A?",
                    "sid": 41,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Left2, Right2 are similar to Left and Right, except that they create links crossing one intermediate node, while Left3 and Right3 cross two intermedi ate nodes.",
                    "sid": 42,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice that the RightX actions put back on the input the intervening tokens, allowing the parser to complete the linking of tokens whose processing had been delayed.",
                    "sid": 43,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Extract/Insert gener alize the previous rules by moving one token to the stack T and reinserting the top of T into S.",
                    "sid": 44,
                    "ssid": 17,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "perceptron learning and 2nd-order. ",
            "number": "5",
            "sents": [
                {
                    "text": "Feature Maps The software architecture of the DeSR parser is modular.",
                    "sid": 45,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several learning algorithms are available, including SVM, Maximum Entropy, Memory Based Learning, Logistic Regression and a few variants of the perceptron algorithm.",
                    "sid": 46,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We obtained the best accuracy with a multiclass averaged perceptron classifier based on the ultraconservative formulation of Crammer and Singer (2003) with uniform negative updates.",
                    "sid": 47,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classifier function is: { }xxF k k ?= ?maxarg)( where each parsing action k is associated with a weight vector ?k. To regularize the model the final weight vectors are computed as the average of all weight vectors posited during training.",
                    "sid": 48,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of learning iterations over the training data, which is the only adjustable parameter of the algorithm, was determined by cross-validation.",
                    "sid": 49,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to overcome the limitations of a linear perceptron, we introduce a feature map ?: IRd ? IRd(d+1)/2 that maps a feature vector x into a higher dimensional feature space consisting of all un ordered feature pairs: ?(x) = ?xixj | i = 1, ?, d, j = i, ?, d?",
                    "sid": 50,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words we expand the original representation in the input space with a feature map that generates all second-order feature combinations from each observation.",
                    "sid": 51,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We call this the 2nd-order model, where the inner products are computed as ?k ? ?(x), with ?k a vector of dimen sion d(d+1)/2.",
                    "sid": 52,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Applying a linear perceptron to this feature space corresponds to simulating a polyno mial kernel of degree two.",
                    "sid": 53,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A polynomial kernel of degree two for SVM was also used by Yamada and Matsumoto (2003).",
                    "sid": 54,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, training SVMs on large data sets like those arising from a big training corpus was too 1113 computationally expensive, forcing them to resort to partitioning the training data (by POS) and to learn several models.",
                    "sid": 55,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our implementation of the perceptron algorithm uses sparse data structures (hash maps) so that it can handle efficiently even large feature spaces in a single model.",
                    "sid": 56,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example the feature space for the 2nd-order model for English contains over 21 million.",
                    "sid": 57,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing unseen data can be performed at tens of sentences per second.",
                    "sid": 58,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More details on such aspects of the DeSR parser can be found in (Ci aramita and Attardi 2007).",
                    "sid": 59,
                    "ssid": 15,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "tuning. ",
            "number": "6",
            "sents": [
                {
                    "text": "The base parser was tuned on several parameters to optimize its accuracy as follows.",
                    "sid": 60,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.1 Feature Selection.",
                    "sid": 61,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given the different characteristics of languages and corpus annotations, it is worth while to select a different set of features for each language.",
                    "sid": 62,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For ex ample, certain corpora do not contain lemmas or morphological information so lexical information will be useful.",
                    "sid": 63,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Vice versa, when lemmas are present, lexical information might be avoided, reduc ing the size of the feature set.",
                    "sid": 64,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We performed a series of feature selection ex periments on each language, starting from a fairly comprehensive set of 43 features and trying all variants obtained by dropping a single feature.",
                    "sid": 65,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The best of these alternatives feature models was cho sen and the process iterated until no further gains were achieved.",
                    "sid": 66,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The score for the alternatives was computed on a development set of approximately 5000 tokens, extracted from a split of the original training corpus.",
                    "sid": 67,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Despite the process is not guaranteed to produce a global optimum, we noticed LAS improvements of up to 4 percentage points on some languages.",
                    "sid": 68,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The set of features to be used by DeSR is con trolled by a number of parameters supplied through a parameter file.",
                    "sid": 69,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each parameter describes a fea ture and from which tokens to extract it.",
                    "sid": 70,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tokens are referred through positive numbers for input tokens and negative numbers for tokens on the stack.",
                    "sid": 71,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example PosFeatures -2 -1 0 1 2 3 means to use the POS tag of the first two tokens on the stack and of the first four tokens on the input.",
                    "sid": 72,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parameter PosPrev refers to the POS of the preceding token in the original sentence, PosLeftChild refers to the POS of the left chil dren of a token, PastActions tells how many previous actions to include as features.",
                    "sid": 73,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The selection process was started from the fol lowing base feature model: LexFeatures -1 0 1 LemmaFeatures -2 -1 0 1 2 3 LemmaPrev -1 0 LemmaSucc -1 0 LemmaLeftChild -1 0 LemmaRightChild -1 MorphoFeatures -1 0 1 2 PosFeatures -2 -1 0 1 2 3 PosNext -1 0 PosPrev -1 0 PosLeftChild -1 0 PosRightChild -1 0 CPosFeatures -1 0 1 DepFeatures -1 0 DepLeftChild -1 0 DepRightChild -1 PastActions 1 The selection process produced different variants for each language, sometimes suggesting dropping certain intermediate features, like the lemma of the third next input token in the case of Catalan: LemmaFeatures -2 -1 0 1 3 LemmaPrev 0 LemmaSucc -1 LemmaLeftChild 0 LemmaRightChild -1 PosFeatures -2 -1 0 1 2 3 PosPrev 0 PosSucc -1 PosLeftChild -1 0 PosRightChild -1 0 CPosFeatures -1 0 1 MorphoFeatures 0 1 DepLeftChild -1 0 DepRightChild -1 For Italian, instead, we ran a series of tests in parallel using a set of manually prepared feature mod els.",
                    "sid": 74,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The best of these models achieved a LAS of 80.95%.",
                    "sid": 75,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The final run used this model with the addition of the morphological agreement feature discussed below.",
                    "sid": 76,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "English was the only language for which no feature selection was done and for which lexical features 1114 were used.",
                    "sid": 77,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "English is also the language where the official score is significantly lower than what we had been getting on our development set (90.01% UAS).",
                    "sid": 78,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2 Prepositional Attachment.",
                    "sid": 79,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certain languages, such as Catalan, use detailed dependency labeling, that for instance distinguish between adverbials of location and time.",
                    "sid": 80,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We ex ploited this information by introducing a feature that captures the entity type of a child of the top word on the stack or in the input.",
                    "sid": 81,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During training a list of nouns occurring in the corpus as dependent on prepositions with label CCL (meaning ?com plement of location?",
                    "sid": 82,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "for Catalan) was created and similarly for CCT (complement of time).",
                    "sid": 83,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The en tity type TIME is extracted as a feature depending on whether the noun occurs in the time list more than ? times than in the location list, and similarly for the feature LOCATION.",
                    "sid": 84,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "was set to 1.5 in our experiments.",
                    "sid": 85,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.3 Morphological Agreement.",
                    "sid": 86,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certain languages require gender and number agreement between head and dependent.",
                    "sid": 87,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The feature MorphoAgreement is computed for such lan guages and provided noticeable accuracy improvements.",
                    "sid": 88,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, for Italian, the improvement was from: LAS: 80.95%, UAS: 85.03% to: LAS: 81.34%, UAS: 85.54% For Catalan, adding this feature we obtained an unofficial score of: LAS: 87.64%, UAS: 92.20% with respect to the official run: LAS: 86.86%, UAS: 91.41%",
                    "sid": 89,
                    "ssid": 30,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "accuracy. ",
            "number": "7",
            "sents": [
                {
                    "text": "Table 1 reports the accuracy scores in the multilin gual track.",
                    "sid": 90,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are all considerably above the average and within 2% from the best for Catalan, 3% for Chinese, Greek, Italian and Turkish.",
                    "sid": 91,
                    "ssid": 2,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "performance. ",
            "number": "8",
            "sents": [
                {
                    "text": "The experiments were performed on a 2.4 Ghz AMD Opteron machine with 32 GB RAM.",
                    "sid": 92,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Train ing the parser using the 2nd-order perceptron on the English corpus required less than 3 GB of memory and about one hour for each iteration over the whole dataset.",
                    "sid": 93,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing the English test set required 39.97 sec.",
                    "sid": 94,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For comparison, we tested the MST parser version 0.4.3 (Mstparser, 2007), configured for second-order, on the same data: training took 73.9 minutes to perform 10 iterations and parsing took 97.5 sec.",
                    "sid": 95,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MST parser achieved: LAS: 89.01%, UAS: 90.17%",
                    "sid": 96,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "error analysis on catalan. ",
            "number": "9",
            "sents": [
                {
                    "text": "The parser achieved its best score on Catalan, so we performed an analysis on its output for this lan guage.",
                    "sid": 97,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among the 42 dependency relations that the parser had to assign to a sentence, the largest num ber of errors occurred assigning CC (124), SP (33), CD (27), SUJ (26), CONJUNCT (22), SN (23).",
                    "sid": 98,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The submitted run for Catalan did not use the entity feature discussed earlier and indeed 67 er rors were due to assigning CCT or CCL instead of CC (generic complement of circumstance).",
                    "sid": 99,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How ever over half of these appear as underspecified annotation errors in the corpus rather than parser errors.",
                    "sid": 100,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By adding the ChildEntityType feature, which distinguishes better between CCT and CCL, the UAS improved, while the LAS dropped slightly, due to the effect of underspecified annota tions in the corpus: LAS: 87.22%, UAS: 91.71% Table 1.",
                    "sid": 101,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Multilingual track official scores.",
                    "sid": 102,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LAS UAS Task 1st DeSR Avg 1st DeSR Avg Arabic 76.52 72.66 68.34 86.09 82.53 78.84 Basque 76.92 69.48 68.06 82.80 76.86 75.15 Catalan 88.70 86.86 79.85 93.40 91.41 87.98 Chinese 84.69 81.50 76.59 88.94 86.73 81.98 Czech 80.19 77.37 70.12 86.28 83.40 77.56 English 89.61 85.85 80.95 90.63 86.99 82.67 Greek 76.31 73.92 70.22 84.08 80.75 77.78 Hungarian 80.27 76.81 71.49 83.55 81.81 76.34 Italian 84.40 81.34 78.06 87.91 85.54 82.45 Turkish 79.81 76.87 73.19 86.22 83.56 80.33 1115 A peculiar aspect of the original Catalan corpus was the use of a large number (195) of dependency labels.",
                    "sid": 103,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These labels were reduced to 42 in the ver sion used for CoNNL 2007, in order to make it comparable to other corpora.",
                    "sid": 104,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, performing some preliminary experiments using the original Catalan collection with all 195 dependency labels, the DeSR parser achieved a significantly better score: LAS: 88.80%, UAS: 91.43% while with the modified one, the score dropped to: LAS: 84.55%, UAS: 89.38% This suggests that accuracy might improve for other languages as well if the training corpus was labeled with more precise dependencies.",
                    "sid": 105,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "adaptation track. ",
            "number": "10",
            "sents": [
                {
                    "text": "The adaptation track originally covered two do mains, the CHILDES and the Chemistry domain.",
                    "sid": 106,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The CHILDES (Brown, 1973; MacWhinney, 2000) consists of transcriptions of dialogues with children, typically short sentences of the kind: Would you like more grape juice ? That 's a nice box of books . Phrases are short, half of them are questions.",
                    "sid": 107,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The only difficulty that appeared from looking at the unlabeled collection supplied for training in the domain was the presence of truncated terms like goin (for going), d (for did), etc. However none of these unusually spelled words appeared in the test set, so a normal English parser performed reasonably well on this task.",
                    "sid": 108,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because of certain in consistencies in the annotation guidelines, the organizers decided to make this task optional and hence we submitted just the parse produced by the parser trained for English.",
                    "sid": 109,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the second adaptation task we were given a large collection of unlabeled data in the chemistry domain (Kulick et al 2004) as well as a test set of 5000 tokens (200 sentences) to parse (eng-lish_pchemtbtb_test.conll).",
                    "sid": 110,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There were three sets of unlabeled documents: we chose the smallest (unlab1) consisting of over 300,000 tokens (11663 sentences).",
                    "sid": 111,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "unlab1 was tokenized, POS and lemmas were added using our version of TreeTagger (Schmid, 1994), and lem mas replaced with stems, which had turned out to be more effective than lemmas.",
                    "sid": 112,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We call this set pchemtb_unlab1.conll.",
                    "sid": 113,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We trained the DeSR parser on English using english_ptb_train.conll, the WSJ PTB col lection provided for CoNLL 2007.",
                    "sid": 114,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This consists of WSJ sections 02-11, half of the usual set 02-23, for a total of 460,000 tokens with dependencies gener ated with the converter by Johansson and Nugues (2007).",
                    "sid": 115,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We added stems and produced a parser called DeSRwsj.",
                    "sid": 116,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By parsing eng-lish_pchem_test.conll with DeSRwsj we obtained pchemtb_test_base.desr, our base line for the task.",
                    "sid": 117,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By visual inspection using DgAnnotator (DgAnnotator, 2006), the parses looked generally correct.",
                    "sid": 118,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most of the errors seemed due to improper handling of conjunctions and disjunctions.",
                    "sid": 119,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The collection in fact contains several phrases like: Specific antibodies raised against P450IIB1 , P450 IA1 or IA2 , P450IIE1 , and P450IIIA2 inhibited the activation in liver microsomes from rats pretreated with PB , BNF , INH and DEX respectively The parser did not seem to have much of a problem with terminology, possibly because the supplied gold POS were adequate.",
                    "sid": 120,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the adaptation we proceeded as follows.",
                    "sid": 121,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We parsed pchemtb_unlab1.conll using DeSRwsj obtaining pchemtb_unlab1.desr.",
                    "sid": 122,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then extracted a set of 12,500 sentences from ptb_train.conll and 7,500 sentences from pchemtb_unlab1.desr, creating a corpus of 20,000 sentences called combined.conll.",
                    "sid": 123,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In both cases the selection criteria was to choose sen tences shorter than 30 tokens.",
                    "sid": 124,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then trained a low accuracy parser (called DesrCombined) on combined.conll, by using a 1st-order averaged perceptron.",
                    "sid": 125,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DesrCombined was used to parse english_ptb_train.conll, the original training corpus for English.",
                    "sid": 126,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By com paring this parse with the original, one can detect where such parser makes mistakes.",
                    "sid": 127,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rationale for using an inaccurate parser is to obtain parses with many errors so that they form a suitably large training set for the next step: parser revision.",
                    "sid": 128,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then used a parsing revision technique (At tardi and Ciaramita, 2007) to learn how to correct these errors, producing a parse reviser called DesrReviser.",
                    "sid": 129,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The revision technique consists of comparing the parse trees produced by the parser with the gold standard parse trees, from the annotated corpus.",
                    "sid": 130,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Where a difference is noted, a 1116 revision rule is determined to correct the mistake.",
                    "sid": 131,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such rules consist in movements of a single link to a different head.",
                    "sid": 132,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Learning how to revise a parse tree consists in training a classifier on a set of training examples consisting of pairs ?(wi, d, wj), ti?, i.e. the link to be modified and the transformation rule to apply.",
                    "sid": 133,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Attardi and Ciaramita (2007) showed that 80% of the corrections can be typically dealt with just 20 tree revision rules.",
                    "sid": 134,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the adaptation track we limited the training to errors recurring at least 20 times and to 30 rules.",
                    "sid": 135,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DesrReviser was then applied to pchemtb_test_base.desr producing pchemtb_test_rev.desr, our final submission.",
                    "sid": 136,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many conjunction errors were corrected, in par ticular by moving the head of the sentence from a coordinate verb to the conjunction ?and?",
                    "sid": 137,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "linking two coordinate phrases.",
                    "sid": 138,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The revision step produced an improvement of 0.42% LAS over the score achieved by using just the base DeSRwsj parser.",
                    "sid": 139,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 reports the official accuracy scores on the closed adaptation track.",
                    "sid": 140,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DeSR achieved a close second best UAS on the ptchemtb test set and third best on CHILDES.",
                    "sid": 141,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results are quite encouraging, particularly considering that the revi sion step does not yet correct the dependency labels and that our base English parser had a lower rank in the multilingual track.",
                    "sid": 142,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LAS UAS Task 1st DeSR Avg 1st DeSR Avg CHILDES 61.37 58.67 57.89 Pchemtb 81.06 80.40 73.03 83.42 83.08 76.42 Table 2.",
                    "sid": 143,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Closed adaptation track scores.",
                    "sid": 144,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice that the adaptation process could be iter ated.",
                    "sid": 145,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the combination DeSRwsj+DesrReviser is a more accurate parser than DeSRwsj, we could use it again to parse pchemtb_unlab1.conll and so on.",
                    "sid": 146,
                    "ssid": 41,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusions. ",
            "number": "11",
            "sents": [
                {
                    "text": "For performing multilingual parsing in the CoNLL 2007 shared task we employed DeSR, a classifier based Shift/Reduce parser.",
                    "sid": 147,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used a second order averaged perceptron as classifier and achieved accuracy scores quite above the average in all lan guages.",
                    "sid": 148,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For proper comparison with other approaches, one should take into account that the parser is incremental and deterministic; hence it is typically faster than other non linear algorithms.",
                    "sid": 149,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the adaptation track we used a novel ap proach, based on the technique of tree revision, applied to a parser trained on a corpus combining sentences from both the training and the adaptation domain.",
                    "sid": 150,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The technique achieved quite promising results and it also offers the interesting possibility of being iterated, allowing the parser to incorporate language knowledge from additional domains.",
                    "sid": 151,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the technique is applicable to any parser, we plan to test it also with more accurate English parsers.",
                    "sid": 152,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acknowledgments.",
                    "sid": 153,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following treebanks were used for training the parser: (Aduriz et al, 2003; B?hmov?",
                    "sid": 154,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "et al, 2003; Chen et al, 2003; Ha ji?",
                    "sid": 155,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "et al, 2004; Marcus et al, 1993; Mart?",
                    "sid": 156,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "et al, 2002; Montemagni et al 2003; Oflazer et al, 2003; Prokopidis et al, 2005; Csendes et al, 2005).",
                    "sid": 157,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ryan McDonald and Jason Baldridge made available mstparser and helped us using it.",
                    "sid": 158,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We grate fully acknowledge Hugo Zaragoza and Ricardo Baeza-Yates for supporting the first author during a sabbatical at Yahoo!",
                    "sid": 159,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research Barcelona.",
                    "sid": 160,
                    "ssid": 14,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}