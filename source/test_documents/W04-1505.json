{
    "ID": "W04-1505",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Fast Deep-Linguistic Statistical Dependency Parsing",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present and evaluate an implemented statistical minimal parsing strategy exploiting DG charateristics to permit fast, robust, deeplinguistic analysis of unrestricted text, and compare its probability model to (Collins, 1999) and an adaptation, (Dubey and Keller, 2003).",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show that DG allows for the expression of the majority of English LDDs in a context-free way and offers simple yet powerful statistical models.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "We present a fast, deep-linguistic statistical parser that profits from DG characteristics and that uses am minimal parsing strategy.",
                    "sid": 3,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we rely on finite-state based approaches as long as possible, secondly where parsing is necessary we keep it context-free as long as possible1.",
                    "sid": 4,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For low-level syntactic tasks, tagging and baseNP chunking is used, parsing only takes place between heads of chunks.",
                    "sid": 5,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Robust, successful parsers (Abney, 1995; Collins, 1999) have shown that this division of labour is particularly attractive for DG.",
                    "sid": 6,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Deep-linguistic, Formal Grammar parsers have carefully crafted grammars written by professional linguists.",
                    "sid": 7,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But unrestricted real-world texts still pose a problem to NLP systems that are based on Formal Grammars.",
                    "sid": 8,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Few handcrafted, deep linguistic grammars achieve the coverage and robustness needed to parse large corpora (see (Riezler et al., 2002), (Burke et al., 2004) and (Hockenmaier and Steedman, 2002) for exceptions), and speed remains a serious challenge.",
                    "sid": 9,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The typical problems can be grouped as follows.",
                    "sid": 10,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Grammar complexity Fully comprehensive grammars are difficult to maintain and consid'Non-subject WH-question pronouns and support verbs cannot be treated context-free with our approach.",
                    "sid": 11,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use a simple pre-parsing step to analyze them erably increase parsing complexity.",
                    "sid": 12,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing complexity Typical formal grammar parser complexity is much higher than the O(n3) for CFG.",
                    "sid": 13,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The complexity of some formal grammars is still unknown.2 Parsing algorithms able to treat completely unrestricted long-distance dependencies are NPcomplete (Neuhaus and Broker, 1997).",
                    "sid": 14,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ranking Returning all syntactically possible analyses for a sentence is not what is expected of a syntactic analyzer.",
                    "sid": 15,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A clear indication of preference is needed.",
                    "sid": 16,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pruning In order to keep search spaces manageable it is necessary to discard unconvincing alternatives already during the parsing process.",
                    "sid": 17,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A number of robust statistical parsers that offer solutions to these problems have become available (Charniak, 2000; Collins, 1999; Henderson, 2003).",
                    "sid": 18,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a statistical parser, the ranking of intermediate structures occurs naturally and based on empirical grounds, while most rule-based systems rely on ad hoc heuristics.",
                    "sid": 19,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With an aggressive beam for parse-time pruning (so in our parser), real-world parsing time can be reduced to near-linear.",
                    "sid": 20,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If one were to assume a constantly full fixed beam, or uses an oracle (Nivre, 2004) it is linear in practice3.",
                    "sid": 21,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also worst-case complexity for exhaustive parsing is low, as these parsers are CFGbased (Eisner, 2000)4.",
                    "sid": 22,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But they typically produce CFG constituency data as output, trees that do not express long-distance dependencies.",
                    "sid": 23,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although grammatical function and empty nodes annotation expressing long-distance dependencies are provided in Treebanks such as the Penn Treebank (Marcus et al., 1993), most statistical Treebank trained parsers fully or largely ignore them5, which entails two problems: first, the training cannot profit from valuable annotation data.",
                    "sid": 24,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, the extraction of long-distance dependencies (LDD) and the mapping to shallow semantic representations is not always possible from the output of these parsers.",
                    "sid": 25,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This limitation is aggravated by a lack of co-indexation information and parsing errors across an LDD.",
                    "sid": 26,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, some syntactic relations cannot be recovered on configurational grounds only.",
                    "sid": 27,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For these reasons, (Johnson, 2002) refers to them as &quot;half-grammars&quot;.",
                    "sid": 28,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An approach that relies heavily on DG characteristics is explored in this paper.",
                    "sid": 29,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It uses a hand-written DG grammar and a lexicalized probability model.",
                    "sid": 30,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It combines the low complexity of a CFG parser, the pruning and ranking advantages of statistical parsers and the ability to express the majority of LDDs of Formal Grammars.",
                    "sid": 31,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After presenting the DG benefits, we define our DG and introduce our statistical model.",
                    "sid": 32,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, we give an evaluation.",
                    "sid": 33,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 The Benefit of DG Characteristics In addition to some obvious benefits, such as the integration of chunking and parsing (Abney, 1995), where a chunk largely corresponds to a nucleus (Tesniere, 1959), or that in an endocentric theory projection can never fail, we present eight characteristics in more detail, which in their combination allow us to treat the majority of English long-distance dependencies (LDD) in our DG parser Pro3Gres in a context-fee way.",
                    "sid": 34,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5(Collins, 1999) Model 2 uses some of the functional labels, and Model 3 some long-distance dependencies The ten most frequent types of empty nodes cover more than 60,000 of the approximately 64,000 empty nodes of sections 2-21 of the Penn Treebank.",
                    "sid": 35,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1, reproduced from (Johnson, 2002) [line numbers and counts from the whole Treebank added], gives an overview.",
                    "sid": 36,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fact that traditional DG does not know empty nodes allows a DG parser to use the efficient 0(n3) CYK algorithm.",
                    "sid": 37,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only content words can be nuclei in a traditional DG.",
                    "sid": 38,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that empty units, empty complementizers and empty relative pronouns [lines 4,5,9,10] pose no problem for DG as they are optional, non-head material.",
                    "sid": 39,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, a complementizer is an optional dependent of the subordinated verb.",
                    "sid": 40,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moved clauses [line 6] are mostly PPs or clausal complements of verbs of utterance.",
                    "sid": 41,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only verbs of utterance allow subject-verb inversion in affirmative clauses [line 8].",
                    "sid": 42,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our hand-written grammar provides rules with appropriate restrictions for them, allowing an inversion of the &quot;canonical&quot; dependency direction under welldefined conditions, distinguishing between ordre lineaire (linear precedence(LP)) and ordre structural (immediate dominance(ID)).",
                    "sid": 43,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fronted positions are available locally to the verb in a theory that does not posit a distinction between internal and external arguments.",
                    "sid": 44,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fact that dependencies are often labeled is a main difference between DG and constituency.",
                    "sid": 45,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We exploit this by using dedicated labels to model a range of constituency LDDs, relations spanning several constituency levels, including empty nodes and functional Penn Treebank labels, by a purely local DG relation6.",
                    "sid": 46,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The selective mapping patterns for MLE counts of passive subjects and control subjects from the Penn Treebank, the most frequent NP traces [line 1], are e.g.",
                    "sid": 47,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(@ stands for arbitrary nestedness): Our approach employs finite-state approximations of long-distance dependencies, described in (Schneider, 2003) for DG and (Cahill et al., 2004) for Lexical Functional Grammar (LFG)It leaves empty nodes underspecified but largely recoverable.",
                    "sid": 48,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 gives an overview of important dependencies.",
                    "sid": 49,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While multistratal DGs exist and several dependency levels can be distinguished (Mel'cuk, 1988) we follow a conservative view close to the original (Tesniere, 1959), which basically parses directly for a simple LFG f-structure without needing a c-structure detour.",
                    "sid": 50,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 I addition to taking less decisions due to the gained high-level shallowness, it is ensured that the lexical information that matters is available in one central place, allowing the parser to take one well-informed decision instead of several brittle decisions plagued by sparseness.",
                    "sid": 51,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Collapsing deeply nested structures into a single dependency relation is less complex but has a similar effect as selecting what goes in to the parse history in historybased approaches.",
                    "sid": 52,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DG theory often conceives of DG structures as graphs instead of trees (Hudson, 1984).",
                    "sid": 53,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A statistical lexicalized post-processing module in Pro3Gres transforms selected subtrees into graphs, e.g. in order to express control.",
                    "sid": 54,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pro3Gres is currently being applied in a Question Answering system specifically targeted at technical domains (Rinaldi et al., 2004b).",
                    "sid": 55,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the main advantages of a DG parser such as Pro3Gres over other parsing approaches is that a mapping from the syntactic layer to a semantic layer (meaning representation) is partly simplified (Molly et al., 2000).",
                    "sid": 56,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The possible functional changes of a word called translations (Tesniere, 1959) are an exception to endocentricity.",
                    "sid": 57,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are an important contribution to a traceless theory.",
                    "sid": 58,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gerunds (after winning/VBG the race) or infinitives [line 2] may function as nouns, obviating the need for an empty subject.",
                    "sid": 59,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In nounless NPs such as the poor, adjectives function as nouns, obviating the need for an empty noun head.",
                    "sid": 60,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Participles may function as adjectives (Western industrialized/VBN countries), again obviating the need for an empty subject.",
                    "sid": 61,
                    "ssid": 59,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 the statistical dependency model",
            "number": "2",
            "sents": [
                {
                    "text": "Most successful deep-linguistic Dependency Parsers (Lin, 1998; Tapanainen and Jarvinen, 1997) do not have a statistical base.",
                    "sid": 62,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But one DG advantage is precisely that it offers simple but powerful statistical Maximum Likelihood Estimation (MLE) models.",
                    "sid": 63,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now define our DG and the probability model.",
                    "sid": 64,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules of a context-free, unlabeled DG are equivalent to binary-branching CFG rewrite rules in which the head and the mother node are isomorphic.",
                    "sid": 65,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When converting DG structures to CFG, the order of application of these rules is not necessarily known, but in a labeled DG, the set of rules can specify the order (Covington, 1994).",
                    "sid": 66,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fig.",
                    "sid": 67,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 shows such two structures, equivalent except for the absence of functional labels in CFG.",
                    "sid": 68,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Subj (but not PP) has been used in this example conversion to specify the application order, hence we get a repetition of the eat/V node, mirroring a traditional CFG S and VP distinction.",
                    "sid": 69,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a binary CFG, any two constituents A and B which are adjacent during parsing are candiMany relations are only allowed towards one direction, the left/right factor is absent for them.",
                    "sid": 70,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Typical distances mainly depend on the relation.",
                    "sid": 71,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Objects usually immediately follow the verb, while a PP attached to the verb may easily follow only at the second or third position, after the object and other PPs etc.",
                    "sid": 72,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By application of the chain rule and assuming that distance is independent of the lexical heads we get: dates for the RHS of a rewrite rule.",
                    "sid": 73,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As terminal types we use word tags.",
                    "sid": 74,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In DG, one of these is isomorphic to the LHS, i.e. the head.",
                    "sid": 75,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This grammar is also a Bare Phrase Structure grammar known from Minimalism (Chomsky, 1995).",
                    "sid": 76,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research on PCFG and PP-attachment has shown the importance of probabilizing on lexical heads (a and b). e.g. for the Verb-PP attachment relation pobj (following (Collins and Brooks, 1995) including the description noun7) The distance (measured in chunks) between a head and a dependent is a limiting factor for the probability of a dependency between them.",
                    "sid": 77,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now explore Pro3Gres' main probability model by comparing it to (Collins, 1999), and an adaptation of it, (Dubey and Keller, 2003).",
                    "sid": 78,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We will first consider the non-generative Model 1 (Collins, 1999).",
                    "sid": 79,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both (Collins, 1999) Model 1 and Pro3Gres are mainly dependency-based statistical parsers over heads of chunks, a close relation can thus be expected.",
                    "sid": 80,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The (Collins, 1999) Model 1 MLE estimation is: P(RI(a, atag), (b, btag), dist) \ufffd\ufffd Differences in comparison to (8) are: (Collins, 1999) Model 2 extends the parser to include a complement/adjunct distinction for NPs and subordinated clauses, and it includes a subcategorisation frame model.",
                    "sid": 81,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the subcategorisation-dependent generation of dependencies in Model 2, first the probabilities of the possible subcat frames are calculated and the selected subcat frame is added as a condition.",
                    "sid": 82,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once a subcategorized constituent has been found, it is removed from the subcat frame, ensuring that non-subcategorized constituents cannot be attached as complement, which is one of the two major function of a subcat frame.",
                    "sid": 83,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The other major function of a subcat frame is to find all the subcategorized constituents.",
                    "sid": 84,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to ensure this, the probability when a rewrite rule can stop expanding is calculated.",
                    "sid": 85,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Importantly, the probability of a rewrite rule with a non-empty subcat frame to stop expanding is low, the probability of a rewrite rule with an empty subcat frame to stop expanding is high.",
                    "sid": 86,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pro3Gres includes a complement/adjunct distinction for NPs.",
                    "sid": 87,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The examples given in support of the subcategorisation frame model in (Collins, 1999) Model 2 are dealt with by the hand-written grammar in Pro3Gres.",
                    "sid": 88,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every complement relation type, namely subj, obj, obj2, sentobj, can only occur once per verb, which ensures one of the two major functions of a subcat frame, that non-subcategorized constituents cannot be attached as complements.",
                    "sid": 89,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This amounts to keeping separate subcat frames for each relation type, where the selection of the appropriate frame and removing the found constituent coincide, which has the advantage of a reduced search space: no hypothesized, but unfound subcat frame elements need to be managed.",
                    "sid": 90,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As for the second major function of subcat frames \u2014 to ensure that if possible all subcategorized constituents are found \u2014 the same principle applies: selection of subcat frame and removing of found constituents coincide; lexical information on the verb argument candidate is available at frame selection time already.",
                    "sid": 91,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This implies that Collins Model 2 takes an unnecessary detour.",
                    "sid": 92,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As for the probability of stopping the expansion of a rule \u2014 since DG rules are always binary \u2014 it is always 0 before and 1 after the attachment.",
                    "sid": 93,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But what is needed in place of interrelations of constituents of the same rewrite rule is proper cooperation of the different subcat types.",
                    "sid": 94,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the grammar rules only allow a noun to be obj2 once obj has been found, or a verb is required to have a subject unless it is non-finite or a participle, or all objects need to be closer to the verb than a subordinate clause.",
                    "sid": 95,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Dubey and Keller, 2003) address the question whether models such as Collins also improve performance on freer word order languages, in their case German.",
                    "sid": 96,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "German is considerably more inflectional which means that discarding functional information is more harmful, and which explains why the NEGRA annotation has been conceived to be quite flat (Skut et al., 1997).",
                    "sid": 97,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Dubey and Keller, 2003) observe that models such as Collins when applied directly perform worse than an unlexicalized PCFG baseline.",
                    "sid": 98,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fact that learning curves converge early indicates that this is not mainly a sparse data effect.",
                    "sid": 99,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They suggest a linguistically motivated change, which is shown to outperform the baseline.",
                    "sid": 100,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The (Collins, 1999) Model 2 rule generation model for P \u2014\ufffd Lm...L1HR1...Rn, is Dubey & Keller suggest the following change in order to respect the NEGRA flatness: Ph is left unchanged, but Pl and Pr are conditioned on the preceding sister instead of on the head: Their new model performs considerably better and also outperforms the unlexicalized baseline.",
                    "sid": 101,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The authors state that \\[u]sing sister-head relationships is a way of counteracting the flatness of the grammar productions; it implicitly adds binary branching to the grammar.&quot; (ibid.).",
                    "sid": 102,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DG is binary branching by definition; adding binary branching implicitly converts the CFG rules into an ad-hoc DG.",
                    "sid": 103,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whether the combination ((Chomsky, 1995) merge) of two binary constituents directly projects to a &quot;real&quot; CFG rule LHS or an implicit intermediate constituent does not matter.",
                    "sid": 104,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Observations did not use the NEGRA GR labels has to arise when discussing a strongly inflectional language such as German.",
                    "sid": 105,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 The use of a generative model, calculating the probability of a rule and ultimately the probability of producing a sentence given the grammar only has theoretical advantages.",
                    "sid": 106,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For practical purposes, modeling parsetime decision probabilities is as valid.",
                    "sid": 107,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With these observations in mind, we can compare Pro3Gres to (Dubey and Keller, 2003).",
                    "sid": 108,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As for the Base-NP Model, Pro3Gres only respects the best tagging & chunking result reported to it \u2014 a major source of errors (see section 4).",
                    "sid": 109,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In DG, projection (although not expansion) is deterministic.",
                    "sid": 110,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "H and P are usually isomorphic, if not Tesniere-translations are rulebased.",
                    "sid": 111,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since in DG, only lexical nodes are categories, P=t(P).",
                    "sid": 112,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ph is thus l(h), the prior, we ignore it for maximizing.",
                    "sid": 113,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In analogy, also category (L/R) and their tags are identical.",
                    "sid": 114,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The revised formula is If a DG rule is head-right, P is Li or Ri, if it is head-left, P is Li_1 or Ri_1, respectively.",
                    "sid": 115,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "&quot;In primarily right-branching languages such as English or German (i-1) actually amounts to being the head in the majority of, but not all cases.",
                    "sid": 116,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a more functional DG perspective such as the one taken in Pro3Gres, these languages turn out to be less right-branching, however, with prepositions or determiners analyzed as markers to the nominal head or complementizers or relative pronouns as markers to the verbal head of the subclause.",
                    "sid": 117,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Headedness and not direction matters.",
                    "sid": 118,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Li/Ri is replaced by Hi and L/Ri-1=i+1 by H'.",
                    "sid": 119,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "H' is understood to be the DG dependent, although, as mentioned, H' could also be the DG head in this implicit ad-hoc DG.",
                    "sid": 120,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P(t(Hi)jt(Hi),t(H0i)) is a projection or attachment grammar model modeling the unlexicalized probability of t(H) and t(H') participating in a binary rule with t(H) as head \u2014 the merge probability in Bare Phrase Structure (Chomsky, 1995); an unlabeled version of (4).",
                    "sid": 121,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P(t(Hi),l(Hi)jt(Hi),t(H0i),l(H0i)) is a lexicalized version of the same projection or attachment grammar model; P(t(Hi),l(Hi)jt(Hi), t(H0i),l(H0i, d(i))) in addition conditions on the distance9.",
                    "sid": 122,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pro3Gres expresses the unlexicalized rules by licensing grammar rules for relation R. Tags are not used in Pro3Gres' model, because semantic backoffs and tag-based licensing rules are used.",
                    "sid": 123,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Pro3Gres main MLE estimation (8) (l(H) = a, l(H0) = b) differs from (10) by using labeled DG, and thus from the Dubey & Keller Model by using a consistent functional DG.",
                    "sid": 124,
                    "ssid": 63,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 evaluation",
            "number": "3",
            "sents": [
                {
                    "text": "(Lin, 1995; Carroll et al., 1999) suggest evaluating on the linguistically meaningful level of dependency relations.",
                    "sid": 125,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two such evaluations are reported now.",
                    "sid": 126,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, a general-purpose evaluation using a hand-compiled gold standard corpus (Carroll et al., 1999), which contains the grammatical relation data of 500 random sentences from the Susanne corpus.",
                    "sid": 127,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance (table 3), according to (Preiss, 2003), is similar to a large selection of statistical parsers and a grammatical relation finder.",
                    "sid": 128,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relations involving LDDs form part of these relations.",
                    "sid": 129,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A selection of them is also given: WH-Subject (WHS), WH-Object (WHO), passive Subject (PSubj), control Subject (CSubj), and the anaphor of the relative clause pronoun (RclSubjA).",
                    "sid": 130,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, to answer how the parser performs over domains markedly different to the training corpus, to test whether terminology is the key to a successful parsing system, and to assess the impact of chunking errors, the parser has been applied to the GENIA corpus (Kim et al., 2003), 2000 MEDLINE abstracts of more than 400,000 words describing the results of Biomedical research, which is annotated for multi-word terms and thus contains near-perfect chunking.",
                    "sid": 131,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "100 random sentences from the GENIA corpus have been manually annotated and compared to the parser output (Rinaldi et al., 2004a).",
                    "sid": 132,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 conclusions",
            "number": "4",
            "sents": [
                {
                    "text": "We have discussed how DG allows the expression of the majority of LDDs in a contextfree way and shown that DG allows for simple but powerful statistical models.",
                    "sid": 133,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An evaluation shows that the performance of its implementation is state-of-the-art10.",
                    "sid": 134,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Its parsing speed of about 300,000 words per hour is very good for a deep-linguistic parser and makes it fast enough for unlimited application.",
                    "sid": 135,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}