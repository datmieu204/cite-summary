{
    "ID": "P13-1109",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Graph Propagation for Paraphrasing Out-of-Vocabulary Words in Statistical Machine Translation",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Out-of-vocabulary (oov) words or phrases still remain a challenge in statistical machine translation especially when a limited amount of parallel text is available for training or when there is a domain shift from training data to test data.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we propose a novel approach to finding translations for oov words.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We induce a lexicon by constructing a graph on source language monolingual text and employ a graph propagation technique in order to find translations for all the source language phrases.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our method differs from previous approaches by adopting a graph propagation approach that takes into account not only one-step (from oov directly to a source language phrase that has a translation) but multi-step paraphrases from oov source language words to other source language phrases and eventually to target language translations.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Experimental results show that our graph propagation method significantly improves performance over two strong baselines under intrinsic and extrinsic evaluation metrics.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Out-of-vocabulary (oov) words or phrases still remain a challenge in statistical machine translation.",
                    "sid": 6,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "SMT systems usually copy unknown words verbatim to the target language output.",
                    "sid": 7,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this is helpful in translating a small fraction of oovs such as named entities for languages with same writing systems, it harms the translation in other types of oovs and distant language pairs.",
                    "sid": 8,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, copied-over oovs are a hindrance to fluent, high quality translation, and we can see evidence of this in automatic measures such as BLEU (Papineni et al., 2002) and also in human evaluation scores such as HTER.",
                    "sid": 9,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problem becomes more severe when only a limited amount of parallel text is available for training or when the training and test data are from different domains.",
                    "sid": 10,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even noisy translation of oovs can aid the language model to better re-order the words in the target language (Zhang et al., 2012).",
                    "sid": 11,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Increasing the size of the parallel data can reduce the number of oovs.",
                    "sid": 12,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there will always be some words or phrases that are new to the system and finding ways to translate such words or phrases will be beneficial to the system.",
                    "sid": 13,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Researchers have applied a number of approaches to tackle this problem.",
                    "sid": 14,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some approaches use pivot languages (Callison-Burch et al., 2006) while others use lexicon-induction-based approaches from source language monolingual corpora (Koehn and Knight, 2002; Garera et al., 2009; Marton et al., 2009).",
                    "sid": 15,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pivot language techniques tackle this problem by taking advantage of available parallel data between the source language and a third language.",
                    "sid": 16,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using a pivot language, oovs are translated into a third language and back into the source language and thereby paraphrases to those oov words are extracted (Callison-Burch et al., 2006).",
                    "sid": 17,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each oov, the system can be augmented by aggregating the translations of all its paraphrases and assign them to the oov.",
                    "sid": 18,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, these methods require parallel corpora between the source language and one or multiple pivot languages.",
                    "sid": 19,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another line of work exploits spelling and morphological variants of oov words.",
                    "sid": 20,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Habash (2008) presents techniques for online handling of oov words for Arabic to English such as spelling expansion and morphological expansion.",
                    "sid": 21,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Huang et al. (2011) proposes a method to combine sublexical/constituent translations of an oov word or phrase to generate its translations.",
                    "sid": 22,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several researchers have applied lexiconinduction methods to create a bilingual lexicon for those oovs.",
                    "sid": 23,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marton et al. (2009) use a monolingual text on the source side to find paraphrases to oov words for which the translations are available.",
                    "sid": 24,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The translations for these paraphrases are then used as the translations of the oov word.",
                    "sid": 25,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These methods are based on the distributional hypothesis which states that words appearing in the same contexts tend to have similar meaning (Harris, 1954).",
                    "sid": 26,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marton et al. (2009) showed that this method improves over the baseline system where oovs are untranslated.",
                    "sid": 27,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose a graph propagation-based extension to the approach of Marton et al. (2009) in which a graph is constructed from source language monolingual text1 and the source-side of the available parallel data.",
                    "sid": 28,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nodes that have related meanings are connected together and nodes for which we have translations in the phrase-table are annotated with target-side translations and their feature values.",
                    "sid": 29,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A graph propagation algorithm is then used to propagate translations from labeled nodes to unlabeled nodes (phrases appearing only in the monolingual text and oovs).",
                    "sid": 30,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This provides a general purpose approach to handle several types of oovs, including morphological variants, spelling variants and synonyms2.",
                    "sid": 31,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Constructing such a huge graph and propagating messages through it pose severe computational challenges.",
                    "sid": 32,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Throughout the paper, we will see how these challenges are dealt with using scalable algorithms.",
                    "sid": 33,
                    "ssid": 28,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 collocational lexicon induction",
            "number": "2",
            "sents": [
                {
                    "text": "Rapp (1995) introduced the notion of a distributional profile in bilingual lexicon induction from monolingual data.",
                    "sid": 34,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A distributional profile (DP) of a word or phrase type is a co-occurrence vector created by combining all co-occurrence vectors of the tokens of that phrase type.",
                    "sid": 35,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each distributional profile can be seen as a point in a |V |-dimensional space where V is the vocabulary where each word type represents a unique axis.",
                    "sid": 36,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Points (i.e. phrase types) that are close to one another in this highdimensional space can represent paraphrases.",
                    "sid": 37,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach has also been used in machine translation to find in-vocabulary paraphrases for oov words on the source side and find a way to translate them.",
                    "sid": 38,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marton et al. (2009) was the first to successfully integrate a collocational approach to finding translations for oov words into an end-to-end SMT system.",
                    "sid": 39,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We explain their method in detail as we will compare against this approach.",
                    "sid": 40,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The method relies on monolingual distributional profiles (DPs) which are numerical vectors representing the context around each word.",
                    "sid": 41,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal is to find words or phrases that appear in similar contexts as the oovs.",
                    "sid": 42,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each oov a distributional profile is created by collecting all words appearing in a fixed distance from all occurrences of the oov word in the monolingual text.",
                    "sid": 43,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These co-occurrence counts are converted to an association measure (Section 2.2) that encodes the relatedness of each pair of words or phrases.",
                    "sid": 44,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, the most similar phrases to each oov are found by measuring the similarity of their DPs to that of the oov word.",
                    "sid": 45,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marton et al. (2009) uses a heuristic to prune the search space for finding candidate paraphrases by keeping the surrounding context (e.g.",
                    "sid": 46,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "L R) of each occurrences of the oov word.",
                    "sid": 47,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All phrases that appear in any of such contexts are collected as candidate paraphrases.",
                    "sid": 48,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each of these paraphrases, a DP is constructed and compared to that of the oov word using a similarity measure (Section 2.2).",
                    "sid": 49,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The top-k paraphrases that have translations in the phrase-table are used to assign translations and scores to each oov word by marginalizing translations over paraphrases: where t is a phrase on the target side, o is the oov word or phrase, and s is a paraphrase of o. p(s|o) is estimated using a similarity measure over DPs and p(t|s) is coming from the phrase-table.",
                    "sid": 50,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We reimplemented this collocational approach for finding translations for oovs and used it as a baseline system.",
                    "sid": 51,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alternative ways of modeling and comparing distributional profiles have been proposed (Rapp, 1999; Fung and Yee, 1998; Terra and Clarke, 2003; Garera et al., 2009; Marton et al., 2009).",
                    "sid": 52,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We review some of them here and compare their performance in Section 4.3.",
                    "sid": 53,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a word u, its distributional profile DP(u) is constructed by counting surrounding words (in a fixed window size) in a monolingual corpus.",
                    "sid": 54,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The counts can be collected in positional3 (Rapp, 1999) or non-positional way (count all the word occurrences within the sliding window).",
                    "sid": 55,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A(\u00b7, \u00b7) is an association measure and can simply be defined as co-occurrence counts within sliding windows.",
                    "sid": 56,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Stronger association measures can also be used such as: Conditional probability: the probability for the occurrence of each word in DP given the occurrence of u: CP(u,wi) = P(wi|u) (Sch\u00a8utze and Pedersen, 1997) Pointwise Mutual Information: this measure is a transformation of the independence assumption into a ratio.",
                    "sid": 57,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Positive values indicate that words co-occur more than what we expect under the independence assumption (Lin, 1998): where L is likelihood function under the assumption that word counts in text have binomial distributions.",
                    "sid": 58,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The numerator represents the likelihood of the hypothesis that u and wi are independent Chi-square test: is a statistical hypothesis testing method to evaluate independence of two categorical random variables, e.g. whether the occurrence of u and wi (denoted by x and y respectively) are independent.",
                    "sid": 59,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The test statistics \u03c72(u,wi) is the deviation of the observed counts fx,y from their expected values Ex,y: Various functions have been used to estimate the similarity between distributional profiles.",
                    "sid": 60,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3e.g., position 1 is the word immediately after, position -1 is the word immediately before etc.",
                    "sid": 61,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given two distributional profiles DP(u) and DP(v), some similarity functions can be defined as follows.",
                    "sid": 62,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that A(\u00b7, \u00b7) stands for the various association measures defined in Sec.",
                    "sid": 63,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2.",
                    "sid": 64,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Cosine coefficient is the cosine the angle between two vectors DP(u) and DP(v): L1-Norm computes the accumulated distance between entries of two distributional profiles (L1(\u00b7, \u00b7)).",
                    "sid": 65,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has been used as word similarity measure in language modeling (Dagan et al., 1999).",
                    "sid": 66,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Jensen-Shannon Divergence is a symmetric version of contextual average mutual information (KL) which is used by (Dagan et al., 1999) as word similarity measure.",
                    "sid": 67,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 graph-based lexicon induction",
            "number": "3",
            "sents": [
                {
                    "text": "We propose a novel approach to alleviate the oov problem.",
                    "sid": 68,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a (possibly small amount of) parallel data between the source and target languages, and a large monolingual data in the source language, we construct a graph over all phrase types in the monolingual text and the source side of the parallel corpus and connect phrases that have similar meanings (i.e. appear in similar context) to one another.",
                    "sid": 69,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To do so, the distributional profiles of all source phrase types are created.",
                    "sid": 70,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each phrase type represents a vertex in the graph and is connected to other vertices with a weight defined by a similarity measure between the two profiles (Section 2.3).",
                    "sid": 71,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are three types of vertices in the graph: i) labeled nodes which appear in the parallel corpus and for which we have the target-side translations5; ii) oov nodes from the dev/test set for which we seek labels (translations); and iii) unlabeled nodes (words or phrases) from the monolingual data which appear usually between oov nodes and labeled nodes.",
                    "sid": 72,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When a relatively small parallel data is used, unlabeled nodes outnumber labeled ones and many of them lie on the paths between an oov node to labeled ones.",
                    "sid": 73,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marton et al. (2009)\u2019s approach ignores these bridging nodes and connects each oov node to the k-nearest labeled nodes.",
                    "sid": 74,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One may argue that these unlabeled nodes do not play a major role in the graph and the labels will eventually get to the oov nodes from the labeled nodes by directly connecting them.",
                    "sid": 75,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However based on the definition of the similarity measures using context, it is quite possible that an oov node and a labeled node which are connected to the same unlabeled node do not share any context words and hence are not directly connected.",
                    "sid": 76,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, consider three nodes, u (unlabeled), o (oov) and l (labeled) where u has the same left context words with o but share the right context with l. o and l are not connected since they do not share any context word.",
                    "sid": 77,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once a graph is constructed based on similarities of phrases, graph propagation is used to propagate the labels from labeled nodes to unlabeled and oov nodes.",
                    "sid": 78,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The approach is based on the smoothness assumption (Chapelle et al., 2006) which states if two nodes are similar according to the graph, then their output labels should also be similar.",
                    "sid": 79,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The baseline approach (Marton et al., 2009) can be formulated as a bipartite graph with two types of nodes: labeled nodes (L) and oov nodes (O).",
                    "sid": 80,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each oov node is connected to a number of labeled nodes, and vice versa and there is no edge between nodes of the same type.",
                    "sid": 81,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In such a graph, the similarity of each pair of nodes is computed using one of the similarity measures discussed above.",
                    "sid": 82,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The labels are translations and their probabilities (more specifically p(e|f)) from the phrase-table extracted from the parallel corpus.",
                    "sid": 83,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Translations get propagated to oov nodes using a label propagation technique.",
                    "sid": 84,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However beside the difference in the oov label assignment, there is a major difference between our bipartite graph and the baseline (Marton et al., 2009): we do not use a heuristic to reduce the number of neighbor candidates and we consider all possible candidates that share at least one context word.",
                    "sid": 85,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This makes a significant difference in practice as shown in Section 4.3.1.",
                    "sid": 86,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also take advantage of unlabeled nodes to help connect oov nodes to labeled ones.",
                    "sid": 87,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The discussed bipartite graph can easily be expanded to a tripartite graph by adding unlabeled nodes.",
                    "sid": 88,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 illustrate a tripartite graph in which unlabeled nodes are connected to both labeled and oov nodes.",
                    "sid": 89,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Again, there is no edge between nodes of the same type.",
                    "sid": 90,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also created the full graph where all nodes can be freely connected to nodes of any type including the same type.",
                    "sid": 91,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, constructing such graph and doing graph propagation on it is computationally very expensive for large n-grams.",
                    "sid": 92,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let G = (V, E, W) be a graph where V is the set of vertices, E is the set of edges, and W is the edge weight matrix.",
                    "sid": 93,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The vertex set V consists of labeled VL and unlabeled VU nodes, and the goal of the labeling propagation algorithm is to compute soft labels for unlabeled vertices from the labeled vertices.",
                    "sid": 94,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intuitively, the edge weight W (u, v) encodes the degree of our belief about the similarity of the soft labeling for nodes u and v. A soft label \u02c6Yv \u2208 Am+1 is a probability vector in (m + 1)dimensional simplex, where m is the number of possible labels and the additional dimension accounts for the undefined \u22a5 label6.",
                    "sid": 95,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we make use of the modified Adsorption (MAD) algorithm (Talukdar and Crammer, 2009) which finds soft label vectors \u02c6Yv to solve the following unconstrained optimization problem: where \u00b5i and pi,v are hyper-parameters (\u2200v : Ei pi,v = 1)7, and Rv \u2208 Am+1 encodes our prior belief about the labeling of a node v. The first term (1) enforces the labeling of the algorithm to match the seed labeling Y,, with different extent for different labeled nodes.",
                    "sid": 96,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second term (2) enforces the smoothness of the labeling according to the graph structure and edge weights.",
                    "sid": 97,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The last term (3) regularizes the soft labeling for a vertex v to match a priori label R,,, e.g. for high-degree unlabeled nodes (hubs in the graph) we may believe that the neighbors are not going to produce reliable label and hence the probability of undefined label \u22a5 should be higher.",
                    "sid": 98,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The optimization problem can be solved with an efficient iterative algorithm which is parallelized in a MapReduce framework (Talukdar et al., 2008; Rao and Yarowsky, 2009).",
                    "sid": 99,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the Junto label propagation toolkit (Talukdar and Crammer, 2009) for label propagation.",
                    "sid": 100,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Graph-based approaches can easily become computationally very expensive as the number of nodes grow.",
                    "sid": 101,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our case, we use phrases in the monolingual text as graph vertices.",
                    "sid": 102,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These phrases are n-grams up to a certain value, which can result in millions of nodes.",
                    "sid": 103,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each node a distributional profile (DP) needs to be created.",
                    "sid": 104,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of possible edges can easily explode in size as there can be as many as O(n2) edges where n is the number of nodes.",
                    "sid": 105,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A common practice to control the number of edges is to connect each node to at most k other nodes (k-nearest neighbor).",
                    "sid": 106,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, finding the top-k nearest nodes to each node requires considering its similarity to all the other nodes which requires O(n2) computations and since n is usually very large, doing such is practically intractable.",
                    "sid": 107,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, researchers usually resort to an approximate k-NN algorithms such as locality-sensitive hashing (?",
                    "sid": 108,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "; Goyal et al., 2012).",
                    "sid": 109,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fortunately, since we use context words as cues for relating their meaning and since the similarity measures are defined based on these cues, the number of neighbors we need to consider for each node is reduced by several orders of magnitude.",
                    "sid": 110,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We incorporate an inverted-index-style data structure which indicates what nodes are neighbors based on each context word.",
                    "sid": 111,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, the set of neighbors of a node consists of union of all the neighbors bridged by each context word in the DP of the node.",
                    "sid": 112,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the number of neighbors to be considered for each node even after this drastic reduction is still large (in order of a few thousands).",
                    "sid": 113,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to deal with the computational challenges of such a large graph, we take advantage of the Hadoop\u2019s MapReduce functionality to do both graph construction and label propagation steps.",
                    "sid": 114,
                    "ssid": 47,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 experiments & results",
            "number": "4",
            "sents": [
                {
                    "text": "We experimented with two different domains for the bilingual data: Europarl corpus (v7) (Koehn, 2005), and European Medicines Agency documents (EMEA) (Tiedemann, 2009) from French to English.",
                    "sid": 115,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the monolingual data, we used French side of the Europarl corpus and we used ACL/WMT 20058 data for dev/test sets.",
                    "sid": 116,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 summarizes statistics of the datasets used.",
                    "sid": 117,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the dev and test sets, we extract all source words that do not appear in the phrase-table constructed from the parallel data.",
                    "sid": 118,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the oovs, we exclude numbers as well as named entities.",
                    "sid": 119,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We apply a simple heuristic to detect named entities: basically words that are capitalized in the original dev/test set that do not appear at the beginning of a sentence are named entities.",
                    "sid": 120,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 shows the number of oov types and tokens for Europarl and EMEA systems in both dev and test sets.",
                    "sid": 121,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the end-to-end MT pipeline, we used Moses (Koehn et al., 2007) with these standard features: relative-frequency and lexical translation model (TM) probabilities in both directions; distortion model; language model (LM) and word count.",
                    "sid": 122,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Word alignment is done using GIZA++ (Och and Ney, 2003).",
                    "sid": 123,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used distortion limit of 6 and max-phrase-length of 10 in all the experiments.",
                    "sid": 124,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the language model, we used the KenLM toolkit (Heafield, 2011) to create a 5-gram language model on the target side of the Europarl corpus (v7) with approximately 54M tokens with Kneser-Ney smoothing.",
                    "sid": 125,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once the translations and their probabilities for each oov are extracted, they are added to the phrase-table that is induced from the parallel text.",
                    "sid": 126,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The probability for new entries are added as a new feature in the log-linear framework to be tuned along with other features.",
                    "sid": 127,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The value of this newly introduced feature for original entries in the phrase-table is set to 1.",
                    "sid": 128,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, the value of original four probability features in the phrasetable for the new entries are set to 1.",
                    "sid": 129,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The entire training pipeline is as follows: (i) a phrase table is constructed using parallel data as usual, (ii) oovs for dev and test sets are extracted, (iii) oovs are translated using graph propagation, (iv) oovs and translations are added to the phrase table, introducing a new feature type, (v) the new phrase table is tuned (with a LM) using MERT (Och, 2003) on the dev set.",
                    "sid": 130,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If we have a list of possible translations for oovs with their probabilities, we become able to evaluate different methods we discussed.",
                    "sid": 131,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We wordaligned the dev/test sets by concatenating them to a large parallel corpus and running GIZA++ on the whole set.",
                    "sid": 132,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting word alignments are used to extract the translations for each oov.",
                    "sid": 133,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The correctness of this gold standard is limited to the size of the parallel data used as well as the quality of the word alignment software toolkit, and is not 100% precise.",
                    "sid": 134,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it gives a good estimate of how each oov should be translated without the need for human judgments.",
                    "sid": 135,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For evaluating our baseline as well as graphbased approaches, we use both intrinsic and extrinsic evaluations.",
                    "sid": 136,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two intrinsic evaluation metrics that we use to evaluate the possible translations for oovs are Mean Reciprocal Rank (MRR) (Voorhees, 1999) and Recall.",
                    "sid": 137,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intrinsic evaluation metrics are faster to apply and are used to optimize different hyper-parameters of the approach (e.g. window size, phrase length, etc.).",
                    "sid": 138,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once we come up with the optimized values for the hyper-parameters, we extrinsically evaluate different approaches by adding the new translations to the phrase-table and run it through the MT pipeline.",
                    "sid": 139,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MRR is an Information Retrieval metric used to evaluate any process that produces a ranked list of possible candidates.",
                    "sid": 140,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reciprocal rank of a list is the inverse of the rank of the correct answer in the list.",
                    "sid": 141,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such score is averaged over a set, oov set In a few cases, there are multiple translations for an oov word (i.e. appearing more than once in the parallel corpus and being assigned to multiple different phrases), we take the average of reciprocal ranks for each of them.",
                    "sid": 142,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MRR takes the probabilities of oov translations into account in sorting the list of candidate translations.",
                    "sid": 143,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in an MT pipeline, the language model is supposed to rerank the hypotheses and move more appropriate translations (in terms of fluency) to the top of the list.",
                    "sid": 144,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, we also evaluate our candidate translation regardless of the ranks.",
                    "sid": 145,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since Moses uses a certain number of translations per source phrase (called the translation table limit or ttl which we set to 20 in our experiments) , we use the recall measure to evaluate the top ttl translations in the list.",
                    "sid": 146,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall is another Information Retrieval measure that is the fraction of correct answers that are retrieved.",
                    "sid": 147,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, it assigns score of 1 if the correct translation of the oov word is in the top-k list and 0 otherwise.",
                    "sid": 148,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The scores are averaged over all oovs to compute recall.",
                    "sid": 149,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "|{gold standard} n {candidate list}| |{gold standard}| In Section 2.2 and 2.3, different types of association measures and similarity measures have been explained to build and compare distributional profiles.",
                    "sid": 150,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 shows the results on Europarl when using different similarity combinations.",
                    "sid": 151,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The measures are evaluated by fixing the window size to 4 and maximum candidate paraphrase length to 2 (e.g. bigram).",
                    "sid": 152,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First column shows the association measures used to build DPs.",
                    "sid": 153,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As the results show, the combination of PMI as association measure and cosine as DP similarity measure outperforms the other possible combinations.",
                    "sid": 154,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use these two measures throughout the rest of the experiments.",
                    "sid": 155,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2 illustrates the effects of different window sizes and paraphrase lengths on MRR.",
                    "sid": 156,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As the figure shows, the best MRR is reached when using window size of 4 and trigram nodes.",
                    "sid": 157,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Going from trigram to 4-gram results in a drop in MRR.",
                    "sid": 158,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason would be that distributional profiles for 4grams are very sparse and that negatively affects the stability of similarity measures.",
                    "sid": 159,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3 illustrates the effect of increasing the size of monolingual text on both MRR and recall.",
                    "sid": 160,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1x refers to the case of using 125k sentences for the monolingual text and the 16x indicates using the whole Europarl text on the source side (\u2248 2M sentences).",
                    "sid": 161,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown, there is a linear correlation between the logarithm of the data size and the MRR and recall ratios.",
                    "sid": 162,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Interestingly, MRR is growing faster than recall by increasing the monolingual text size, which means that the scoring function gets better when more data is available.",
                    "sid": 163,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The figure also indicates that a much bigger monolingual text data can be used to further improve the quality of the translations, however, at the expense of more computational resources.",
                    "sid": 164,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 shows the intrinsic results on the Europarl corpus when using unigram nodes in each of the graphs.",
                    "sid": 165,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results are evaluated on the dev-set based on the gold alignment created using GIZA++.",
                    "sid": 166,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each node is connected to at most 20 other nodes (same as the max-paraphrase-limit in the baseline).",
                    "sid": 167,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the tripartite graph, each node is connected to 15 labeled nodes and 5 unlabeled ones.",
                    "sid": 168,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tripartite graph gets a slight improvement over the bipartite one, however, the full graph failed to have the same increase.",
                    "sid": 169,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason is that allowing paths longer than 2 between oov and labeled nodes causes more noise to propagate into the graph.",
                    "sid": 170,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, a paraphrase of a paraphrase of a paraphrase is not necessarily a useful paraphrase for an oov as the translation may no longer be a valid one.",
                    "sid": 171,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 5 also shows the effect of using bigrams instead of unigrams as graph nodes.",
                    "sid": 172,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is an improvement by going from unigrams to bigrams in both bipartite and tripartite graphs.",
                    "sid": 173,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We did not use trigrams or larger n-grams in our experiments.",
                    "sid": 174,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The generated candidate translations for the oovs can be added to the phrase-table created using the parallel corpus to increase the coverage of the phrase-table.",
                    "sid": 175,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This aggregated phrase-table is to be tuned along with the language model on the dev set, and run on the test set.",
                    "sid": 176,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "BLEU (Papineni et al., 2002) is still the de facto evaluation metric for machine translation and we use that to measure the quality of our proposed approaches for MT.",
                    "sid": 177,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In these experiments, we do not use alignment information on dev or test sets unlike the previous section.",
                    "sid": 178,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 6 reports the Bleu scores for different domains when the oov translations from the graph propagation is added to the phrase-table and compares them with the baseline system (i.e.",
                    "sid": 179,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moses).",
                    "sid": 180,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results for our approach is based on unigram tripartite graphs and show that we improve over the baseline in both the same-domain (Europarl) and domain adaptation (EMEA) settings.",
                    "sid": 181,
                    "ssid": 67,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 related work",
            "number": "5",
            "sents": [
                {
                    "text": "There has been a long line of research on learning translation pairs from non-parallel corpora (Rapp, 1995; Koehn and Knight, 2002; Haghighi et al., 2008; Garera et al., 2009; Marton et al., 2009; Laws et al., 2010).",
                    "sid": 182,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most have focused on extracting a translation lexicon by mining monolingual resources of data to find clues, using probabilistic methods to map words, or by exploiting the cross-language evidence of closely related languages.",
                    "sid": 183,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most of them evaluated only highfrequency words of specific types (nouns or content words) (Rapp, 1995; Koehn and Knight, 2002; Haghighi et al., 2008; Garera et al., 2009; Laws et al., 2010) In contrast, we do not consider any constraint on our test data and our data includes many low frequency words.",
                    "sid": 184,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has been shown that translation of high-frequency words is easier than low frequency words (Tamura et al., 2012).",
                    "sid": 185,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some methods have used a third language(s) as pivot or bridge to find translation pairs (Mann and Yarowsky, 2001; Schafer and Yarowsky, 2002; Callison-Burch et al., 2006).",
                    "sid": 186,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Context similarity has been used effectively in bilingual lexicon induction (Rapp, 1995; Koehn and Knight, 2002; Haghighi et al., 2008; Garera et al., 2009; Marton et al., 2009; Laws et al., 2010).",
                    "sid": 187,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has been modeled in different ways: in terms of adjacent words (Rapp, 1999; Fung and Yee, 1998), or dependency relations (Garera et al., 2009).",
                    "sid": 188,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Laws et al. (2010) used linguistic analysis in the form of graph-based models instead of a vector space.",
                    "sid": 189,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But all of these researches used an available seed lexicon as the basic source of similarity between source and target languages unlike our method which just needs a monolingual corpus of source language which is freely available for many languages and a small bilingual corpora.",
                    "sid": 190,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some methods tried to alleviate the lack of seed lexicon by using orthographic similarity to extract a seed lexicon (Koehn and Knight, 2002; Fiser and Ljubesic, 2011).",
                    "sid": 191,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But it is not a practical solution in case of unrelated languages.",
                    "sid": 192,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Haghighi et al. (2008) and Daum\u00b4e and Jagarlamudi (2011) proposed generative models based on canonical correlation analysis to extract translation lexicons for non-parallel corpora by learning a matching between source and target lexicons.",
                    "sid": 193,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using monolingual features to represent words, feature vectors are projected from source and target words into a canonical space to find the appropriate matching between them.",
                    "sid": 194,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their method relies on context features which need a seed lexicon and orthographic features which only works for phylogenetically related languages.",
                    "sid": 195,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Graph-based semi-supervised methods have been shown to be useful for domain adaptation in MT as well.",
                    "sid": 196,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alexandrescu and Kirchhoff (2009) applied a graph-based method to determine similarities between sentences and use these similarities to promote similar translations for similar sentences.",
                    "sid": 197,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They used a graph-based semi-supervised model to re-rank the n-best translation hypothesis.",
                    "sid": 198,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Liu et al. (2012) extended Alexandrescu\u2019s model to use translation consensus among similar sentences in bilingual training data by developing a new structured label propagation method.",
                    "sid": 199,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They derived some features to use during decoding process that has been shown useful in improving translation quality.",
                    "sid": 200,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our graph propagation method connects monolingual source phrases with oovs to obtain translation and so is a very different use of graph propagation from these previous works.",
                    "sid": 201,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently label propagation has been used for lexicon induction (Tamura et al., 2012).",
                    "sid": 202,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They used a graph based on context similarity as well as cooccurrence graph in propagation process.",
                    "sid": 203,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similar to our approach they used unlabeled nodes in label propagation process.",
                    "sid": 204,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, they use a seed lexicon to define labels and comparable corpora to construct graphs unlike our approach.",
                    "sid": 205,
                    "ssid": 24,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 conclusion",
            "number": "6",
            "sents": [
                {
                    "text": "We presented a novel approach for inducing oov translations from a monolingual corpus on the source side and a parallel data using graph propagation.",
                    "sid": 206,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our results showed improvement over the baselines both in intrinsic evaluations and on BLEU.",
                    "sid": 207,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Future work includes studying the effect of size of parallel corpus on the induced oov translations.",
                    "sid": 208,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Increasing the size of parallel corpus on one hand reduces the number of oovs.",
                    "sid": 209,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But, on the other hand, there will be more labeled paraphrases that increases the chance of finding the correct translation for oovs in the test set.",
                    "sid": 210,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Currently, we find paraphrases for oov words.",
                    "sid": 211,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, oovs can be considered as n-grams (phrases) instead of unigrams.",
                    "sid": 212,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this scenario, we also can look for paraphrases and translations for phrases containing oovs and add them to the phrase-table as new translations along with the translations for unigram oovs.",
                    "sid": 213,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also plan to explore different graph propagation objective functions.",
                    "sid": 214,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Regularizing these objective functions appropriately might let us scale to much larger data sets with an order of magnitude more nodes in the graph.",
                    "sid": 215,
                    "ssid": 10,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}