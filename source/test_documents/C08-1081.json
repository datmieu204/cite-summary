{
    "ID": "C08-1081",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Parsing the SynTagRus Treebank of Russian",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present the first results on parsing the SYNTAGRUS treebank of Russian with a data-driven dependency parser, achieving a labeled attachment score of over 82% and an unlabeled attachment score of 89%.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A feature analysis shows that high parsing accuracy is crucially dependent on the use of both lexical and morphological features.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We conjecture that the latter result can be generalized to richly inflected languages in general, provided that sufficient amounts of training data are available.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Dependency-based syntactic parsing has become increasingly popular in computational linguistics in recent years.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the reasons for the growinginterest is apparently the belief that dependency based representations should be more suitable for languages that exhibit free or flexible word order and where most of the clues to syntactic structure are found in lexical and morphological features, rather than in syntactic categories and word order configurations.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some support for this view can be found in the results from the CoNLL shared tasks on dependency parsing in 2006 and 2007, where a variety of data-driven methods for dependency parsing have been applied with encouraging resultsto languages of great typological diversity (Buch holz and Marsi, 2006; Nivre et al, 2007a).",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there are still important differences in parsing accuracy for different language types.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For ? Joakim Nivre, Igor M. Boguslavsky, and LeonidL.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Iomdin, 2008.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Licensed under the Creative Com mons Attribution-Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc-sa/3.0/).",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some rights reserved.example, Nivre et al (2007a) observe that the lan guages included in the 2007 CoNLL shared taskcan be divided into three distinct groups with re spect to top accuracy scores, with relatively low accuracy for richly inflected languages like Arabic and Basque, medium accuracy for agglutinating languages like Hungarian and Turkish, and high accuracy for more configurational languages like English and Chinese.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A complicating factor in thiskind of comparison is the fact that the syntactic an notation in treebanks varies across languages, in such a way that it is very difficult to tease apart the impact on parsing accuracy of linguistic structure, on the one hand, and linguistic annotation, on the other.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also worth noting that the majority of the data sets used in the CoNLL shared tasks arenot derived from treebanks with genuine depen dency annotation, but have been obtained through conversion from other kinds of annotation.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Andthe data sets that do come with original depen dency annotation are generally fairly small, with less than 100,000 words available for training, thenotable exception of course being the Prague De pendency Treebank of Czech (Haji?c et al, 2001), which is one of the largest and most widely used treebanks in the field.This paper contributes to the growing literature on dependency parsing for typologically di verse languages by presenting the first results onparsing the Russian treebank SYNTAGRUS (Bo guslavsky et al, 2000; Boguslavsky et al, 2002).",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are several factors that make this treebank an interesting resource in this context.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First of all, it contains a genuine dependency annotation,theoretically grounded in the long tradition of dependency grammar for Slavic languages, repre sented by the work of Tesni`ere (1959) andMel??cuk (1988), among others.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, with close to 641 500,000 tokens, the treebank is larger than most other available dependency treebanks and providesa good basis for experimental investigations using data-driven methods.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thirdly, the Russian language, which has not been included in previous ex perimental evaluations such as the CoNLL shared tasks, is a richly inflected language with free wordorder and thus representative of the class of lan guages that tend to pose problems for the currently available parsing models.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Taken together, thesefactors imply that experiments using the SYNTA GRUS treebank may be able to shed further light on the complex interplay between language type,annotation scheme, and training set size, as determinants of parsing accuracy for data-driven depen dency parsers.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental parsing results presented in this paper have been obtained using MaltParser,a freely available system for data-driven depen dency parsing with state-of-the-art accuracy for most languages in previous evaluations (Buchholz and Marsi, 2006; Nivre et al, 2007a; Nivre et al, 2007b).",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Besides establishing a first benchmark forthe SYNTAGRUS treebank, we analyze the influence of different kinds of features on parsing ac curacy, showing conclusively that both lexical and morphological features are crucial for obtaininggood parsing accuracy.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All results are based on in put with gold standard annotations, which means that the results can be seen to establish an upper bound on what can be achieved when parsing raw text.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, this also means that results are comparable to those from the CoNLL shared tasks,which have been obtained under the same condi tions.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rest of the paper is structured as follows.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 2 introduces the SYNTAGRUS treebank, section 3 describes the MaltParser system used inthe experiments, and section 4 presents experimental results and analysis.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 5 contains conclu sions and future work.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the syntagrus treebank. ",
            "number": "2",
            "sents": [
                {
                    "text": "The Russian dependency treebank, SYNTAGRUS,is being developed by the Computational Linguistics Laboratory, Institute of Information Trans mission Problems, Russian Academy of Sciences.Currently the treebank contains over 32,000 sen tences (roughly 460,000 words) belonging to texts from a variety of genres (contemporary fiction, popular science, newspaper and journal articles dated between 1960 and 2008, texts of onlinenews, etc.) and it is growing steadily.",
                    "sid": 27,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is an integral but fully autonomous part of the Russian Na tional Corpus developed in a nationwide research project and can be freely consulted on the Web (http://www.ruscorpora.ru/).",
                    "sid": 28,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since Russian is a language with relatively freeword order, SYNTAGRUS adopted a dependency based annotation scheme, in a way parallel to the Prague Dependency Treebank (Haji?c et al, 2001).",
                    "sid": 29,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The treebank is so far the only corpus of Russiansupplied with comprehensive morphological anno tation and syntactic annotation in the form of acomplete dependency tree provided for every sen tence.",
                    "sid": 30,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 shows the dependency tree for the sentence Naibol~xee vozmuwenie uqastnikov mitinga vyzval prodolawi$is rost cenna benzin, ustanavlivaemyh neftnymi kom panimi (It was the continuing growth of petrol prices set by oil companies that caused the greatest indignation of the participants of the meeting).",
                    "sid": 31,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Inthe dependency tree, nodes represent words (lemmas), annotated with parts of speech and morphological features, while arcs are labeled with syntac tic dependency types.",
                    "sid": 32,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are over 65 distinct dependency labels in the treebank, half of which are taken from Mel??cuk?s Meaning?Text Theory (Mel??cuk, 1988).",
                    "sid": 33,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency types that are used in figure 1 include: 1.",
                    "sid": 34,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "predik (predicative), which, prototypically, represents the relation between the verbalpredicate as head and its subject as depen dent; 2.",
                    "sid": 35,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1-kompl (first complement), which denotes the relation between a predicate word as head and its direct complement as dependent;3.",
                    "sid": 36,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "agent (agentive), which introduces the rela tion between a predicate word (verbal noun or verb in the passive voice) as head and its agent in the instrumental case as dependent; 4.",
                    "sid": 37,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "kvaziagent (quasi-agentive), which relatesany predicate noun as head with its first syn tactic actant as dependent, if the latter is not eligible for being qualified as the noun?s agent; 5.",
                    "sid": 38,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "opred (modifier), which connects a noun head with an adjective/participle dependent if the latter serves as an adjectival modifier to the noun; 642 Figure 1: A syntactically annotated sentence from the SYNTAGRUS treebank.",
                    "sid": 39,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.",
                    "sid": 40,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "predl (prepositional), which accounts for the relation between a preposition as head and a noun as dependent.",
                    "sid": 41,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency trees in SYNTAGRUS may contain non-projective dependencies.",
                    "sid": 42,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Normally, one token corresponds to one node in the dependency tree.There are however a noticeable number of exceptions, the most important of which are the follow ing: 1.",
                    "sid": 43,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "compound words like ptidestitany$i (fifty-storied), where one token corresponds to two or more nodes;2.",
                    "sid": 44,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "so-called phantom nodes for the representa tion of hard cases of ellipsis, which do notcorrespond to any particular token in the sen tence; for example,  kupil rubaxku, a on galstuk (I bought a shirt and he a tie), which is expanded into  kupil rubaxku, a on kupil PHANTOM galstuk (I bought a shirt and he bought PHANTOM a tie); 3.",
                    "sid": 45,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "multiword expressions like po kra$ine$i mere (at least), where several tokens correspond to one node.Syntactic annotation is performed semi automatically: sentences are first processed by the rule-based Russian parser of an advanced NLP system, ETAP-3 (Apresian et al, 2003) and then edited manually by linguists who handle errors of the parser as well as cases of ambiguitythat cannot be reliably resolved without extra linguistic knowledge.",
                    "sid": 46,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser processes raw sentences without prior part-of-speech tagging.",
                    "sid": 47,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Morphological annotation in SYNTAGRUS isbased on a comprehensive morphological dictio nary of Russian that counts about 130,000 entries(over 4 million word forms).",
                    "sid": 48,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The ETAP-3 mor phological analyzer uses the dictionary to produce morphological annotation of words belonging to the corpus, including lemma, part-of-speech tag and additional morphological features dependent on the part of speech: animacy, gender, number,case, degree of comparison, short form (of adjectives and participles), representation (of verbs), as pect, tense, mood, person, voice, composite form, and attenuation.",
                    "sid": 49,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Statistics for the version of SYNTAGRUS used for the experiments described in this paper are as follows: ? 32,242 sentences, belonging to the fiction genre (9.8%), texts of online news (12.4%), newspaper and journal articles (77.8%); ? 461,297 tokens, including expressions with non-alphabetical symbols (e.g., 10, 1.200, $333, +70C, #) but excluding punctuation; ? 31,683 distinct word types, of which 635 with a frequency greater than 100, 5041 greater than 10, and 18231 greater than 1; ? 3,414 sentences (10.3%) with non-projective 643 POS DEP MOR LEM LEX TOP + + + + + TOP?1 + HEAD(TOP) + + LDEP(TOP) + RDEP(TOP) + NEXT + + + + NEXT+1 + + + + NEXT+2 + NEXT+3 + LDEP(NEXT) + Table 1: History-based features (TOP = token on top of stack; NEXT = next token in input buffer;HEAD(w) = head of w; LDEP(w) = leftmost depen dent of w; RDEP(w) = leftmost dependent of w).dependencies and 3,934 non-projective de pendency arcs in total; ? 478 sentences (1.5%) containing phantom nodes and 631 phantom nodes in total.",
                    "sid": 50,
                    "ssid": 24,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "maltparser. ",
            "number": "3",
            "sents": [
                {
                    "text": "MaltParser (Nivre et al, 2007b) is a language independent system for data-driven dependency parsing, based on a transition-based parsing model (McDonald and Nivre, 2007).",
                    "sid": 51,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More precisely, the approach is based on four essential components: ? A transition-based deterministic algorithm for building labeled projective dependency graphs in linear time (Nivre, 2003).",
                    "sid": 52,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "History-based feature models for predicting the next parser action (Black et al, 1992; Magerman, 1995; Ratnaparkhi, 1997).?",
                    "sid": 53,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Discriminative classifiers for mapping histo ries to parser actions (Kudo and Matsumoto, 2002; Yamada and Matsumoto, 2003).?",
                    "sid": 54,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pseudo-projective parsing for recovering non projective structures (Nivre and Nilsson, 2005).",
                    "sid": 55,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following subsections, we briefly describe each of these four components in turn.",
                    "sid": 56,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Parsing Algorithm.",
                    "sid": 57,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser uses the deterministic algorithm for la beled dependency parsing first proposed by Nivre (2003).",
                    "sid": 58,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm builds a labeled dependencygraph in one left-to-right pass over the input, us ing a stack to store partially processed tokens and adding arcs using four elementary actions (where TOP is the token on top of the stack and NEXT is the next token): ? Shift: Push NEXT onto the stack.",
                    "sid": 59,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Reduce: Pop the stack.",
                    "sid": 60,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Right-Arc(r): Add an arc labeled r from TOP to NEXT; push NEXT onto the stack.",
                    "sid": 61,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Left-Arc(r): Add an arc labeled r from NEXT to TOP; pop the stack.",
                    "sid": 62,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parser actions are predicted using a history-based feature model (section 3.2) and SVM classifiers (section 3.3).",
                    "sid": 63,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although the parser only derives projective graphs, the fact that these graphs are labeled allows non-projective dependencies to be captured using the pseudo-projective approach of Nivre and Nilsson (2005) (section 3.4).",
                    "sid": 64,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 History-Based Feature Models.",
                    "sid": 65,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "History-based parsing models rely on features ofthe derivation history to predict the next parser ac tion (Black et al, 1992).",
                    "sid": 66,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The features used are all symbolic and defined in terms of five different node attributes: ? POS = part of speech (atomic) ? DEP = dependency type ? MOR = morphological features (set) ? LEM = lemma ? LEX = word form Features of the type DEP have a special status inthat they are extracted during parsing from the partially built dependency graph and are updated dy namically during parsing.",
                    "sid": 67,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The other four feature types (LEX, LEM, POS, and MOR) are given as part of the input to the parser and remain static duringthe processing of a sentence.",
                    "sid": 68,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of these four feature types, all except LEX presupposes that the in put has been preprocessed by a lemmatizer, tagger and morphological analyzer, respectively, but forthe experiments reported below we use gold stan dard annotation from the treebank.In order to study the influence of different features, we have experimented with different combinations of the five feature types, where the base line model contains only POS and DEP features, while more complex models add MOR, LEM, and LEX features in different combinations.",
                    "sid": 69,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The exact 644 features included for each feature type are shown in table 1, where rows denote tokens in a parserconfiguration (defined relative to the stack, the re maining input, and the partially built dependency graph), and where columns correspond to feature types.",
                    "sid": 70,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The selection of features in each group wastuned on a development set as described in sec tion 4.",
                    "sid": 71,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Discriminative Classifiers.",
                    "sid": 72,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use support vector machines (Vapnik, 1995) to predict the next parser action from a feature vector representing the history.",
                    "sid": 73,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, we use LIBSVM (Chang and Lin, 2001) with a quadratic kernel K(x i , x j ) = (?x T i x j + r) 2and the builtin one-versus-all strategy for multi-class classifica tion.",
                    "sid": 74,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Symbolic features are converted to numericalfeatures using the standard technique of binariza tion, and we split the set values of MOR features into their atomic components.",
                    "sid": 75,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to speed up training, we also divide the training data into smaller bins according to the feature POS of NEXT, and train separate classifiers on each bin.",
                    "sid": 76,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4 Pseudo-Projective Parsing.",
                    "sid": 77,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pseudo-projective parsing was proposed by Nivreand Nilsson (2005) as a way of dealing with non projective structures in a projective data-driven parser.",
                    "sid": 78,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We projectivize training data by a minimal transformation, lifting non-projective arcs one step at a time, and extending the arc label of lifted arcs using the encoding scheme called HEAD by Nivre and Nilsson (2005), which means that a lifted arc is assigned the label r?h, where r is the original label and h is the label of the original head in the non-projective dependency graph.",
                    "sid": 79,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Non-projective dependencies can be recoveredby an inverse transformation applied to the dependency graph output by the parser, using a left-to right, top-down, breadth-first search, guided by the extended arc labels r?h assigned by the parser.",
                    "sid": 80,
                    "ssid": 30,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments. ",
            "number": "4",
            "sents": [
                {
                    "text": "In this section we describe the first experiments onparsing the SYNTAGRUS treebank using a data driven parser.",
                    "sid": 81,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental setup is described in section 4.1, while the experimental results are presented and discussed in section 4.2.",
                    "sid": 82,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Experimental Setup.",
                    "sid": 83,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All experiments have been performed on the version of SYNTAGRUS described in section 2, con Model Count LAS UAS Base = POS + DEP 46506 60.2 76.0 B1 = Base + MOR 46506 73.0 84.5 B2 = Base + LEM 46506 75.5 84.6 B3 = Base + LEX 46506 74.5 84.6 BM1 = B1 + LEM 46506 82.3 89.0 BM2 = B1 + LEX 46506 81.0 88.8 All = B1 + LEM + LEX 46506 82.3 89.1 Table 2: Parsing accuracy for different feature models on the final test set (Count = Number of tokens in the test set, LAS = Labeled attachment score, UAS = Unlabeled attachment score).",
                    "sid": 84,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "verted to the CoNLL data format (Buchholz and Marsi, 2006).",
                    "sid": 85,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 The available data were divided into 80% for training, 10% for development, and 10% for final testing, using a pseudo-randomized split.",
                    "sid": 86,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The development set was used for tuningparameters of the parsing algorithm and pseudoprojective parsing technique, and for feature selec tion within the feature groups not included in the baseline model (i.e., MOR, LEM, and LEX).",
                    "sid": 87,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The test set was used for evaluating the finally selected models once.The evaluation metrics used are labeled attach ment score (LAS) ? the percentage of tokens that are assigned the correct head and dependency type?",
                    "sid": 88,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "and unlabeled attachment score (UAS) ? the per centage of tokens that are assigned the correct head (regardless of dependency type).",
                    "sid": 89,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, wepresent precision and recall for non-projective de pendencies.",
                    "sid": 90,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Punctuation tokens are excluded in all scores, but phantom tokens are included.",
                    "sid": 91,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use McNemar?s test for statistical significance.",
                    "sid": 92,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Results and Discussion.",
                    "sid": 93,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 gives the parsing accuracy for different fea ture models on the held-out test set, measured aslabeled attachment score (LAS) and unlabeled at tachment score (UAS).",
                    "sid": 94,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With respect to LAS, there are statistically significant differences between allmodels except BM1 and All (p  0.01).",
                    "sid": 95,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With respect to UAS, there are statistically significant dif ferences between four groups, such that {Base}  {B1, B2, B3}  {BM2}  {BM1, All}, but there 1 Since SYNTAGRUS only distinguishes ten different parts of speech (not counting morphological features), the fieldsCPOSTAG and POSTAG in the CoNLL format ? for coarse grained and fine-grained parts of speech ? were given the same content.",
                    "sid": 96,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "645 are no differences within these groups.",
                    "sid": 97,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Looking at the results for different models, we see that while the baseline model (Base) achievesa modest 60.2% LAS and 76.0% UAS, the addi tion of only one additional feature group (B1?B3)boosts unlabeled accuracy by close to ten percent age points and labeled accuracy by up to fifteenpercentage points.",
                    "sid": 98,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Somewhat surprisingly, the dif ferences between models B1?B3 are very small,and only differences with respect to LAS are statis tically significant, which may be taken to suggest that morphological and lexical features capture thesame type of information.",
                    "sid": 99,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, this hypothe sis is clearly refuted by the results for models BM1 and BM2, where the addition of lexical features on top of morphological features gives a further gain in LAS of eight to ten percentage points (and over four percentage points for UAS).",
                    "sid": 100,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Comparing the use of raw word forms (LEX) and lemmas (LEM) as lexical features, we see a slightadvantage for the latter, at least for labeled accuracy.",
                    "sid": 101,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it must be remembered that the experiments are based on gold standard input anno tation, which probably leads to an overestimation of the value of LEM features.",
                    "sid": 102,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, it is worth noting that including both LEX and LEM features does not result in a significant improvement over the model with only LEM features, which may be a sign of saturation, although this may again change in the presence of noisy LEM features.",
                    "sid": 103,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental results show conclusively that both morphological and lexical features are crucial for achieving high parsing accuracy.",
                    "sid": 104,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It may seem that they are most important for labeled accuracy, where the gain in absolute percentage points is the greatest with respect to the baseline, but it must be remembered that the unlabeled scores start at ahigher level, thus leaving less room for improve ment.",
                    "sid": 105,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, the total error reduction from Base to All is over 50% for both LAS and UAS.",
                    "sid": 106,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 gives a more detailed picture of parsing performance for the best model (All), by breaking down both LAS and UAS by the part-of-speech tag of the dependent.",
                    "sid": 107,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We note that accuracy is higherthan average for nouns (S), adjectives (A), parti cles (PART), and reasonably good for verbs (V).",
                    "sid": 108,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For prepositions (PR), conjunctions (CONJ), and adverbs (ADV), accuracy is considerably lower,which may be attributed to attachment ambigui 2 For the difference BM2  BM1, 0.01  p  0.05; for all other differences, p  0.01.",
                    "sid": 109,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Part of Speech Count LAS UAS S (noun) 7303 86.7 93.3 A (adjective) 7024 92.8 94.2 V (verb) 6946 81.9 85.8 PR (preposition) 5302 60.0 79.0 CONJ (conjunction) 2998 76.1 80.7 ADV (adverb) 2855 72.3 83.3 PART (particle) 1833 88.1 89.6 NUM (numeral) 807 88.7 93.6 NID (foreign word) 142 76.5 91.5 COM (compound) 32 93.8 96.9 P (proposition word) 7 57.1 85.7 INTJ (interjection) 5 0.0 20.0 Table 3: Accuracy by part of speech on the final test set for All features (Count = Number of tokens in the test set, LAS = Labeled attachment score, UAS = Unlabeled attachment score).",
                    "sid": 110,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ties.",
                    "sid": 111,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also worth noting that both prepositions and adverbs have considerably higher UAS thanLAS (almost twenty percentage points for prepositions), which shows that even when they are at tached correctly they are are often mislabeled.",
                    "sid": 112,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining parts of speech are too infrequent to warrant any conclusions.Looking specifically at non-projective dependencies, we find that the best model has a la beled precision of 68.8 and a labeled recall of 31.4.",
                    "sid": 113,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corresponding unlabeled figures are 73.3 and 33.4.",
                    "sid": 114,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 This confirms the results of previous studiesshowing that the pseudo-projective parsing technique used by MaltParser tends to give high pre cision ? given that non-projective dependencies are among the most difficult to parse correctly ? but rather low recall (McDonald and Nivre, 2007).",
                    "sid": 115,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also worth mentioning that phantom tokens,i.e., empty tokens inserted for the analysis of cer tain elliptical constructions (see section 2), have a labeled precision of 82.4 and a labeled recall of 82.8 (89.2 and 89.6 unlabeled), which is very close to the average accuracy, despite being very infrequent.",
                    "sid": 116,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it must be remembered that these tokens were given as part of the input in these experiments.",
                    "sid": 117,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to correctly analysethese tokens and their dependencies when pars ing raw text, they would have to be recovered in a pre-processing phase along the lines of Dienes 3The precision is the percentage of non-projective depen dencies predicted by the parser that were correct, while the recall is the percentage of true non-projective dependencies that were correctly predicted by the parser.",
                    "sid": 118,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "646 and Dubey (2003).Summing up, the main result of the experimental evaluation is that both morphological and lexical features are crucial for attaining high accuracy when training and evaluating on the repre sentations found in the SYNTAGRUS treebank of Russian.",
                    "sid": 119,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With regard to morphological features this is in line with a number of recent studiesshowing the importance of morphology for parsing languages with less rigid word order, includ ing work on Spanish (Cowan and Collins, 2005), Hebrew (Tsarfaty, 2006; Tsarfaty and Sima?an, 2007), Turkish (Eryigit et al, 2006), and Swedish (?vrelid and Nivre, 2007).",
                    "sid": 120,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With regard to lexical features, the situation ismore complex in that there are a number of stud ies questioning the usefulness of lexical features in statistical parsing and arguing that equivalentor better results can be achieved with unlexical ized models provided that linguistic categories can be split flexibly into more fine-grained categories, either using hand-crafted splits, as in the seminalwork of Klein and Manning (2003), or using hid den variables and unsupervised learning, as in the more recent work by Petrov et al (2006), amongothers.",
                    "sid": 121,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are even studies showing that lexicalization can be harmful when parsing richly in flected languages like German (Dubey and Keller, 2003) and Turkish (Eryi?git and Oflazer, 2006).",
                    "sid": 122,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it is worth noting that most of these results have been obtained either for models ofconstituency-based parsing or for models of de pendency parsing suffering from sparse data.",
                    "sid": 123,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 In the experiments presented here, we have used a transition-based model for dependency parsingthat has much fewer parameters than state-of-the art probabilistic models for constituency parsing.",
                    "sid": 124,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, we have been able to use a relatively large training set, thereby minimizing the effect ofsparseness for lexical features.",
                    "sid": 125,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We therefore con jecture that the beneficial effect of lexical features on parsing accuracy will generalize to other richly inflected languages when similar conditions hold.",
                    "sid": 126,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As far as we know, these are the first results for a large-scale data-driven parser for Russian.",
                    "sid": 127,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There do exist several rule-based parsers for Russian, such as the ETAP-3 parser (Apresian et al, 2003) and a Link Grammar parser, 5 as well as a prototypeof a hybrid system based on the ETAP-3 parser en 4The latter case applies to the probabilistic model of de pendency parsing explored by Eryi?git and Oflazer (2006).",
                    "sid": 128,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 http://sz.ru/parser/ riched with statistics extracted from SYNTAGRUS(Boguslavsky et al, 2003; Chardin, 2004), but differences in both input format and output representations make it difficult to compare the perfor mance directly.",
                    "sid": 129,
                    "ssid": 49,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "5",
            "sents": [
                {
                    "text": "We have presented the first results on parsing theSYNTAGRUS treebank of Russian using a data driven dependency parser.",
                    "sid": 130,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Besides establishing a first benchmark for the SYNTAGRUS treebank, we have analyzed the influence of different kindsof features on parsing accuracy, showing conclu sively that both lexical and morphological features are crucial for obtaining good parsing accuracy.",
                    "sid": 131,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hypothesize that this result can be generalized to other richly inflected languages, provided that sufficient amounts of data are available.Future work includes a deeper analysis of the in fluence of individual features, both morphological and lexical, as well as an evaluation of the parserunder more realistic conditions without gold stan dard annotation in the input.",
                    "sid": 132,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This will require notonly automatic morphological analysis and disambiguation but also a mechanism for inserting so called phantom tokens in elliptical constructions.",
                    "sid": 133,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acknowledgments We want to thank Ivan Chardin for initiating this collaboration and Jens Nilsson for converting the SYNTAGRUS data to the CoNLL format.",
                    "sid": 134,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We aregrateful to the Russian Foundation of Basic Re search for partial support of this research (grant no. 07-06-00339).",
                    "sid": 135,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}