{
    "ID": "A00-2005",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Bagging And Boosting A Treebank Parser",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bagging and boosting, two effective machine learning techniques, are applied to natural language parsing.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Experiments using these techniques with a trainable statistical parser are described.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The best resulting system provides roughly as large of a gain in F-measure as doubling the corpus size.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Error analysis of the result of the boosting technique reveals some inconsistent annotations in the Penn Treebank, suggesting a semi-automatic method for finding inconsistent treebank annotations.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Henderson and Brill (1999) showed that independent human research efforts produce parsers that can be combined for an overall boost in accuracy.",
                    "sid": 5,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finding an ensemble of parsers designed to complement each other is clearly desirable.",
                    "sid": 6,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parsers would need to be the result of a unified research effort, though, in which the errors made by one parser are targeted with priority by the developer of another parser.",
                    "sid": 7,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A set of five parsers which each achieve only 40% exact sentence accuracy would be extremely valuable if they made errors in such a way that at least two of the five were correct on any given sentence (and the others abstained or were wrong in different ways).",
                    "sid": 8,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "100% sentence accuracy could be achieved by selecting the hypothesis that was proposed by the two parsers that agreed completely.",
                    "sid": 9,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, the task of automatically creating complementary parsers is separated from the task of creating a single parser.",
                    "sid": 10,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This facilitates study of the ensemble creation techniques in isolation.",
                    "sid": 11,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The result is a method for increasing parsing performance by creating an ensemble of parsers, each produced from data using the same parser induction algorithm.",
                    "sid": 12,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 bagging and parsing",
            "number": "2",
            "sents": [
                {
                    "text": "The work of Efron and Tibshirani (1993) enabled Breiman's refinement and application of their techniques for machine learning (Breiman, 1996).",
                    "sid": 13,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "His technique is called bagging, short for &quot;bootstrap aggregating&quot;.",
                    "sid": 14,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In brief, bootstrap techniques and bagging in particular reduce the systematic biases many estimation techniques introduce by aggregating estimates made from randomly drawn representative resamplings of those datasets.",
                    "sid": 15,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bagging attempts to find a set of classifiers which are consistent with the training data, different from each other, and distributed such that the aggregate sample distribution approaches the distribution of samples in the training set.",
                    "sid": 16,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "algorithm: bagging predictors (breiman, 1996) (1)",
            "number": "3",
            "sents": [
                {
                    "text": "Given: training set G = {(yi, x\u201e), i E {1 m}} drawn from the set A of possible training sets where y, is the label for example x.\u201e classification induction in the test set, y, = mode% (xi) 03(x,)). y, is the value predicted by the most predictors, the majority vote.",
                    "sid": 17,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An algorithm that applies the technique of bagging to parsing is given in Algorithm 2.",
                    "sid": 18,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Previous work on combining independent parsers is leveraged to produce the combined parser.",
                    "sid": 19,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rest of the algorithm is a straightforward transformation of bagging for classifiers.",
                    "sid": 20,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Exploratory work in this vein was described by Haji t et al. (1999).",
                    "sid": 21,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given: A corpus (again as a function) C : SxT N, S is the set of possible sentences, and T is the set of trees, with size m = iCl = c(s, t) and parser induction algorithm g. picked from the domain of C according to the distribution D(s.t) = C(s.t)IICI.",
                    "sid": 22,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each bootstrap replicate is a bag of samples, where each sample in a bag is drawn randomly with replacement from the bag corresponding to C. The training set for these experiments was sections 01-21 of the Penn Treebank (Marcus et al., 1993).",
                    "sid": 23,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The test set was section 23.",
                    "sid": 24,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser induction algorithm used in all of the experiments in this paper was a distribution of Collins's model 2 parser (Collins, 1997).",
                    "sid": 25,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All comparisons made below refer to results we obtained using Collins's parser.",
                    "sid": 26,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results for bagging are shown in Figure 2 and Table 1.",
                    "sid": 27,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The row of figures are (from left-to-right) training set F-measurel , test set F-measure, percent perfectly parsed sentences in training set, and percent perfectly parsed sentences in test set.",
                    "sid": 28,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An ensemble of bags was produced one bag at a time.",
                    "sid": 29,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the table, the Initial row shows the performance achieved when the ensemble contained only one bag, Final (X) shows the performance when the ensemble contained X bags, BestF gives the performance of the ensemble size that gave the best F-measure score.",
                    "sid": 30,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "TrainBestF and TestBestF give the test set performance for the ensemble size that performed the best on the training and test sets, respectively.",
                    "sid": 31,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the training set all of the accuracy measures are improved over the original parser, and on the test set there is clear improvement in precision and recall.",
                    "sid": 32,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The improvement on exact sentence accuracy for the test set is significant, but only marginally so.",
                    "sid": 33,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The overall gain achieved on the test set by bagging was 0.8 units of F-measure, but because the entire corpus is not used in each bag the initial performance is approximately 0.2 units below the best previously reported result.",
                    "sid": 34,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The net gain using this technique is 0.6 units of F-measure.",
                    "sid": 35,
                    "ssid": 19,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 boosting",
            "number": "4",
            "sents": [
                {
                    "text": "The AdaBoost algorithm was presented by Freund and Schapire in 1996 (Freund and Schapire, 1996; Freund and Schapire, 1997) and has become a widely-known successful method in machine learning.",
                    "sid": 36,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The AdaBoost algorithm imposes one constraint on its underlying learner: it may abstain from making predictions about labels of some samples, 'This is the balanced version of F-measure, where precision and recall are weighted equally. but it must consistently be able to get more than 50% accuracy on the samples for which it commits to a decision.",
                    "sid": 37,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That accuracy is measured according to the distribution describing the importance of samples that it is given.",
                    "sid": 38,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The learner must be able to get more correct samples than incorrect samples by mass of importance on those that it labels.",
                    "sid": 39,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This statement of the restriction comes from Schapire and Singer's study (1998).",
                    "sid": 40,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is called the weak learning criterion.",
                    "sid": 41,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Schapire and Singer (1998) extended AdaBoost by describing how to choose the hypothesis mixing coefficients in certain circumstances and how to incorporate a general notion of confidence scores.",
                    "sid": 42,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also provided a better characterization of its theoretical performance.",
                    "sid": 43,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The version of AdaBoost used in their work is shown in Algorithm 3, as it is the version that most amenable to parsing.",
                    "sid": 44,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Freund and Schapire, 1997) (3) Given: Training set G as in bagging, except y, E {-1, 1} is the label for example x2.",
                    "sid": 45,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initial uniform distribution D1(i) --= 1/m.",
                    "sid": 46,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Number of iterations, T. Counter t =1.",
                    "sid": 47,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "W, cl), and 0 are as in Bagging.",
                    "sid": 48,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The value of at should generally be chosen to minimize in order to minimize the expected per-sample training error of the ensemble, which Schapire and Singer show can be concisely expressed by n Z.",
                    "sid": 49,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also give several examples for how to pick an appropriate a, and selection generally depends on the possible outputs of the underlying learner.",
                    "sid": 50,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Boosting has been used in a few NLP systems.",
                    "sid": 51,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Haruno et al. (1998) used boosting to produce more accurate classifiers which were embedded as control mechanisms of a parser for Japanese.",
                    "sid": 52,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The creators of AdaBoost used it to perform text classification (Schapire and Singer, 2000).",
                    "sid": 53,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Abney et al. (1999) performed part-of-speech tagging and prepositional phrase attachment using AdaBoost as a core component.",
                    "sid": 54,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They found they could achieve accuracies on both tasks that were competitive with the state of the art.",
                    "sid": 55,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a side effect, they found that inspecting the samples that were consistently given the most weight during boosting revealed some faulty annotations in the corpus.",
                    "sid": 56,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all of these systems, AdaBoost has been used as a traditional classification system.",
                    "sid": 57,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our goal is to recast boosting for parsing while considering a parsing system as the embedded learner.",
                    "sid": 58,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The formulation is given in Algorithm 4.",
                    "sid": 59,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The intuition behind the additive form is that the weight placed on a sentence should be the sum of the weight we would like to place on its constituents.",
                    "sid": 60,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The weight on constituents that are predicted incorrectly are adjusted by a factor of 1 in contrast to a factor of a for those that are predicted incorrectly.",
                    "sid": 61,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given corpus C with size m C = Es, c(s. t) and parser induction algorithm g. Initial uniform distribution Di (i) = 1/m.",
                    "sid": 62,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Number of iterations, T. Counter t = 1. tree 77 MM.",
                    "sid": 63,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let (5(7-. c) be a function indicating that c is in parse tree r, and I TI is the number of constituents in tree T. T(s) is the set of constituents that are found in the reference or hypothesized annotation for s. 7.",
                    "sid": 64,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The final hypothesis is computed by combining the individual constituents.",
                    "sid": 65,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each parser Ot in the ensemble gets a vote with weight at for the constituents they predict.",
                    "sid": 66,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precisely those constituents with weight strictly larger than Et at are put into the final hypothesis.",
                    "sid": 67,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A potential constituent can be considered correct if it is predicted in the hypothesis and it exists in the reference, or it is not predicted and it is not in the reference.",
                    "sid": 68,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Potential constituents that do not appear in the hypothesis or the reference should not make a big contribution to the accuracy computation.",
                    "sid": 69,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are many such potential constituents, and if we were maximizing a function that treated getting them incorrect the same as getting a constituent that appears in the reference correct, we would most likely decide not to predict any constituents.",
                    "sid": 70,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our model of constituent accuracy is thus simple.",
                    "sid": 71,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each prediction correctly made over T(s) will be given equal weight.",
                    "sid": 72,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, correctly hypothesizing a constituent in the reference will give us one point, but a precision or recall error will cause us to miss one point.",
                    "sid": 73,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Constituent accuracy is then a/(a+b+c), where a is the number of constituents correctly hypothesized, b is the number of precision errors and c is the number of recall errors.",
                    "sid": 74,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Equation 1, a computation of aca as described is shown.",
                    "sid": 75,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Boosting algorithms were developed that attempted to maximize F-measure, precision, and recall by varying the computation of a, giving results too numerous to include here.",
                    "sid": 76,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm given here performed the best of the lot, but was only marginally better for some metrics.",
                    "sid": 77,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental results for boosting are shown in Figure 3 and Table 2.",
                    "sid": 78,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a large plateau in performance from iterations 5 through 12.",
                    "sid": 79,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because of their low accuracy and high degree of specialization, the parsers produced in these iterations had little weight during voting and had little effect on the cumulative decision making.",
                    "sid": 80,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in the bagging experiment, it appears that there would be more precision and recall gain to be had by creating a larger ensemble.",
                    "sid": 81,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In both the bagging and boosting experiments time and resource constraints dictated our ensemble size.",
                    "sid": 82,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the table we see that the boosting algorithm equaled bagging's test set gains in precision and recall.",
                    "sid": 83,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Initial performance for boosting was lower, though.",
                    "sid": 84,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We cannot explain this, and expect it is due to unfortunate resampling of the data during the first iteration of boosting.",
                    "sid": 85,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Exact sentence accuracy, though, was not significantly improved on the test set.",
                    "sid": 86,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, we prefer bagging to boosting for this problem when raw performance is the goal.",
                    "sid": 87,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are side effects of boosting that are useful in other respects, though, which we explore in Section 4.2.",
                    "sid": 88,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It was hypothesized in the course of investigating the failures of the boosting algorithm that the parser induction system did not satisfy the weak learning criterion.",
                    "sid": 89,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It was noted that the distribution of boosting weights were more skewed in later iterations.",
                    "sid": 90,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Inspection of the sentences that were getting much mass placed upon them revealed that their weight was being boosted in every iteration.",
                    "sid": 91,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The hypothesis was that the parser was simply unable to learn them.",
                    "sid": 92,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "39832 parsers were built to test this, one for each sentence in the training set.",
                    "sid": 93,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of these parsers was trained on only a single sentence' and evaluated on the same sentence.",
                    "sid": 94,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It was discovered that a full 4764 (11.2%) of these sentences could not be parsed completely correctly by the parsing system.",
                    "sid": 95,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to evaluate how well boosting worked with a learner that better satisfied the weak learning criterion, the boosting experiment was run again on the Treebank minus the troublesome sentences described above.",
                    "sid": 96,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results are in Table 3.",
                    "sid": 97,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This dataset produces a larger gain in comparison to the results using the entire Treebank.",
                    "sid": 98,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The initial accuracy, however, is lower.",
                    "sid": 99,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hypothesize that the boosting algorithm did perform better here, but the parser induction system was learning useful information in those sentences that it could not memorize (e.g. lexical information) that was successfully applied to the test set.",
                    "sid": 100,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this manner we managed to clean our dataset to the point that the parser could learn each sentence in isolation.",
                    "sid": 101,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpus-makers cannot necessarily be blamed for the sentences that could not be memorized.",
                    "sid": 102,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All that can be said about those sentences is that for better or worse, the parser's model would not accommodate them.",
                    "sid": 103,
                    "ssid": 68,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 corpus analysis",
            "number": "5",
            "sents": [
                {
                    "text": "To acquire experimental evidence of noisy data, distributions that were used during boosting the stable corpus were inspected.",
                    "sid": 104,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The distribution was expected to be skewed if there was noise in the data, or be uniform with slight fluctuations if it fit the data well.",
                    "sid": 105,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We see how the boosting weight distribution changes in Figure 1.",
                    "sid": 106,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The individual curves are indexed by boosting iteration in the key of the figure.",
                    "sid": 107,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This training run used a corpus of 5000 sentences.",
                    "sid": 108,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The sentences are ranked by the weight they are given in the distribution, and sorted in decreasing order by weight along the x-axis.",
                    "sid": 109,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The distribution was smoothed by putting samples into equal weight bins, and reporting the average mass of samples in the bin as the y-coordinate.",
                    "sid": 110,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each curve on this graph corresponds to a boosting iteration.",
                    "sid": 111,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used 1000 bins for this graph, and a log scale on the x-axis.",
                    "sid": 112,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since there were 5000 samples, all samples initially had a y-value of 0.0002.",
                    "sid": 113,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice first that the left endpoints of the lines move from bottom to top in order of boosting iteration.",
                    "sid": 114,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The distribution becomes monotonically more skewed as boosting progresses.",
                    "sid": 115,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly we see by the last iteration that most of the weight is concentrated on less than 100 samples.",
                    "sid": 116,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This graph shows behavior consistent with noise in the corpus on which the boosting algorithm is focusing.",
                    "sid": 117,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are sentences in the corpus that can be learned by the parser induction algorithm in isolation but not in concert because they contain conflicting information.",
                    "sid": 118,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finding these sentences leads to a better understanding of the quality of our corpus, and gives an idea for where improvements in annotation quality can be made.",
                    "sid": 119,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Abney et al. (1999) showed a similar corpus analysis technique for part of speech tagging and prepositional phrase tagging, but for parsing we must remove errors introduced by the parser as we did in Section 3.3.2 before questioning the corpus quality.",
                    "sid": 120,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A particular class of errors, inconsistencies, can then be investigated.",
                    "sid": 121,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Inconsistent annotations are those that appear plausible in isolation, but which conflict with annotation decisions made elsewhere in the corpus.",
                    "sid": 122,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Figure 5 we show a set of trees selected from within the top 100 most heavily weighted trees at the end of 15 iterations of boosting the stable corpus.Collins's parser induction system is able to learn to produce any one of these structures in isolation, but the presence of conflicting information in different sentences prevents it from achieving 100% accuracy on the set.",
                    "sid": 123,
                    "ssid": 20,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 training corpus size effects",
            "number": "6",
            "sents": [
                {
                    "text": "We suspect our best parser diversification techniques gives performance gain approximately equal to doubling the size of the training set.",
                    "sid": 124,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While this cannot be directly tested without hiring more annotators, an expected performance bound for a larger training set can be produced by extrapolating from how well the parser performs using smaller training sets.",
                    "sid": 125,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are two characteristics of training curves for large corpora that can provide such a bound: training curves generally increase monotonically in the absence of over-training, and their first derivatives generally decrease monotonically.",
                    "sid": 126,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The training curves we present in Figure 4 and Table 4 suggest that roughly doubling the corpus size in the range of interest (between 10000 and 40000 sentences) gives a test set F-measure gain of approximately 0.70.",
                    "sid": 127,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bagging achieved significant gains of approximately 0.60 over the best reported previous Fmeasure without adding any new data.",
                    "sid": 128,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this respect, these techniques show promise for making performance gains on large corpora without adding more data or new parsers.",
                    "sid": 129,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 conclusion",
            "number": "7",
            "sents": [
                {
                    "text": "We have shown two methods, bagging and boosting, for automatically creating ensembles of parsers that produce better parses than any individual in the ensemble.",
                    "sid": 130,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Neither of the algorithms exploit any specialized knowledge of the underlying parser induction algorithm, and the data used in creating the ensembles has been restricted to a single common training set to avoid issues of training data quantity affecting the outcome.",
                    "sid": 131,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our best bagging system performed consistently well on all metrics, including exact sentence accuracy.",
                    "sid": 132,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It resulted in a statistically significant Fmeasure gain of 0.6 over the performance of the baseline parser.",
                    "sid": 133,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That baseline system is the best known Treebank parser.",
                    "sid": 134,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This gain compares favorably with a bound on potential gain from increasing the corpus size.",
                    "sid": 135,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even though it is computationally expensive to create and evaluate a small (15-30) ensemble of parsers, the cost is far outweighed by the opportunity cost of hiring humans to annotate 40000 more sentences.",
                    "sid": 136,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The economic basis for using ensemble methods will continue to improve with the increasing value (performance per price) of modern hardware.",
                    "sid": 137,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our boosting system, although dominated by the bagging system, also performed significantly better than the best previously known individual parsing result.",
                    "sid": 138,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have shown how to exploit the distribution created as a side-effect of the boosting algorithm to uncover inconsistencies in the training corpus.",
                    "sid": 139,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A semi-automated technique for doing this as well as examples from the Treebank that are inconsistently annotated were presented.",
                    "sid": 140,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Perhaps the biggest advantage of this technique is that it requires no a priori notion of how the inconsistencies can be characterized.",
                    "sid": 141,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "7 acknowledgments",
            "number": "8",
            "sents": [
                {
                    "text": "We would like to thank Michael Collins for enabling all of this research by providing us with his parser and helpful comments.",
                    "sid": 142,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This work was funded by NSF grant IRI-9502312.",
                    "sid": 143,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The views expressed in this paper are those of the authors and do not necessarily reflect the views of the MITRE Corporation.",
                    "sid": 144,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This work was done while both authors were at Johns Hopkins University.",
                    "sid": 145,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}