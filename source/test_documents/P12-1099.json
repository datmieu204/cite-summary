{
    "ID": "P12-1099",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Mixing Multiple Translation Models in Statistical Machine Translation",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Statistical machine translation is often faced with the problem of combining training data from many diverse sources into a single translation model which then has to translate sentences in a new domain.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose a novel approach, ensemble decoding, which combines a number of translation systems dynamically at the decoding step.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we evaluate performance on a domain adaptation setting where we translate sentences from the medical domain.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experimental results show that ensemble decoding outperforms various strong baselines including mixture models, the current state-of-the-art for domain adaptation in machine translation.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Statistical machine translation (SMT) systems require large parallel corpora in order to be able to obtain a reasonable translation quality.",
                    "sid": 5,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In statistical learning theory, it is assumed that the training and test datasets are drawn from the same distribution, or in other words, they are from the same domain.",
                    "sid": 6,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, bilingual corpora are only available in very limited domains and building bilingual resources in a new domain is usually very expensive.",
                    "sid": 7,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is an interesting question whether a model that is trained on an existing large bilingual corpus in a specific domain can be adapted to another domain for which little parallel data is present.",
                    "sid": 8,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Domain adaptation techniques aim at finding ways to adjust an out-of-domain (OUT) model to represent a target domain (in-domain or IN).",
                    "sid": 9,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Common techniques for model adaptation adapt two main components of contemporary state-of-theart SMT systems: the language model and the translation model.",
                    "sid": 10,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, language model adaptation is a more straight-forward problem compared to translation model adaptation, because various measures such as perplexity of adapted language models can be easily computed on data in the target domain.",
                    "sid": 11,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a result, language model adaptation has been well studied in various work (Clarkson and Robinson, 1997; Seymore and Rosenfeld, 1997; Bacchiani and Roark, 2003; Eck et al., 2004) both for speech recognition and for machine translation.",
                    "sid": 12,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also easier to obtain monolingual data in the target domain, compared to bilingual data which is required for translation model adaptation.",
                    "sid": 13,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we focused on adapting only the translation model by fixing a language model for all the experiments.",
                    "sid": 14,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expect domain adaptation for machine translation can be improved further by combining orthogonal techniques for translation model adaptation combined with language model adaptation.",
                    "sid": 15,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, a new approach for adapting the translation model is proposed.",
                    "sid": 16,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use a novel system combination approach called ensemble decoding in order to combine two or more translation models with the goal of constructing a system that outperforms all the component models.",
                    "sid": 17,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The strength of this system combination method is that the systems are combined in the decoder.",
                    "sid": 18,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This enables the decoder to pick the best hypotheses for each span of the input.",
                    "sid": 19,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The main applications of ensemble models are domain adaptation, domain mixing and system combination.",
                    "sid": 20,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have modified Kriya (Sankaran et al., 2012), an in-house implementation of hierarchical phrase-based translation system (Chiang, 2005), to implement ensemble decoding using multiple translation models.",
                    "sid": 21,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compare the results of ensemble decoding with a number of baselines for domain adaptation.",
                    "sid": 22,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition to the basic approach of concatenation of in-domain and out-of-domain data, we also trained a log-linear mixture model (Foster and Kuhn, 2007) as well as the linear mixture model of (Foster et al., X\u03bb\ufffd =argmax \ufffdp(e, f) log M \u03bbmpm(\ufffde |f) 2010) for conditional phrase-pair probabilities over a fe, X IN and OUT.",
                    "sid": 23,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, within the framework of m ensemble decoding, we study and evaluate various methods for combining translation tables.",
                    "sid": 24,
                    "ssid": 20,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 baselines",
            "number": "2",
            "sents": [
                {
                    "text": "The natural baseline for model adaption is to concatenate the IN and OUT data into a single parallel corpus and train a model on it.",
                    "sid": 25,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition to this baseline, we have experimented with two more sophisticated baselines which are based on mixture techniques.",
                    "sid": 26,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Log-linear translation model (TM) mixtures are of the form: where m ranges over IN and OUT, pm(e |f) is an estimate from a component phrase table, and each \u03bbm is a weight in the top-level log-linear model, set so as to maximize dev-set BLEU using minimum error rate training (Och, 2003).",
                    "sid": 27,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We learn separate weights for relative-frequency and lexical estimates for both pm(e |f) and pm(\ufffdf|e).",
                    "sid": 28,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, for 2 component models (from IN and OUT training corpora), there are 4 * 2 = 8 TM weights to tune.",
                    "sid": 29,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whenever a phrase pair does not appear in a component phrase table, we set the corresponding pm(e |f) to a small epsilon value.",
                    "sid": 30,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our technique for setting \u03bbm is similar to that outlined in Foster et al. (2010).",
                    "sid": 31,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first extract a joint phrase-pair distribution p(e, f) from the development set using standard techniques (HMM word alignment with grow-diag-and symmeterization (Koehn et al., 2003)).",
                    "sid": 32,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then find the set of weights \u03bb\ufffd that minimize the cross-entropy of the mixture p(e |f) with respect to ,5(e, f): For efficiency and stability, we use the EM algorithm to find \ufffd\u03bb, rather than L-BFGS as in (Foster et al., 2010).",
                    "sid": 33,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whenever a phrase pair does not appear in a component phrase table, we set the corresponding pm(e |f) to 0; pairs in p(e, f) that do not appear in at least one component table are discarded.",
                    "sid": 34,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We learn separate linear mixtures for relative-frequency and lexical estimates for both p(e|\ufffdf) and p(\ufffdf|e).",
                    "sid": 35,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These four features then appear in the top-level model as usual \u2013 there is no runtime cost for the linear mixture.",
                    "sid": 36,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 ensemble decoding",
            "number": "3",
            "sents": [
                {
                    "text": "Ensemble decoding is a way to combine the expertise of different models in one single model.",
                    "sid": 37,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current implementation is able to combine hierarchical phrase-based systems (Chiang, 2005) as well as phrase-based translation systems (Koehn et al., 2003).",
                    "sid": 38,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the method can be easily extended to support combining a number of heterogeneous translation systems e.g. phrase-based, hierarchical phrase-based, and/or syntax-based systems.",
                    "sid": 39,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section explains how such models can be combined during the decoding.",
                    "sid": 40,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a number of translation models which are already trained and tuned, the ensemble decoder uses hypotheses constructed from all of the models in order to translate a sentence.",
                    "sid": 41,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the bottomup CKY parsing algorithm for decoding.",
                    "sid": 42,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each sentence, a CKY chart is constructed.",
                    "sid": 43,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The cells of the CKY chart are populated with appropriate rules from all the phrase tables of different components.",
                    "sid": 44,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in the Hiero SMT system (Chiang, 2005), the cells which span up to a certain length (i.e. the maximum span length) are populated from the phrasetables and the rest of the chart uses glue rules as defined in (Chiang, 2005).",
                    "sid": 45,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules suggested from the component models are combined in a single set.",
                    "sid": 46,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some of the rules may be unique and others may be common with other component model rule sets, though with different scores.",
                    "sid": 47,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, we need to combine the scores of such common rules and assign a single score to them.",
                    "sid": 48,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Depending on the mixture operation used for combining the scores, we would get different mixture scores.",
                    "sid": 49,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of mixture operation will be discussed in Section 3.1.",
                    "sid": 50,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 illustrates how the CKY chart is filled with the rules.",
                    "sid": 51,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each cell, covering a span, is populated with rules from all component models as well as from cells covering a sub-span of it.",
                    "sid": 52,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the typical log-linear model SMT, the posterior probability for each phrase pair (e, f) is given by: other models\u2019 rules are discarded.",
                    "sid": 53,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is based on the hypothesis that each component model is an expert on certain parts of sentence.",
                    "sid": 54,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this method, we need to define a binary indicator function \u03b4(\ufffdf, m) for each span and component model to specify rules of which model to retain for each span.",
                    "sid": 55,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2013 Sum: Instead of comparing only the scores of the best rules, the model with the highest weighted sum of the probabilities of the rules wins.",
                    "sid": 56,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This sum has to take into account the translation table limit (ttl), on the number of rules suggested by each model for each cell: The probability of each phrase-pair (e, f) is computed as: Ensemble decoding uses the same framework for each individual system.",
                    "sid": 57,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, the score of a phrase-pair (e, f) in the ensemble model is: where \u2295 denotes the mixture operation between two or more model scores.",
                    "sid": 58,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mixture operations receive two or more scores (probabilities) and return the mixture score (probability).",
                    "sid": 59,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section, we explore different options for mixture operation and discuss some of the characteristics of these mixture operations. where m denotes the index of component models, M is the total number of them and \u03bbi is the weight for component i. generally known as Logarithmic Opinion Pools (LOPs) where: Product models have been used in combining LMs and TMs in SMT as well as some other NLP tasks such as ensemble parsing (Petrov, 2010).",
                    "sid": 60,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of these mixture operations has a specific property that makes it work in specific domain adaptation or system combination scenarios.",
                    "sid": 61,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, LOPs may not be optimal for domain adaptation in the setting where there are two or more models trained on heterogeneous corpora.",
                    "sid": 62,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As discussed in (Smith et al., 2005), LOPs work best when all the models accuracies are high and close to each other with some degree of diversity.",
                    "sid": 63,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LOPs give veto power to any of the component models and this perfectly works for settings such as the one in (Petrov, 2010) where a number of parsers are trained by changing the randomization seeds but having the same base parser and using the same training set.",
                    "sid": 64,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They noticed that parsers trained using different randomization seeds have high accuracies but there are some diversities among them and they used product models for their advantage to get an even better parser.",
                    "sid": 65,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that each of the models is expert in some parts and so they do not necessarily agree on correct hypotheses.",
                    "sid": 66,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, product models (or LOPs) tend to have intersection-style effects while we are more interested in union-style effects.",
                    "sid": 67,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Section 4.2, we compare the BLEU scores of different mixture operations on a French-English experimental setup.",
                    "sid": 68,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since in log-linear models, the model scores are not normalized to form probability distributions, the scores that different models assign to each phrasepair may not be in the same scale.",
                    "sid": 69,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, mixing their scores might wash out the information in one (or some) of the models.",
                    "sid": 70,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We experimented with two different ways to deal with this normalization issue.",
                    "sid": 71,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A practical but inexact heuristic is to normalize the scores over a shorter list.",
                    "sid": 72,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So the list of rules coming from each model for a cell in CKY chart is normalized before getting mixed with other phrase-table rules.",
                    "sid": 73,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, experiments showed changing the scores with the normalized scores hurts the BLEU score radically.",
                    "sid": 74,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So we use the normalized scores only for pruning and the actual scores are intact.",
                    "sid": 75,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We could also globally normalize the scores to obtain posterior probabilities using the inside-outside algorithm.",
                    "sid": 76,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we did not try it as the BLEU scores we got using the normalization heuristic was not promissing and it would impose a cost in decoding as well.",
                    "sid": 77,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More investigation on this issue has been left for future work.",
                    "sid": 78,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A more principled way is to systematically find the most appropriate model weights that can avoid this problem by scaling the scores properly.",
                    "sid": 79,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used a publicly available toolkit, CONDOR (Vanden Berghen and Bersini, 2005), a direct optimizer based on Powell\u2019s algorithm, that does not require explicit gradient information for the objective function.",
                    "sid": 80,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Component weights for each mixture operation are optimized on the dev-set using CONDOR.",
                    "sid": 81,
                    "ssid": 45,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 experiments & results",
            "number": "4",
            "sents": [
                {
                    "text": "We carried out translation experiments using the European Medicines Agency (EMEA) corpus (Tiedemann, 2009) as IN, and the Europarl (EP) corpus1 as OUT, for French to English translation.",
                    "sid": 82,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dev and test sets were randomly chosen from the EMEA corpus.2 The details of datasets used are summarized in For the mixture baselines, we used a standard one-pass phrase-based system (Koehn et al., 2003), Portage (Sadat et al., 2005), with the following 7 features: relative-frequency and lexical translation model (TM) probabilities in both directions; worddisplacement distortion model; language model (LM) and word count.",
                    "sid": 83,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpus was word-aligned using both HMM and IBM2 models, and the phrase table was the union of phrases extracted from these separate alignments, with a length limit of 7.",
                    "sid": 84,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It was filtered to retain the top 20 translations for each source phrase using the TM part of the current loglinear model.",
                    "sid": 85,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For ensemble decoding, we modified an in-house implementation of hierarchical phrase-based system, Kriya (Sankaran et al., 2012) which uses the same features mentioned in (Chiang, 2005): forward and backward relative-frequency and lexical TM probabilities; LM; word, phrase and glue-rules penalty.",
                    "sid": 86,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "GIZA++(Och and Ney, 2000) has been used for word alignment with phrase length limit of 7.",
                    "sid": 87,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In both systems, feature weights were optimized using MERT (Och, 2003) and with a 5-gram language model and Kneser-Ney smoothing was used in all the experiments.",
                    "sid": 88,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used SRILM (Stolcke, 2002) as the langugage model toolkit.",
                    "sid": 89,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fixing the language model allows us to compare various translation model combination techniques.",
                    "sid": 90,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4.2 results",
            "number": "5",
            "sents": [
                {
                    "text": "Table 2 shows the results of the baselines.",
                    "sid": 91,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first group are the baseline results on the phrase-based system discussed in Section 2 and the second group are those of our hierarchical MT system.",
                    "sid": 92,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the Hiero baselines results were substantially better than those of the phrase-based model, we also implemented the best-performing baseline, linear mixture, in our Hiero-style MT system and in fact it achieves the hights BLEU score among all the baselines as shown in Table 2.",
                    "sid": 93,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This baseline is run three times the score is averaged over the BLEU scores with standard deviation of 0.34.",
                    "sid": 94,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 shows the results of ensemble decoding with different mixture operations and model weight settings.",
                    "sid": 95,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each mixture operation has been evaluated on the test-set by setting the component weights uniformly (denoted by uniform) and by tuning the weights using CONDOR (denoted by tuned) on a held-out set.",
                    "sid": 96,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tuned scores (3rd column in Table 3) are averages of three runs with different initial points as in Clark et al. (2011).",
                    "sid": 97,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also reported the BLEU scores when we applied the span-wise normalization heuristic.",
                    "sid": 98,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All of these mixture operations were able to significantly improve over the concatenation baseline.",
                    "sid": 99,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, Switching:Max could gain up to 2.2 BLEU points over the concatenation baseline and 0.39 BLEU points over the best performing baseline (i.e.",
                    "sid": 100,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "linear mixture model implemented in Hiero) which is statistically significant based on Clark et al. (2011) (p = 0.02).",
                    "sid": 101,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Prod when using with uniform weights gets the lowest score among the mixture operations, however after tuning, it learns to bias the weights towards one of the models and hence improves by 1.31 BLEU points.",
                    "sid": 102,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although Switching:Sum outperforms the concatenation baseline, it is substantially worse than other mixture operations.",
                    "sid": 103,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One explanation that Switching:Max is the best performing operation and Switching:Sum is the worst one, despite their similarities, is that Switching:Max prefers more peaked distributions while Switching:Sum favours a model that has fewer hypotheses for each span.",
                    "sid": 104,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An interesting observation based on the results in Table 3 is that uniform weights are doing reasonably well given that the component weights are not optimized and therefore model scores may not be in the same scope (refer to discussion in \u00a73.2).",
                    "sid": 105,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We suspect this is because a single LM is shared between both models.",
                    "sid": 106,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This shared component controls the variance of the weights in the two models when combined with the standard L-1 normalization of each model\u2019s weights and hence prohibits models to have too varied scores for the same input.",
                    "sid": 107,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though, it may not be the case when multiple LMs are used which are not shared.",
                    "sid": 108,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two sample sentences from the EMEA test-set along with their translations by the IN, OUT and Ensemble models are shown in Figure 2.",
                    "sid": 109,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The boxes show how the Ensemble model is able to use ngrams from the IN and OUT models to construct a better translation than both of them.",
                    "sid": 110,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first example, there are two OOVs one for each of the IN and OUT models.",
                    "sid": 111,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach is able to resolve the OOV issues by taking advantage of the other model\u2019s presence.",
                    "sid": 112,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, the second example shows how ensemble decoding improves lexical choices as well as word re-orderings.",
                    "sid": 113,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 related work",
            "number": "6",
            "sents": [
                {
                    "text": "Early approaches to domain adaptation involved information retrieval techniques where sentence pairs related to the target domain were retrieved from the training corpus using IR methods (Eck et al., 2004; Hildebrand et al., 2005).",
                    "sid": 114,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Foster et al. (2010), however, uses a different approach to select related sentences from OUT.",
                    "sid": 115,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They use language model perplexities from IN to select relavant sentences from OUT.",
                    "sid": 116,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These sentences are used to enrich the IN training set.",
                    "sid": 117,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other domain adaptation methods involve techniques that distinguish between general and domainspecific examples (Daum\u00b4e and Marcu, 2006).",
                    "sid": 118,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Jiang and Zhai (2007) introduce a general instance weighting framework for model adaptation.",
                    "sid": 119,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach tries to penalize misleading training instances from OUT and assign more weight to IN-like instances than OUT instances.",
                    "sid": 120,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Foster et al. (2010) propose a similar method for machine translation that uses features to capture degrees of generality.",
                    "sid": 121,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Particularly, they include the output from an SVM classifier that uses the intersection between IN and OUT as positive examples.",
                    "sid": 122,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike previous work on instance weighting in machine translation, they use phraselevel instances instead of sentences.",
                    "sid": 123,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A large body of work uses interpolation techniques to create a single TM/LM from interpolating a number of LMs/TMs.",
                    "sid": 124,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two famous examples of such methods are linear mixtures and log-linear mixtures (Koehn and Schroeder, 2007; Civera and Juan, 2007; Foster and Kuhn, 2007) which were used as baselines and discussed in Section 2.",
                    "sid": 125,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other methods include using self-training techniques to exploit monolingual in-domain data (Ueffing et al., 2007; Tackling the model adaptation problem using system combination approaches has been experimented in various work (Koehn and Schroeder, 2007; Hildebrand and Vogel, 2009).",
                    "sid": 126,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among these approaches are sentence-based, phrase-based and word-based output combination methods.",
                    "sid": 127,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a similar approach, Koehn and Schroeder (2007) use a feature of the factored translation model framework in Moses SMT system (Koehn and Schroeder, 2007) to use multiple alternative decoding paths.",
                    "sid": 128,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two decoding paths, one for each translation table (IN and OUT), were used during decoding.",
                    "sid": 129,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The weights are set with minimum error rate training (Och, 2003).",
                    "sid": 130,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our work is closely related to Koehn and Schroeder (2007) but uses a different approach to deal with multiple translation tables.",
                    "sid": 131,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Moses SMT system implements (Koehn and Schroeder, 2007) and can treat multiple translation tables in two different ways: intersection and union.",
                    "sid": 132,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In intersection, for each span only the hypotheses would be used that are present in all phrase tables.",
                    "sid": 133,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each set of hypothesis with the same source and target phrases, a new hypothesis is created whose feature-set is the union of feature sets of all corresponding hypotheses.",
                    "sid": 134,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Union, on the other hand, uses hypotheses from all the phrase tables.",
                    "sid": 135,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The feature set of these hypotheses are expanded to include one feature set for each table.",
                    "sid": 136,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, for the corresponding feature values of those phrase-tables that did not have a particular phrase-pair, a default log probability value of 0 is assumed (Bertoldi and Federico, 2009) which is counter-intuitive as it boosts the score of hypotheses with phrase-pairs that do not belong to all of the translation tables.",
                    "sid": 137,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach is different from Koehn and Schroeder (2007) in a number of ways.",
                    "sid": 138,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, unlike the multi-table support of Moses which only supports phrase-based translation table combination, our approach supports ensembles of both hierarchical and phrase-based systems.",
                    "sid": 139,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With little modification, it can also support ensemble of syntax-based systems with the other two state-of-the-art SMT systems.",
                    "sid": 140,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, our combining method uses the union option, but instead of preserving the features of all phrase-tables, it only combines their scores using various mixture operations.",
                    "sid": 141,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This enables us to experiment with a number of different operations as opposed to sticking to only one combination method.",
                    "sid": 142,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, by avoiding increasing the number of features we can add as many translation models as we need without serious performance drop.",
                    "sid": 143,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, MERT would not be an appropriate optimizer when the number of features increases a certain amount (Chiang et al., 2008).",
                    "sid": 144,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach differs from the model combination approach of DeNero et al. (2010), a generalization of consensus or minimum Bayes risk decoding where the search space consists of those of multiple systems, in that model combination uses forest of derivations of all component models to do the combination.",
                    "sid": 145,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, it requires all component models to fully decode each sentence, compute n-gram expectations from each component model and calculate posterior probabilities over translation derivations.",
                    "sid": 146,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While, in our approach we only use partial hypotheses from component models and the derivation forest is constructed by the ensemble model.",
                    "sid": 147,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A major difference is that in the model combination approach the component search spaces are conjoined and they are not intermingled as opposed to our approach where these search spaces are intermixed on spans.",
                    "sid": 148,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This enables us to generate new sentences that cannot be generated by component models.",
                    "sid": 149,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, various combination methods can be explored in our approach.",
                    "sid": 150,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, main techniques used in this work are orthogonal to our approach such as Minimum Bayes Risk decoding, using n-gram features and tuning using MERT.",
                    "sid": 151,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, our work is most similar to that of Liu et al. (2009) where max-derivation and maxtranslation decoding have been used.",
                    "sid": 152,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maxderivation finds a derivation with highest score and max-translation finds the highest scoring translation by summing the score of all derivations with the same yield.",
                    "sid": 153,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The combination can be done in two levels: translation-level and derivation-level.",
                    "sid": 154,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their derivation-level max-translation decoding is similar to our ensemble decoding with wsum as the mixture operation.",
                    "sid": 155,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We did not restrict ourself to this particular mixture operation and experimented with a number of different mixing techniques and as Table 3 shows we could improve over wsum in our experimental setup.",
                    "sid": 156,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Liu et al. (2009) used a modified version of MERT to tune max-translation decoding weights, while we use a two-step approach using MERT for tuning each component model separately and then using CONDOR to tune component weights on top of them.",
                    "sid": 157,
                    "ssid": 44,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 conclusion & future work",
            "number": "7",
            "sents": [
                {
                    "text": "In this paper, we presented a new approach for domain adaptation using ensemble decoding.",
                    "sid": 158,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this approach a number of MT systems are combined at decoding time in order to form an ensemble model.",
                    "sid": 159,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model combination can be done using various mixture operations.",
                    "sid": 160,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We showed that this approach can gain up to 2.2 BLEU points over its concatenation baseline and 0.39 BLEU points over a powerful mixture model.",
                    "sid": 161,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Future work includes extending this approach to use multiple translation models with multiple language models in ensemble decoding.",
                    "sid": 162,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Different mixture operations can be investigated and the behaviour of each operation can be studied in more details.",
                    "sid": 163,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We will also add capability of supporting syntax-based ensemble decoding and experiment how a phrase-based system can benefit from syntax information present in a syntax-aware MT system.",
                    "sid": 164,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, ensemble decoding can be applied on domain mixing settings in which development sets and test sets include sentences from different domains and genres, and this is a very suitable setting for an ensemble model which can adapt to new domains at test time.",
                    "sid": 165,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, we can extend our approach by applying some of the techniques used in other system combination approaches such as consensus decoding, using n-gram features, tuning using forest-based MERT, among other possible extensions.",
                    "sid": 166,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "8",
            "sents": [
                {
                    "text": "This research was partially supported by an NSERC, Canada (RGPIN: 264905) grant and a Google Faculty Award to the last author.",
                    "sid": 167,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We would like to thank Philipp Koehn and the anonymous reviewers for their valuable comments.",
                    "sid": 168,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also thank the developers of GIZA++ and Condor which we used for our experiments.",
                    "sid": 169,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}