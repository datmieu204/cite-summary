{
    "ID": "N06-1039",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Preemptive Information Extraction Using Unrestricted Relation Discovery",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "surface text patterns for a question answering system. of the 40th Annual Meeting of the As",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 background",
            "number": "1",
            "sents": [
                {
                    "text": "Every day, a large number of news articles are created and reported, many of which are unique.",
                    "sid": 2,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But certain types of events, such as hurricanes or murders, are reported again and again throughout a year.",
                    "sid": 3,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal of Information Extraction, or IE, is to retrieve a certain type of news event from past articles and present the events as a table whose columns are filled with a name of a person or company, according to its role in the event.",
                    "sid": 4,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, existing IE techniques require a lot of human labor.",
                    "sid": 5,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, you have to specify the type of information you want and collect articles that include this information.",
                    "sid": 6,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, you have to analyze the articles and manually craft a set of patterns to capture these events.",
                    "sid": 7,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most existing IE research focuses on reducing this burden by helping people create such patterns.",
                    "sid": 8,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But each time you want to extract a different kind of information, you need to repeat the whole process: specify articles and adjust its patterns, either manually or semiautomatically.",
                    "sid": 9,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a bit of a dangerous pitfall here.",
                    "sid": 10,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, it is hard to estimate how good the system can be after months of work.",
                    "sid": 11,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, you might not know if the task is even doable in the first place.",
                    "sid": 12,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Knowing what kind of information is easily obtained in advance would help reduce this risk.",
                    "sid": 13,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An IE task can be defined as finding a relation among several entities involved in a certain type of event.",
                    "sid": 14,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in the MUC-6 management succession scenario, one seeks a relation between COMPANY, PERSON and POST involved with hiring/firing events.",
                    "sid": 15,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each row of an extracted table, you can always read it as \u201cCOMPANY hired (or fired) PERSON for POST.\u201d The relation between these entities is retained throughout the table.",
                    "sid": 16,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are many existing works on obtaining extraction patterns for pre-defined relations (Riloff, 1996; Yangarber et al., 2000; Agichtein and Gravano, 2000; Sudo et al., 2003).",
                    "sid": 17,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unrestricted Relation Discovery is a technique to automatically discover such relations that repeatedly appear in a corpus and present them as a table, with absolutely no human intervention.",
                    "sid": 18,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike most existing IE research, a user does not specify the type of articles or information wanted.",
                    "sid": 19,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, a system tries to find all the kinds of relations that are reported multiple times and can be reported in tabular form.",
                    "sid": 20,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This technique will open up the possibility of trying new IE scenarios.",
                    "sid": 21,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, the system itself can be used as an IE system, since an obtained relation is already presented as a table.",
                    "sid": 22,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If this system works to a certain extent, tuning an IE system becomes a search problem: all the tables are already built \u201cpreemptively.\u201d A user only needs to search for a relevant table.",
                    "sid": 23,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We implemented a preliminary system for this technique and obtained reasonably good performance.",
                    "sid": 24,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 is a sample relation that was extracted as a table by our system.",
                    "sid": 25,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The columns of the table show article dates, names of hurricanes and the places they affected respectively.",
                    "sid": 26,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The headers of the table and its keywords were also extracted automatically.",
                    "sid": 27,
                    "ssid": 26,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 basic idea",
            "number": "2",
            "sents": [
                {
                    "text": "In Unrestricted Relation Discovery, the discovery process (i.e. creating new tables) can be formulated as a clustering task.",
                    "sid": 28,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The key idea is to cluster a set of articles that contain entities bearing a similar relation to each other in such a way that we can construct a table where the entities that play the same role are placed in the same column.",
                    "sid": 29,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Suppose that there are two articles A and B, and both report hurricane-related news.",
                    "sid": 30,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Article A contains two entities \u201cKatrina\u201d and \u201cNew Orleans\u201d, and article B contains \u201cLongwang\u201d and \u201cTaiwan\u201d.",
                    "sid": 31,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These entities are recognized by a Named Entity (NE) tagger.",
                    "sid": 32,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We want to discover a relation among them.",
                    "sid": 33,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we introduce a notion called \u201cbasic pattern\u201d to form a relation.",
                    "sid": 34,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A basic pattern is a part of the text that is syntactically connected to an entity.",
                    "sid": 35,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some examples are \u201cX is hit\u201d or \u201cY\u2019s residents\u201d.",
                    "sid": 36,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 shows several basic patterns connected to the entities \u201cKatrina\u201d and \u201cNew Orleans\u201d in article A.",
                    "sid": 37,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, we obtain the basic patterns for article B.",
                    "sid": 38,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, in Figure 2, both entities \u201cKatrina\u201d and \u201cLongwang\u201d have the basic pattern \u201cheaded\u201d in common.",
                    "sid": 39,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, we connect these two entities to each other.",
                    "sid": 40,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, there is also a common basic pattern \u201cwas-hit\u201d shared by \u201cNew Orleans\u201d and \u201cTaiwan\u201d.",
                    "sid": 41,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, we found two sets of entities that can be placed in correspondence at the same time.",
                    "sid": 42,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "What does this mean?",
                    "sid": 43,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can infer that both entity sets (\u201cKatrina\u201d-\u201cNew Orleans\u201d and \u201cLongwang\u201d-\u201cTaiwan\u201d) represent a certain relation that has something in common: a hurricane name and the place it affected.",
                    "sid": 44,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By finding multiple parallel correspondences between two articles, we can estimate the similarity of their relations.",
                    "sid": 45,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generally, in a clustering task, one groups items by finding similar pairs.",
                    "sid": 46,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After finding a pair of articles that have a similar relation, we can bring them into the same cluster.",
                    "sid": 47,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, we cluster articles by using their basic patterns as features.",
                    "sid": 48,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, each basic pattern is still connected to its entity so that we can extract the name from it.",
                    "sid": 49,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can consider a basic pattern to represent something like the \u201crole\u201d of its entity.",
                    "sid": 50,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, the entities that had \u201cheaded\u201d as a basic pattern are hurricanes, and the entities that had \u201cwas-hit\u201d as a basic pattern are the places it affected.",
                    "sid": 51,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By using basic patterns, we can align the entities into the corresponding column that represents a certain role in the relation.",
                    "sid": 52,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From this example, we create a two-by-two table, where each column represents the roles of the entities, and each row represents a different article, as shown in the bottom of Figure 2.",
                    "sid": 53,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can extend this table by finding another article in the same manner.",
                    "sid": 54,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this way, we gradually extend a table while retaining a relation among its columns.",
                    "sid": 55,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, the obtained table is just what an IE system (whose task is to find a hurricane name and the affected place) would create.",
                    "sid": 56,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, these articles might also include other things, which could represent different relations.",
                    "sid": 57,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the governments might call for help or some casualties might have been reported.",
                    "sid": 58,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To obtain such relations, we need to choose different entities from the articles.",
                    "sid": 59,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several existing works have tried to extract a certain type of relation by manually choosing different pairs of entities (Brin, 1998; Ravichandran and Hovy, 2002).",
                    "sid": 60,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hasegawa et al. (2004) tried to extract multiple relations by choosing entity types.",
                    "sid": 61,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that we can find such relations by trying all possible combinations from a set of entities we have chosen in advance; some combinations might represent a hurricane and government relation, and others might represent a place and its casualties.",
                    "sid": 62,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To ensure that an article can have several different relations, we let each article belong to several different clusters.",
                    "sid": 63,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a real-world situation, only using basic patterns sometimes gives undesired results.",
                    "sid": 64,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, \u201c(President) Bush flew to Texas\u201d and \u201c(Hurricane) Katrina flew to New Orleans\u201d both have a basic pattern \u201cflew to\u201d in common, so \u201cBush\u201d and \u201cKatrina\u201d would be put into the same column.",
                    "sid": 65,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But we want to separate them in different tables.",
                    "sid": 66,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To alleviate this problem, we put an additional restriction on clustering.",
                    "sid": 67,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use a bag-of-words approach to discriminate two articles: if the word-based similarity between two articles is too small, we do not bring them together into the same cluster (i.e. table).",
                    "sid": 68,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We exclude names from the similarity calculation at this stage because we want to link articles about the same type of event, not the same instance.",
                    "sid": 69,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, we use the frequency of each basic pattern to compute the similarity of relations, since basic patterns like \u201csay\u201d or \u201chave\u201d appear in almost every article and it is dangerous to rely on such expressions.",
                    "sid": 70,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the above explanation, we have assumed that we can obtain enough basic patterns from an article.",
                    "sid": 71,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the actual number of basic patterns that one can find from a single article is usually not enough, because the number of sentences is rather small in comparison to the variation of expressions.",
                    "sid": 72,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So having two articles that have multiple basic patterns in common is very unlikely.",
                    "sid": 73,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extend the number of articles for obtaining basic patterns by using a cluster of comparable articles that report the same event instead of a single article.",
                    "sid": 74,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We call this cluster of articles a \u201cbasic cluster.\u201d Using basic clusters instead of single articles also helps to increase the redundancy of data.",
                    "sid": 75,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can give more confidence to repeated basic patterns.",
                    "sid": 76,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the notion of \u201cbasic cluster\u201d is different from the clusters used for creating tables explained above.",
                    "sid": 77,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following sections, a cluster for creating a table is called a \u201cmetacluster,\u201d because this is a cluster of basic clusters.",
                    "sid": 78,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A basic cluster consists of a set of articles that report the same event which happens at a certain time, and a metacluster consists of a set of events that contain the same relation over a certain period.",
                    "sid": 79,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We try to increase the number of articles in a basic cluster by looking at multiple news sources simultaneously.",
                    "sid": 80,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use a clustering algorithm that uses a vector-space-model to obtain basic clusters.",
                    "sid": 81,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then we apply cross-document coreference resolution to connect entities of different articles within a basic cluster.",
                    "sid": 82,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This way, we can increase the number of basic patterns connected to each entity.",
                    "sid": 83,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, it allows us to give a weight to entities.",
                    "sid": 84,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We calculate their weights using the number of occurrences within a cluster and their position within an article.",
                    "sid": 85,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These entities are used to obtain basic patterns later.",
                    "sid": 86,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also use a parser and tree normalizer to generate basic patterns.",
                    "sid": 87,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The format of basic patterns is crucial to performance.",
                    "sid": 88,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We think a basic pattern should be somewhat specific, since each pattern should capture an entity with some relevant context.",
                    "sid": 89,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But at the same time a basic pattern should be general enough to reduce data sparseness.",
                    "sid": 90,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We choose a predicate-argument structure as a natural solution for this problem.",
                    "sid": 91,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Compared to traditional constituent trees, a predicate-argument structure is a higher-level representation of sentences that has gained wide acceptance from the natural language community recently.",
                    "sid": 92,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we used a logical feature structure called GLARF proposed by Meyers et al. (2001a).",
                    "sid": 93,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A GLARF converter takes a syntactic tree as an input and augments it with several features.",
                    "sid": 94,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3 shows a sample GLARF structure obtained from the sentence \u201cKatrina hit Louisiana\u2019s coast.\u201d We used GLARF for two reasons: first, unlike traditional constituent parsers, GLARF has an ability to regularize several linguistic phenomena such as participial constructions and coordination.",
                    "sid": 95,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows us to handle this syntactic variety in a uniform way.",
                    "sid": 96,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, an output structure can be easily converted into a directed graph that represents the relationship between each word, without losing significant information from the original sentence.",
                    "sid": 97,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Compared to an ordinary constituent tree, it is easier to extract syntactic relationships.",
                    "sid": 98,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the next section, we discuss how we used this structure to generate basic patterns.",
                    "sid": 99,
                    "ssid": 72,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 implementation",
            "number": "3",
            "sents": [
                {
                    "text": "The overall process to generate basic patterns and discover relations from unannotated news articles is shown in Figure 4.",
                    "sid": 100,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Theoretically this could be a straight pipeline, but due to the nature of the implementation we process some stages separately and combine them in the later stage.",
                    "sid": 101,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following subsection, we explain each component.",
                    "sid": 102,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First of all, we need a lot of news articles from multiple news sources.",
                    "sid": 103,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We created a simple web crawler that extract the main texts from web pages.",
                    "sid": 104,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We observed that the crawler can correctly take the main texts from about 90% of the pages from each news site.",
                    "sid": 105,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We ran the crawler every day on several news sites.",
                    "sid": 106,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then we applied a simple clustering algorithm to the obtained articles in order to find a set of articles that talk about exactly the same news and form a basic cluster.",
                    "sid": 107,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We eliminate stop words and stem all the other words, then compute the similarity between two articles by using a bag-of-words approach.",
                    "sid": 108,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In news articles, a sentence that appears in the beginning of an article is usually more important than the others.",
                    "sid": 109,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So we preserved the word order to take into account the location of each sentence.",
                    "sid": 110,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First we computed a word vector from each article: where Vw(A) is a vector element of word w in article A, IDF(w) is the inverse document frequency of word w, and POS(w, A) is a list of w\u2019s positions in the article. avgwords is the average number of words for all articles.",
                    "sid": 111,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then we calculated the cosine value of each pair of vectors: We computed the similarity of all possible pairs of articles from the same day, and selected the pairs whose similarity exceeded a certain threshold (0.65 in this experiment) to form a basic cluster.",
                    "sid": 112,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After getting a set of basic clusters, we pass them to an existing statistical parser (Charniak, 2000) and rule-based tree normalizer to obtain a GLARF structure for each sentence in every article.",
                    "sid": 113,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current implementation of a GLARF converter gives about 75% F-score using parser output.",
                    "sid": 114,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the details of GLARF representation and its conversion, see Meyers et al. (2001b).",
                    "sid": 115,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In parallel with parsing and GLARFing, we also apply NE tagging and coreference resolution for each article in a basic cluster.",
                    "sid": 116,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used an HMM-based NE tagger whose performance is about 85% in Fscore.",
                    "sid": 117,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This NE tagger produces ACE-type Named Entities 1: PERSON, ORGANIZATION, GPE, LOCATION and FACILITY 2.",
                    "sid": 118,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After applying singledocument coreference resolution for each article, we connect the entities among different articles in the same basic cluster to obtain cross-document coreference entities with simple string matching.",
                    "sid": 119,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After getting a GLARF structure for each sentence and a set of documents whose entities are tagged and connected to each other, we merge the two outputs and create a big network of GLARF structures whose nodes are interconnected across different sentences/articles.",
                    "sid": 120,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now we can generate basic patterns for each entity.",
                    "sid": 121,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we compute the weight for each cross-document entity E in a certain basic cluster as follows: where e \u2208 E is an entity within one article and mentions(e) and firstsent(e) are the number of mentions of entity e in a document and the position of the sentence where entity e first appeared, respectively.",
                    "sid": 122,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "C is a constant value which was 0.5 in this experiment.",
                    "sid": 123,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To reduce combinatorial complexity, we took only the five most highly weighted entities from each basic cluster to generate basic patterns.",
                    "sid": 124,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We observed these five entities can cover major relations that are reported in a basic cluster.",
                    "sid": 125,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, we obtain basic patterns from the GLARF structures.",
                    "sid": 126,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used only the first ten sentences in each article for getting basic patterns, as most important facts are usually written in the first few sentences of a news article.",
                    "sid": 127,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 5 shows all the basic patterns obtained from the sentence \u201cKatrina hit Louisiana\u2019s coast.\u201d The shaded nodes \u201cKatrina\u201d and \u201cLouisiana\u201d are entities from which each basic pattern originates.",
                    "sid": 128,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We take a path of GLARF nodes from each entity node until it reaches any predicative node: noun, verb, or adjective in this case.",
                    "sid": 129,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the nodes \u201chit\u201d and \u201ccoast\u201d can be predicates in this example, we obtain three unique paths \u201cLouisiana+T-POS:coast (Louisiana\u2019s coast)\u201d, \u201cKatrina+SBJ:hit (Katrina hit something)\u201d, and \u201cKatrina+SBJ:hit-OBJ:coast (Katrina hit some coast)\u201d.",
                    "sid": 130,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To increase the specificity of patterns, we generate extra basic patterns by adding a node that is immediately connected to a predicative node.",
                    "sid": 131,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(From this example, we generate two basic patterns: \u201chit\u201d and \u201chit-coast\u201d from the \u201cKatrina\u201d node.)",
                    "sid": 132,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice that in a GLARF structure, the type of each argument such as subject or object is preserved in an edge even if we extract a single path of a graph.",
                    "sid": 133,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, we replace both entities \u201cKatrina\u201d and \u201cLouisiana\u201d with variables based on their NE tags and obtain parameterized patterns: \u201cGPE+T-POS:coast (Louisiana\u2019s coast)\u201d, \u201cPER+SBJ:hit (Katrina hit something)\u201d, and \u201cPER+SBJ:hit-OBJ:coast (Katrina hit some coast)\u201d.",
                    "sid": 134,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After taking all the basic patterns from every basic cluster, we compute the Inverse Cluster Frequency (ICF) of each unique basic pattern.",
                    "sid": 135,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ICF is similar to the Inverse Document Frequency (IDF) of words, which is used to calculate the weight of each basic pattern for metaclustering.",
                    "sid": 136,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we can perform metaclustering to obtain tables.",
                    "sid": 137,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compute the similarity between each basic cluster pair, as seen in Figure 6.",
                    "sid": 138,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "XA and XB are the set of cross-document entities from basic clusters cA and cB, respectively.",
                    "sid": 139,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We examine all possible mappings of relations (parallel mappings of multiple entities) from both basic clusters, and find all the mappings M whose similarity score exceeds a certain threshold. wordsim(cA, cB) is the bag-of-words similarity of two clusters.",
                    "sid": 140,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a weighting function we used ICF: We then sort the similarities of all possible pairs of basic clusters, and try to build a metacluster by taking the most strongly connected pair first.",
                    "sid": 141,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that in this process we may assign one basic cluster to several different metaclusters.",
                    "sid": 142,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When a link is found between two basic clusters that were already assigned to a metacluster, we try to put them into all the existing metaclusters it belongs to.",
                    "sid": 143,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we allow a basic cluster to be added only if it can fill all the columns in that table.",
                    "sid": 144,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, the first two basic clusters (i.e. an initial two-row table) determines its columns and therefore define the relation of that table.",
                    "sid": 145,
                    "ssid": 46,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 experiment and evaluation",
            "number": "4",
            "sents": [
                {
                    "text": "We used twelve newspapers published mainly in the U.S. We collected their articles over two months (from Sep. 21, 2005 - Nov. 27, 2005).",
                    "sid": 146,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We obtained 643,767 basic patterns and 7,990 unique types.",
                    "sid": 147,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then we applied metaclustering to these basic clusters and obtained 302 metaclusters (tables).",
                    "sid": 148,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then removed duplicated rows and took only the tables that had 3 or more rows.",
                    "sid": 149,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally we had 101 tables.",
                    "sid": 150,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The total number the of articles and clusters we used are shown in Table 2.",
                    "sid": 151,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated the obtained tables as follows.",
                    "sid": 152,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each row in a table, we added a summary of the source articles that were used to extract the relation.",
                    "sid": 153,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then for each table, an evaluator looks into every row and its source article, and tries to come up with a sentence that explains the relation among its columns.",
                    "sid": 154,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The description should be as specific as possible.",
                    "sid": 155,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If at least half of the rows can fit the explanation, the table is considered \u201cconsistent.\u201d For each consistent table, the evaluator wrote down the sentence using variable names ($1, $2, ...) to refer to its columns.",
                    "sid": 156,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we counted the number of consistent tables.",
                    "sid": 157,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also counted how many rows in each table can fit the explanation.",
                    "sid": 158,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated 48 randomly chosen tables.",
                    "sid": 159,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among these tables, we found that 36 tables were consistent.",
                    "sid": 160,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also counted the total number of rows that fit each description, shown in Table 3.",
                    "sid": 161,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 shows the descriptions of the selected tables.",
                    "sid": 162,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The largest consistent table was about hurricanes (Table 5).",
                    "sid": 163,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although we cannot exactly measure the recall of each table, we tried to estimate the recall by comparing this hurricane table to a manually created one (Table 6).",
                    "sid": 164,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We found 6 out of 9 hurricanes 3.",
                    "sid": 165,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is worth noting that most of these hurricane names were automatically disambiguated although our NE tagger didn\u2019t distinguish a hurricane name from a person ber of fitted/total rows. name.",
                    "sid": 166,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second largest table (about nominations of officials) is shown in Table 7.",
                    "sid": 167,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We reviewed 10 incorrect rows from various tables and found 4 of them were due to coreference errors and one error was due to a parse error.",
                    "sid": 168,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The other 4 errors were due to multiple basic patterns distant from each other that happened to refer to a different event reported in the same cluster.",
                    "sid": 169,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The causes of the one remaining error was obscure.",
                    "sid": 170,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most inconsistent tables were a mixture of multiple relations and some of their rows still looked consistent.",
                    "sid": 171,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have a couple of open questions.",
                    "sid": 172,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, the overall recall of our system might be lower than existing IE systems, as we are relying on a cluster of comparable articles rather than a single document to discover an event.",
                    "sid": 173,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We might be able to improve this in the future by adjusting the basic clustering algorithm or weighting schema of basic patterns.",
                    "sid": 174,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, some combinations of basic patterns looked inherently vague.",
                    "sid": 175,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, we used the two basic patterns \u201cpitched\u201d and \u201c\u2019s-series\u201d in the following sentence (the patterns are underlined): Ervin Santana pitched 5 1-3 gutsy innings in his postseason debut for the Angels, Adam Kennedy hit a goahead triple that sent Yankees outfielders crashing to the ground, and Los Angeles beat New York 5-3 Monday night in the decisive Game 5 of their AL playoff series.",
                    "sid": 176,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is not clear whether this set of patterns can yield any meaningful relation.",
                    "sid": 177,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are not sure how much this sort of table can affect overall IE performance.",
                    "sid": 178,
                    "ssid": 33,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 conclusion",
            "number": "5",
            "sents": [
                {
                    "text": "In this paper we proposed Preemptive Information Extraction as a new direction of IE research.",
                    "sid": 179,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As its key technique, we presented Unrestricted Relation Discovery that tries to find parallel correspondences between multiple entities in a document, and perform clustering using basic patterns as features.",
                    "sid": 180,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To increase the number of basic patterns, we used a cluster of comparable articles instead of a single document.",
                    "sid": 181,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We presented the implementation of our preliminary system and its outputs.",
                    "sid": 182,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We obtained dozens of usable tables.",
                    "sid": 183,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sep. and Nov. (from Wikipedia).",
                    "sid": 184,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rows with a star (*) were actually extracted.",
                    "sid": 185,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of the source articles that contained a mention of the hurricane is shown in the right column.",
                    "sid": 186,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgements",
            "number": "6",
            "sents": [
                {
                    "text": "This research was supported by the National Science Foundation under Grant IIS-00325657.",
                    "sid": 187,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper does not necessarily reflect the position of the U.S. Government.",
                    "sid": 188,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We would like to thank Prof. Ralph Grishman who provided useful suggestions and discussions.",
                    "sid": 189,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}