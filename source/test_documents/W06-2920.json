{
    "ID": "W06-2920",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "CoNLL-X Shared Task On Multilingual Dependency Parsing",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each year the Conference on Computational Natural Language Learning features a shared task, in which participants train and test their systems on exactly the same data sets, in order to better compare systems.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tenth CoNLL (CoNLL-X) saw a shared task on Multilingual Dependency Parsing.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we describe how treebanks for 13 languages were converted into the same dependency format and how parsing performance was measured.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also give an overview of the parsing approaches that participants took and the results that they achieved.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we try to draw general conclusions about multi-lingual parsing: What makes a particular language, treebank or annotation scheme easier or harder to parse and which phenomena are challenging for any dependency parser?",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acknowledgement Many thanks to Amit Dubey and Yuval Krymolowski, the other two organizers of the shared task, for discussions, converting treebanks, writing and helping with the also to Alexander Yeh for additional help with the paper reviews.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "His work was made possible by the MITRE Cor",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgement",
            "number": "1",
            "sents": [
                {
                    "text": "Many thanks to Amit Dubey and Yuval Krymolowski, the other two organizers of the shared task, for discussions, converting treebanks, writing software and helping with the papers.2",
                    "sid": 8,
                    "ssid": 1,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "2",
            "sents": [
                {
                    "text": "Previous CoNLL shared tasks focused on NP chunking (1999), general chunking (2000), clause identification (2001), named entity recognition (2002, 2003), and semantic role labeling (2004, 2005).",
                    "sid": 9,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This shared task on full (dependency) parsing is the logical next step.",
                    "sid": 10,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing is an important preprocessing step for many NLP applications and therefore of considerable practical interest.",
                    "sid": 11,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is a complex task and as it is not straightforwardly mappable to a \u201cclassical\u201d segmentation, classification or sequence prediction problem, it also poses theoretical challenges to machine learning researchers.",
                    "sid": 12,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During the last decade, much research has been done on data-driven parsing and performance has increased steadily.",
                    "sid": 13,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For training these parsers, syntactically annotated corpora (treebanks) of thousands to tens of thousands of sentences are necessary; so initially, research has focused on English.",
                    "sid": 14,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During the last few years, however, treebanks for other languages have become available and some parsers have been applied to several different languages.",
                    "sid": 15,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 2 for a more detailed overview of related previous research.",
                    "sid": 16,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So far, there has not been much comparison between different dependency parsers on exactly the same data sets (other than for English).",
                    "sid": 17,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the reasons is the lack of a de-facto standard for an evaluation metric (labeled or unlabeled, separate root accuracy?",
                    "sid": 18,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "), for splitting the data into training and testing portions and, in the case of constituency treebanks converted to dependency format, for this conversion.",
                    "sid": 19,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another reason are the various annotation schemes and logical data formats used by different treebanks, which make it tedious to apply a parser to many treebanks.",
                    "sid": 20,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hope that this shared task will improve the situation by introducing a uniform approach to dependency parsing.",
                    "sid": 21,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 3 for the detailed task definition and Section 4 for information about the conversion of all 13 treebanks.",
                    "sid": 22,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this shared task, participants had two to three months3 to implement a parsing system that could be trained for all these languages and four days to parse unseen test data for each.",
                    "sid": 23,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19 participant groups submitted parsed test data.",
                    "sid": 24,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of these, all but one parsed all 12 required languages and 13 also parsed the optional Bulgarian data.",
                    "sid": 25,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A wide variety of parsing approaches were used: some are extensions of previously published approaches, others are new.",
                    "sid": 26,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 5 for an overview.",
                    "sid": 27,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Systems were scored by computing the labeled attachment score (LAS), i.e. the percentage of \u201cscoring\u201d tokens for which the system had predicted the correct head and dependency label.",
                    "sid": 28,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Punctuation tokens were excluded from scoring.",
                    "sid": 29,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results across languages and systems varied widely from 37.8% (worst score on Turkish) to 91.7% (best score on Japanese).",
                    "sid": 30,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 6 for detailed results.",
                    "sid": 31,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, variations are consistent enough to allow us to draw some general conclusions.",
                    "sid": 32,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 7 discusses the implications of the results and analyzes the remaining problems.",
                    "sid": 33,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, Section 8 describes possible directions for future research.",
                    "sid": 34,
                    "ssid": 26,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 previous research",
            "number": "3",
            "sents": [
                {
                    "text": "Tesni`ere (1959) introduced the idea of a dependency tree (a \u201cstemma\u201d in his terminology), in which words stand in direct head-dependent relations, for representing the syntactic structure of a sentence.",
                    "sid": 35,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hays (1964) and Gaifman (1965) studied the formal properties of projective dependency grammars, i.e. those where dependency links are not allowed to cross.",
                    "sid": 36,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mel\u2019\u02c7cuk (1988) describes a multistratal dependency grammar, i.e. one that distinguishes between several types of dependency relations (morphological, syntactic and semantic).",
                    "sid": 37,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other theories related to dependency grammar are word grammar (Hudson, 1984) and link grammar (Sleator and Temperley, 1993).",
                    "sid": 38,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some relatively recent rule-based full dependency parsers are Kurohashi and Nagao (1994) for Japanese, Oflazer (1999) for Turkish, Tapanainen and J\u00a8arvinen (1997) for English and Elworthy (2000) for English and Japanese.",
                    "sid": 39,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While phrase structure parsers are usually evaluated with the GEIG/PARSEVAL measures of precision and recall over constituents (Black et al., 1991), Lin (1995) and others have argued for an alternative, dependency-based evaluation.",
                    "sid": 40,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That approach is based on a conversion from constituent structure to dependency structure by recursively defining a head for each constituent.",
                    "sid": 41,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The same idea was used by Magerman (1995), who developed the first \u201chead table\u201d for the Penn Treebank (Marcus et al., 1994), and Collins (1996), whose constituent parser is internally based on probabilities of bilexical dependencies, i.e. dependencies between two words.",
                    "sid": 42,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Collins (1997)\u2019s parser and its reimplementation and extension by Bikel (2002) have by now been applied to a variety of languages: English (Collins, 1999), Czech (Collins et al., 1999), German (Dubey and Keller, 2003), Spanish (Cowan and Collins, 2005), French (Arun and Keller, 2005), Chinese (Bikel, 2002) and, according to Dan Bikel\u2019s web page, Arabic.",
                    "sid": 43,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Eisner (1996) introduced a data-driven dependency parser and compared several probability models on (English) Penn Treebank data.",
                    "sid": 44,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Kudo and Matsumoto (2000) describe a dependency parser for Japanese and Yamada and Matsumoto (2003) an extension for English.",
                    "sid": 45,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nivre\u2019s parser has been tested for Swedish (Nivre et al., 2004), English (Nivre and Scholz, 2004), Czech (Nivre and Nilsson, 2005), Bulgarian (Marinov and Nivre, 2005) and Chinese Cheng et al. (2005), while McDonald\u2019s parser has been applied to English (McDonald et al., 2005a), Czech (McDonald et al., 2005b) and, very recently, Danish (McDonald and Pereira, 2006).",
                    "sid": 46,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 data format, task definition",
            "number": "4",
            "sents": [
                {
                    "text": "The training data derived from the original treebanks (see Section 4) and given to the shared task participants was in a simple column-based format that is an extension of Joakim Nivre\u2019s Malt-TAB format4 for the shared task and was chosen for its processing simplicity.",
                    "sid": 47,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All the sentences are in one text file and they are separated by a blank line after each sentence.",
                    "sid": 48,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A sentence consists of one or more tokens.",
                    "sid": 49,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each token is represented on one line, consisting of 10 fields.",
                    "sid": 50,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fields are separated from each other by a TAB.5 The 10 fields are: resulting from the PHEAD column is guaranteed to be projective (but is not available for all data sets), whereas the structure resulting from the HEAD column will be non-projective for some sentences of some languages (but is always available).",
                    "sid": 51,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As should be obvious from the description above, our format assumes that each token has exactly one head.",
                    "sid": 52,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some dependency grammars, and also some treebanks, allow tokens to have more than one head, although often there is a distinction between primary and optional secondary relations, e.g. in the Danish Dependency Treebank (Kromann, 2003), the Dutch Alpino Treebank (van der Beek et al., 2002b) and the German TIGER treebank (Brants et al., 2002).",
                    "sid": 53,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this shared task we decided to ignore any additional relations.",
                    "sid": 54,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However the data format could easily be extended with additional optional columns in the future.",
                    "sid": 55,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Cycles do not occur in the shared task data but are scored as normal if predicted by parsers.",
                    "sid": 56,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The character encoding of all data files is Unicode (specifically UTF-8), which is the only encoding to cover all languages and therefore ideally suited for multilingual parsing.",
                    "sid": 57,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the training data contained all 10 columns (although sometimes only with dummy values, i.e. underscores), the test data given to participants contained only the first 6.",
                    "sid": 58,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Participants\u2019 parsers then predicted the HEAD and DEPREL columns (any predicted PHEAD and PDEPREL columns were ignored).",
                    "sid": 59,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The predicted values were compared to the gold standard HEAD and DEPREL.6 The official evaluation metric is the labeled attachment score (LAS), i.e. the percentage of \u201cscoring\u201d tokens for which the system has predicted the correct HEAD and DEPREL.",
                    "sid": 60,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The evaluation script defines a nonscoring token as a token where all characters of the FORM value have the Unicode category property \u201cPunctuation\u201d.7 We tried to take a test set that was representative of the genres in a treebank and did not cut through text samples.",
                    "sid": 61,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also tried to document how we selected this set.8 We aimed at having roughly the same size for the test sets of all languages: 5,000 scoring tokens.",
                    "sid": 62,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is not an exact requirement as we do not want to cut sentences in half.",
                    "sid": 63,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relatively small size of the test set means that even for the smallest treebanks the majority of tokens is available for training, and the equal size means that for the overall ranking of participants, we can simply compute the score on the concatenation of all test sets.",
                    "sid": 64,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 treebanks and their conversion",
            "number": "5",
            "sents": [
                {
                    "text": "In selecting the treebanks, practical considerations were the major factor.",
                    "sid": 65,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Treebanks had to be actually available, large enough, have a license that allowed free use for research or kind treebank providers who temporarily waived the fee for the shared task, and be suitable for conversion into the common format within the limited time.",
                    "sid": 66,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, we aimed at a broad coverage of different language families.9 As a general rule, we did not manually correct errors in treebanks if we discovered some during the conversion, see also Buchholz and Green (2006), although we did report them to the treebank providers and several got corrected by them.",
                    "sid": 67,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the following six dependency treebanks: Czech: Prague Dependency Treebank10 (PDT) (B\u00a8ohmov\u00b4a et al., 2003); Arabic: Prague Arabic Dependency Treebank11 (PADT) (Haji\u02c7c et al., 2004; Smr\u02c7z et al., 2002); Slovene: Slovene Dependency Treebank12 (SDT) (D\u02c7zeroski et al., 2006); Danish: Danish Dependency Treebank13 (Kromann, 2003); Swedish: Talbanken0514 (Teleman, 1974; Einarsson, 1976; Nilsson et al., 2005); Turkish: MetuSabanc\u0131 treebank15 (Oflazer et al., 2003; Atalay et al., 2003).",
                    "sid": 68,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The conversion of these treebanks was the easiest task as the linguistic representation was already what we needed, so the information only had to be converted from SGML or XML to the shared task format.",
                    "sid": 69,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, the relevant information had to be distributed appropriately over the CPOSTAG, POSTAG and FEATS columns.",
                    "sid": 70,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Swedish data, no predefined distinction into coarse and fine-grained PoS was available, so the two columns contain identical values in our format.",
                    "sid": 71,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Czech data, we sampled both our training and test data from the official \u201ctraining\u201d partition because only that one contains gold standard PoS tags, which is also what is used in most other data sets.",
                    "sid": 72,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Czech DEPREL values include the suffixes to mark coordination, apposition and parenthesis, while these have been ignored during the conversion of the much smaller Slovene data.",
                    "sid": 73,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Arabic data, sentences with missing annotation were filtered out during the conversion.",
                    "sid": 74,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Turkish treebank posed a special problem because it analyzes each word as a sequence of one or more inflectional groups (IGs).",
                    "sid": 75,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each IG consists of either a stem or a derivational suffix plus all the inflectional suffixes belonging to that stem/derivational suffix.",
                    "sid": 76,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The head of a whole word is not just another word but a specific IG of another word.16 One can easily map this representation to one in which the head of a word is a word but that treebank for us.",
                    "sid": 77,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "13Many thanks to Matthias Trautner Kromann and assistants for creating the DDT and releasing it under the GNU General Public License and to Joakim Nivre, Johan Hall and Jens Nilsson for the conversion of DDT to Malt-XML.",
                    "sid": 78,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "14Many thanks to Jens Nilsson, Johan Hall and Joakim Nivre for the conversion of the original Talbanken to Talbanken05 and for making it freely available for research purposes and to Joakim Nivre again for prompt and proper respons to all our questions.",
                    "sid": 79,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "15Many thanks to Bilge Say and Kemal Oflazer for granting the license for CoNLL-X and answering questions and to G\u00a8uls\u00b8en Eryi\u02c7git for making many corrections to the treebank and discussing some aspects of the conversion. mapping would lose information and it is not clear whether the result is linguistically meaningful, practically useful, or even easier to parse because in the original representation, each IG has its own PoS and morphological features, so it is not clear how that information should be represented if all IGs of a word are conflated.",
                    "sid": 80,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We therefore chose to represent each IG as a separate token in our format.",
                    "sid": 81,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To make the result a connected dependency structure, we defined the HEAD of each non-word-final IG to be the following IG and the DEPREL to be \u201cDERIV\u201d.",
                    "sid": 82,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assigned the stem of the word to the first IG\u2019s LEMMA column, with all non-first IGs having LEMMA \u2018 \u2019, and the actual word form to the last IG, with all nonlast IGs having FORM \u2018 \u2019.",
                    "sid": 83,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As already mentioned in Section 3, the underscore has the punctuation character property, therefore non-last IGs (whose HEAD and DEPREL were introduced by us) are not scoring tokens.",
                    "sid": 84,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also attached or reattached punctuation (see the README available at the shared task website for details.)",
                    "sid": 85,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the following five treebanks of this type: German: TIGER treebank17 (Brants et al., 2002); Japanese: Japanese Verbmobil treebank18 (Kawata and Bartels, 2000); Portuguese: The Bosque part of the Floresta sint\u00b4a(c)tica19 (Afonso et al., 2002); Dutch: Alpino treebank20 (van der Beek et al., 2002b; van der Beek et al., 2002a); Chinese: Sinica 17Many thanks to the TIGER team for allowing us to use the treebank for the shared task and to Amit Dubey for converting the treebank.",
                    "sid": 86,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "18Many thanks to Yasuhiro Kawata, Julia Bartels and colleagues from T\u00a8ubingen University for the construction of the original Verbmobil treebank for Japanese and to Sandra K\u00a8ubler for providing the data and granting the special license for CoNLL-X.",
                    "sid": 87,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19Many thanks to Diana Santos, Eckhard Bick and other Floresta sint(c)tica project members for creating the treebank and making it publicly available, for answering many questions about the treebank (Diana and Eckhard), for correcting problems and making new releases (Diana), and for sharing scripts and explaining the head rules implemented in them (Eckhard).",
                    "sid": 88,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thanks also to Jason Baldridge for useful discussions and to Ben Wing for independently reporting problems which Diana then fixed.",
                    "sid": 89,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "20Many thanks to Gertjan van Noord and the other people at the University of Groningen for creating the Alpino Treebank and releasing it for free, to Gertjan van Noord for answering all our questions and for providing extra test material and to Antal van den Bosch for help with the memory-based tagger. treebank21 (Chen et al., 2003).",
                    "sid": 90,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their conversion to dependency format required the definition of a head table.",
                    "sid": 91,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fortunately, in contrast to the Penn Treebank for which the head table is based on POS22 we could use the grammatical functions annotated in these treebanks.",
                    "sid": 92,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, head rules are often of the form: the head child of a VP/clause is the child with the HD/predicator/hd/Head function.",
                    "sid": 93,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The DEPREL value for a token is the function of the biggest constituent of which this token is the lexical head.",
                    "sid": 94,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the constituent comprising the complete sentence did not have a function, we gave its lexical head token the DEPREL \u201cROOT\u201d.",
                    "sid": 95,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Chinese treebank, most functions are not grammatical functions (such as \u201csubject\u201d, \u201cobject\u201d) but semantic roles (such as \u201cagent\u201d, \u201ctheme\u201d).",
                    "sid": 96,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Portuguese treebank, the conversion was complicated by the fact that a detailed specification existed which tokens should be the head of which other tokens, e.g. the finite verb must be the head of the subject and the complementzier but the main verb must be the head of the complements and adjuncts.23 Given that the Floresta sint\u00b4a(c)tica does not use traditional VP constituents but rather verbal chunks (consisting mainly of verbs), a simple MagermanCollins-style head table was not sufficient to derive the required dependency structure.",
                    "sid": 97,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead we used a head table that defined several types of heads (syntactic, semantic) and a link table that specified what linked to which type of head.24 Another problem existed with the Dutch treebank.",
                    "sid": 98,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Its original PoS tag set is very coarse and the PoS and the word stem information is not very reliable.25 We therefore decided to retag the treebank automatically using the Memory-Based Tagger (MBT) (Daelemans et al., 1996) which uses a very fine-grained tag set.",
                    "sid": 99,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, this created a problem with multiwords.",
                    "sid": 100,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MBT does not have the concept of multiwords and therefore tags all of their 21Many thanks to Academia Sinica for granting the temporary license for CoNLL-X, to Keh-Jiann Chen for answering our questions and to Amit Dubey for converting the treebank.",
                    "sid": 101,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "22containing rules such as: the head child of a VP is the leftmost \u201cto\u201d, or else the leftmost past tense verb, or else etc. components individually.",
                    "sid": 102,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As Alpino does not provide an internal structure for multiwords, we had to treat multiwords as one token.",
                    "sid": 103,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we then lack a proper PoS for the multiword.",
                    "sid": 104,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After much discussion, we decided to assign each multiword the CPOSTAG \u201cMWU\u201d (multiword unit) and a POSTAG which is the concatenation of the PoS of all the components as predicted by MBT (separated by an underscore).",
                    "sid": 105,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Likewise, the FEATS are a concatenation of the morphological features of all components.",
                    "sid": 106,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach resulted in many different POSTAG values for the training set and even in unseen values in the test set.",
                    "sid": 107,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It remains to be tested whether our approach resulted in data sets better suited for parsing than the original.",
                    "sid": 108,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used two treebanks of this type: Spanish: Cast3LB26 (Civit Torruella and MartiAntonin, 2002; Navarro et al., 2003; Civit et al., 2003); Bulgarian: BulTreeBank27 (Simov et al., 2002; Simov and Osenova, 2003; Simov et al., 2004; Osenova and Simov, 2004; Simov et al., 2005).",
                    "sid": 109,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Converting a phrase structure treebank with only a few functions to a dependency format usually requires linguistic competence in the treebank\u2019s language in order to create the head table and missing function labels.",
                    "sid": 110,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are grateful to Chanev et al. (2006) for converting the BulTreeBank to the shared task format and to Montserrat Civit for providing us with a head table and a function mapping for Cast3LB.28 Table 1 shows details of all data sets.",
                    "sid": 111,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Nivre and Nilsson (2005) we use the following definition: \u201can arc (i, j) is projective iff all nodes occurring between i and j are dominated by i (where dominates is the transitive closure of the arc rela26Many thanks to Montserrat Civit and Toni Martifor allowing us to use Cast3LB for CoNLL-X and to Amit Dubey for converting the treebank.",
                    "sid": 112,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "27Many thanks to Kiril Simov and Petya Osenova for allowing us to use the BulTreeBank for CoNLL-X.",
                    "sid": 113,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "28Although unfortunately, due to a bug, the function list was not used and the Spanish data in the shared task ended up with many DEPREL values being simply \u2018 \u2019.",
                    "sid": 114,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By the time we discovered this, the test data release date was very close and we decided not to release new bug-fixed training material that late. tion)\u201d.29",
                    "sid": 115,
                    "ssid": 51,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 approaches",
            "number": "6",
            "sents": [
                {
                    "text": "Table 2 tries to give an overview of the wide variety of parsing approaches used by participants.",
                    "sid": 116,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We refer to the individual papers for details.",
                    "sid": 117,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are several dimensions along which to classify approaches.",
                    "sid": 118,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Phrase structure parsers are often classified in terms of the parsing order: top-down, bottom-up or various combinations.",
                    "sid": 119,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For dependency parsing, there seem to be two different interpretations of the term \u201cbottom-up\u201d.",
                    "sid": 120,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nivre and Scholz (2004) uses this term with reference to Yamada and Matsumoto (2003), whose parser has to find all children of a token before it can attach that token to its head.",
                    "sid": 121,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We will refer to this as \u201cbottom-up-trees\u201d.",
                    "sid": 122,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another use of \u201cbottom-up\u201d is due to Eisner (1996), who introduced the notion of a \u201cspan\u201d.",
                    "sid": 123,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A span consists of a potential dependency arc r between two tokens i and j and all those dependency arcs that would be spanned by r, i.e. all arcs between tokens k and l with i < k, l < j. Parsing in this order means that the parser has to find all children and siblings on one side of a token before it can attach that token to a head on the same side.",
                    "sid": 124,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach assumes projective dependency structures.",
                    "sid": 125,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Eisner called this approach simply \u201cbottomup\u201d, while Nivre, whose parser implicitly also follows this order, called it \u201ctop-down/bottom-up\u201d to distinguish it from the pure \u201cbottom-up(-trees)\u201d order of Yamada and Matsumoto (2003).",
                    "sid": 126,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To avoid confusion, we will refer to this order as \u201cbottom-upspans\u201d.",
                    "sid": 127,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given that the parser needs to predict the HEAD as well as the DEPREL value, different approaches are possible: predict the (probabilities of the) HEADs of all tokens first, or predict the (probabilities of the) DEPRELs of all tokens first, or predict the HEAD and DEPREL of one token before predicting these values for the next token.",
                    "sid": 128,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Within the first approach, each dependency can be labeled independently (Corston-Oliver and Aue, 2006) or a (news, dialogue, novel); type of annotation (d=dependency, c=constituents, dc=discontinuous constituents, +f=with functions, +t=with types).",
                    "sid": 129,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the training data: number of tokens (times 1000); percentage of non-scoring tokens; number of parse tree units (usually sentences, times 1000); average number of (scoring and non-scoring) tokens per parse tree unit; whether a lemma or stem is available; how many different CPOSTAG values, POSTAG values, FEATS components and DEPREL values occur for scoring tokens; how many different values for DEPREL scoring tokens with HEAD=0 can have (if that number is 1, there is one designated label (e.g.",
                    "sid": 130,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201cROOT\u201d) for tokens with HEAD=0); percentage of scoring tokens with HEAD=0, a head that precedes or a head that follows the token (this nicely shows which languages are predominantly head-initial or head-final); the average number of scoring tokens with HEAD=0 per parse tree unit; the percentage of (scoring and non-scoring) non-projective relations and of parse tree units with at least one non-projective relation.",
                    "sid": 131,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the test data: number of scoring tokens; percentage of scoring tokens with a FORM or a LEMMA that does not occur in the training data. afinal punctuation was deliberately left out during the conversion (as it is explicitly excluded from the tree structure) bthe non-last IGs of a word are non-scoring, see Section 4.1 cin many cases the parse tree unit in PADT is not a sentence but a paragraph din many cases the unit in Sinica is not a sentence but a comma-separated clause or phrase ethe treebank consists of transcribed dialogues, in which some sentences are very short, e.g. just \u201cHai.\u201d (\u201cYes.\u201d) fonly part of the Arabic data has non-underscore values for the LEMMA column gno mapping from fine-grained to coarse-grained tags was available; same for Swedish of the first author): algorithm (Y&M: Yamada and Matsumoto (2003), ILP: Integer Linear Programming), vertical direction (irrelevant, mpf: most probable first, bottom-up-spans, bottom-up-trees), horizontal direction (irrelevant, mpf: most probable first, forward, backward), search (optimal, approximate, incremental, best-first exhaustive, deterministic), labeling (interleaved, separate and 1st step, separate and 2nd step), non-projective (ps-pr: through pseudo-projective approach), learner (ME: Maximum Entropy; learners in brackets were explored but not used in the official submission), preprocessing (projectivize, d2c: dependencies to constituents), postprocessing (deprojectivize, c2d: constituents to dependencies), learner parameter optimization per language anon-projectivity through approximate search, used for some languages b20 averaged perceptrons combined into a Bayes Point Machine cintroduced a single POS tag \u201caux\u201d for all Swedish auxiliary and model verbs dby having no projectivity constraint eselective projectivity constraint for Japanese fseveral approaches to non-projectivity gusing some FEATS components to create some finer-grained POSTAG values hreattachment rules for some types of non-projectivity ihead automaton grammar jdetermined the maximally allowed distance for relations kthrough special parser actions lpseudo-projectivizing training data only mGreedy Prepend Algorithm nbut two separate learners used for unlabeled parsing versus labeling oboth foward and backward, then combined into a single tree with CLE pbut two separate SVMs used for unlabeled parsing versus labeling qforward parsing for Japanese and Turkish, backward for the rest rattaching remaining unattached tokens through exhaustive search (not for submitted runs) sequence classifier can label all children of a token together (McDonald et al., 2006).",
                    "sid": 132,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Within the third approach, HEAD and DEPREL can be predicted simultaneously, or in two separate steps (potentially using two different learners).",
                    "sid": 133,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At the highest level of abstraction, there are two fundamental approaches, which we will call \u201call pairs\u201d and \u201cstepwise\u201d.",
                    "sid": 134,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In an \u201call pairs\u201d approach, every possible pair of two tokens in a sentence is considered and some score is assigned to the possibility of this pair having a (directed) dependency relation.",
                    "sid": 135,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using that information as building blocks, the parser then searches for the best parse for the sentence.",
                    "sid": 136,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach is one of those described in Eisner (1996).",
                    "sid": 137,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The definition of \u201cbest\u201d parse depends on the precise model used.",
                    "sid": 138,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That model can be one that defines the score of a complete dependency tree as the sum of the scores of all dependency arcs in it.",
                    "sid": 139,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The search for the best parse can then be formalized as the search for the maximum spanning tree (MST) (McDonald et al., 2005b).",
                    "sid": 140,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the parse has to be projective, Eisner\u2019s bottom-up-span algorithm (Eisner, 1996) can be used for the search.",
                    "sid": 141,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For non-projective parses, McDonald et al. (2005b) propose using the Chu-Liu-Edmonds (CLE) algorithm (Chu and Liu, 1965; Edmonds, 1967) and McDonald and Pereira (2006) describe an approximate extension of Eisner\u2019s algorithm.",
                    "sid": 142,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are also alternatives to MST which allow imposing additional constraints on the dependency structure, e.g.",
                    "sid": 143,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "that at most one dependent of a token can have a certain label, such as \u201csubject\u201d, see Riedel et al. (2006) and Bick (2006).",
                    "sid": 144,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By contrast, Canisius et al. (2006) do not even enforce the tree constraint, i.e. they allow cycles.",
                    "sid": 145,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a variant of the \u201call pairs\u201d approach, only those pairs of tokens are considered that are not too distant (Canisius et al., 2006).",
                    "sid": 146,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a stepwise approach, not all pairs are considered.",
                    "sid": 147,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, the dependency tree is built stepwise and the decision about what step to take next (e.g.",
                    "sid": 148,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "which dependency to insert) can be based on information about, in theory all, previous steps and their results (in the context of generative probabilistic parsing, Black et al. (1993) call this the history).",
                    "sid": 149,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Stepwise approaches can use an explicit probability model over next steps, e.g. a generative one (Eisner, 1996; Dreyer et al., 2006), or train a machine learner to predict those.",
                    "sid": 150,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The approach can be deterministic (at each point, one step is chosen) or employ various types of search.",
                    "sid": 151,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, parsing can be done in a bottom-up-constituent or a bottom-up-spans fashion (or in another way, although this was not done in this shared task).",
                    "sid": 152,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, parsing can start at the first or the last token of a sentence.",
                    "sid": 153,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When talking about languages that are written from left to right, this distinction is normally referred to as left-to-right versus right-to-left.",
                    "sid": 154,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, for multilingual parsing which includes languages that are written from right to left (Arabic) or sometimes top to bottom (Chinese, Japanese) this terminology is confusing because it is not always clear whether a left-to-right parser for Arabic would really start with the leftmost (i.e. last) token of a sentence or, like for other languages, with the first (i.e. rightmost).",
                    "sid": 155,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, starting with the first token (\u201cforward\u201d) makes more sense from a psycholinguistic point of view but starting with the last (\u201cbackward\u201d) might be beneficial for some languages (possibly related to them being head-initial versus head-final languages).",
                    "sid": 156,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parsing order directly determines what information will be available from the history when the next decision needs to be made.",
                    "sid": 157,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Stepwise parsers tend to interleave the prediction of HEAD and DEPREL.",
                    "sid": 158,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All data sets except the Chinese one contain some non-projective dependency arcs, although their proportion varies from 0.1% to 5.4%.",
                    "sid": 159,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Participants took the following approaches to non-projectivity: (Bick, 2006) or if the classifier chooses a special action (Attardi, 2006) or the parser predicts a trace (Schiehlen and Spranger, 2006). training trees to projective ones but encode the information necessary to make the inverse transformation in the DEPREL, so that this inverse transformation can also be carried out on the test trees (Nivre et al., 2006).",
                    "sid": 160,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 shows which column values have been used by participants.",
                    "sid": 161,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nobody used the PHEAD/PDEPREL column in any way.",
                    "sid": 162,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is likely that those who did not use any of the other columns did so mainly for practical reasons, such as the limited time and/or the difficulty to integrate it into an existing parser.",
                    "sid": 163,
                    "ssid": 48,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5.6.1 form versus lemma",
            "number": "7",
            "sents": [
                {
                    "text": "Lemma or stem information has often been ignored in previous dependency parsers.",
                    "sid": 164,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the shared task data, it was available in just over half the data sets.",
                    "sid": 165,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both LEMMA and FORM encode lexical information.",
                    "sid": 166,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is therefore a certain redundancy.",
                    "sid": 167,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Participants have used these two columns in different ways: pating groups.",
                    "sid": 168,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2018\u2212\u2019: a column value was not used at all.",
                    "sid": 169,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2018+\u2019: used in at least some features.",
                    "sid": 170,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2018(+)\u2019: Variant of FORM used only if LEMMA is missing, or only parts of FEATS used.",
                    "sid": 171,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2018++\u2019: used more extensively than another column containing related information (where FORM and LEMMA are related, as are CPOSTAG and POSTAG), e.g. also in combination features or features for context tokens in addition to features for the focus token(s).",
                    "sid": 172,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201crer.\u201d: used in the reranker only.",
                    "sid": 173,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the last column: atomic, comp.",
                    "sid": 174,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "= components, cr.pr.",
                    "sid": 175,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "= cross-product. aalso prefix and suffix for labeler binstead of form for Arabic and Spanish cinstead of POSTAG for Dutch and Turkish dfor labeler; unlab. parsing: only some for global features ealso prefix falso 1st character of POSTAG gonly as backoff hreranker: also suffix; if no lemma, use prefix of FORM iLEMMA, POSTAG, FEATS only for back-off smoothing All data sets except German and Swedish had different values for CPOSTAG and POSTAG, although the granularity varied widely.",
                    "sid": 176,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Again, there are different approaches to dealing with the redundancy: By design, a FEATS column value has internal structure.",
                    "sid": 177,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Splitting it at the \u2018|\u201930 results in a set of components.",
                    "sid": 178,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following approaches have been used: When deciding whether there should be a dependency relation between tokens i and j, all parsers use at least information about these two tokens.",
                    "sid": 179,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the following sources of information can be used (see Table 4): token context (tc): a limited number (determined by the window size) of tokens directly preceding or following i or j; children: information about the already found children of i and j; siblings: in a set-up where the decision is not \u201cis there a relation between i and j\u201d but \u201cis i the head of j\u201d or in a separate labeling step, the siblings of i are the already found children of j; structural context (sc) other than children/siblings: neighboring subtrees/spans, or ancestors of i and j; distance from i to j; information derived from all the tokens in between i and j (e.g. whether there is an intervening verb or how many intervening commas there are); global features (e.g. does the sentence contain a finite verb); explicit feature combinations (depending on the learner, these might not be necessary, e.g. a polynomial kernel routinely combines features); for classifier-based parsers: the previous actions, i.e. classifications; whether information about labels is used as input for other decisions.",
                    "sid": 180,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the precise set of features can be optimized per language.",
                    "sid": 181,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 results",
            "number": "8",
            "sents": [
                {
                    "text": "Table 5 shows the official results for submitted parser outputs.31 The two participant groups with the highest total score are McDonald et al. (2006) and Nivre et al.",
                    "sid": 182,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2006).",
                    "sid": 183,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As both groups had much prior experience in multilingual dependency parsing (see Section 2), it is not too surprising that they both achieved good results.",
                    "sid": 184,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is surprising, however, how similar their total scores are, given that their approaches are quite different (see Table 2).",
                    "sid": 185,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results show that experiments on just one or two languages certainly give an indication of the usefulness of a parsing approach but should not be taken as proof that one algorithm is better for \u201cparsing\u201d (in general) than another that performs slightly worse.",
                    "sid": 186,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Bulgarian scores suggest that rankings would not have been very different had it been the 13th obligatory languages.",
                    "sid": 187,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 6 shows that the same holds had we used another evaluation metric.",
                    "sid": 188,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that a negative number in both the third and fifth column indicates that errors on HEAD and DEPREL occur together on the same token more often than for other parsers.",
                    "sid": 189,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we checked that, had we also scored on punctuation tokens, total scores as well as rankings would only have shown very minor differences.",
                    "sid": 190,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "7 result analysis",
            "number": "9",
            "sents": [
                {
                    "text": "The average LAS over all data sets varies between 56.0 for Turkish and 85.9 for Japanese.",
                    "sid": 191,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Top scores vary between 65.7 for Turkish and 91.7 for Japanese.",
                    "sid": 192,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, there is a high correlation between the best scores and the average scores.",
                    "sid": 193,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that data sets are inherently easy or difficult, no matter what the parsing approach.",
                    "sid": 194,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The \u201ceasiest\u201d one is clearly the Japanese data set.",
                    "sid": 195,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it would be wrong to conclude from this that Japanese in general is easy to parse.",
                    "sid": 196,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is more likely that the effect stems from the characteristics of the data.",
                    "sid": 197,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Japanese Verbmobil treebank contains dialogue within a restricted domain (making business appointments).",
                    "sid": 198,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As 31Unfortunately, urgent other obligations prevented two participants (John O\u2019Neil and Kenji Sagae) from submitting a paper about their shared task work.",
                    "sid": 199,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their results are indicated by a smaller font.",
                    "sid": 200,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sagae used a best-first probabilistic version of Y&M (p.c.). official metric (LAS).",
                    "sid": 201,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The third column shows how the ranking for each participant changes (or not: \u2018=\u2019) if the unlabeled attachment scores, as shown in the fourth column, are used.",
                    "sid": 202,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fifth column shows how the ranking changes (in comparison to LAS) if the label accuracies, as shown in the sixth column, are used. aIn Bick\u2019s method, preference is given to the assignment of dependency labels. bSchiehlen derived the constituent labels for his PCFG approach from the DEPREL values. cDue to the bug (see footnote with Table 5). can be seen in Table 1, there are very few new FORM values in the test data, which is an indication of many dialogues in the treebank being similar.",
                    "sid": 203,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, parsing units are short on average.",
                    "sid": 204,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the set of DEPREL values is very small and consequently the ratio between (C)POSTAG and DEPREL values is extremely favorable.",
                    "sid": 205,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be interesting to apply the shared task parsers to the Kyoto University Corpus (Kurohashi and Nagao, 1997), which is the standard treebank for Japanese and has also been used by Kudo and Matsumoto tions (SD) from the average per participant are calculated over the 12 obligatory languages (i.e. excluding Bulgarian).",
                    "sid": 206,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that due to the equal sizes of the test sets for all languages, the total scores, i.e. the LAS over the concatenation of the 12 obligatory test sets, are identical (up to the first decimal digit) to the average LAS over the 12 test sets.",
                    "sid": 207,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Averages and standard deviations per data set are calculated ignoring zero scores (i.e. results not submitted).",
                    "sid": 208,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The highest score for each column and those not significantly worse (p < 0.05) are shown in bold face.",
                    "sid": 209,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Significance was computed using the official scoring script eval.pl and Dan Bikel\u2019s Randomized Parsing Evaluation Comparator, which implements stratified shuffling. aAttardi\u2019s submitted results contained an unfortunate bug which caused the DEPREL values of all tokens with HEAD=0 to be an underscore (which is scored as incorrect).",
                    "sid": 210,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the simple heuristic of assigning the DEPREL value that most frequently occured with HEAD=0 in training would have resulted in a total LAS of 67.5.",
                    "sid": 211,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2000), or to the domain-restricted Japanese dialogues of the ATR corpus (Lepage et al., 1998).32 Other relatively \u201ceasy\u201d data sets are Portuguese (2nd highest average score but, interestingly, the third-longest parsing units), Bulgarian (3rd), German (4th) and Chinese (5th).",
                    "sid": 212,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chinese also has the second highest top score33 and Chinese parsing units 32Unfortunately, both these treebanks need to be bought, so they could not be used for the shared task.",
                    "sid": 213,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note also that Japanese dependency parsers often operate on \u201cbunsetsus\u201d instead of words.",
                    "sid": 214,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bunsetsus are related to chunks and consist of a content word and following particles (if any).",
                    "sid": 215,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "33Although this seems to be somewhat of a mystery compared to the ranking according to the average scores.",
                    "sid": 216,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Riedel et are the shortest. and Chinese parsing units are the shortest.",
                    "sid": 217,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We note that all \u201ceasier\u201d data sets offer large to middle-sized training sets.",
                    "sid": 218,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most difficult data set is clearly the Turkish one.",
                    "sid": 219,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is rather small, and in contrast to Arabic and Slovene, which are equally small or smaller, it covers 8 genres, which results in a high percentage of new FORM and LEMMA values in the test set.",
                    "sid": 220,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also possible that parsers get confused by the high proportion (one third!)",
                    "sid": 221,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "of non-scoring tokens al. (2006)\u2019s top score is more than 3% absolute above the second highest score and they offer no clear explanation for their success. and the many tokens with \u2018 \u2019 as either the FORM or LEMMA.",
                    "sid": 222,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a clear need for further research to check whether other representations result in better performance.",
                    "sid": 223,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second-most difficult data set is Arabic.",
                    "sid": 224,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is quite small and has by far the longest parsing units.",
                    "sid": 225,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The third-most difficult data set is Slovene.",
                    "sid": 226,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has the smallest training set.",
                    "sid": 227,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, its average as well as top score far exceed those for Arabic and Turkish, which are larger.",
                    "sid": 228,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Interestingly, although the treebank text comes from a single source (a translation of Orwell\u2019s novel \u201c1984\u201d), there is quite a high proportion of new FORM and LEMMA values in the test set.",
                    "sid": 229,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fourth-most difficult data set is Czech in terms of the average score and Dutch in terms of the top score.",
                    "sid": 230,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The diffence in ranking for Czech is probably due to the fact that it has by far the largest training set and ironically, several participants could not train on all data within the limited time, or else had to partition the data and train one model for each partition.",
                    "sid": 231,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Likely problems with the Dutch data set are: noisy (C)POSTAG and LEMMA, (C)POSTAG for multiwords, and the highest proportion of nonprojectivity.",
                    "sid": 232,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Factors that have been discussed so far are: the size of the training data, the proportion of new FORM and LEMMA values in the test set, the ratio of (C)POSTAG to DEPREL values, the average length of the parsing unit the proportion of nonprojective arcs/parsing units.",
                    "sid": 233,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be interesting to derive a formula based on those factors that fits the shared task data and see how well it predicts results on new data sets.",
                    "sid": 234,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One factor that seems to be irrelevant is the head-final versus head-initial distinction, as both the \u201ceasiest\u201d and the most difficult data sets are for head-final languages.",
                    "sid": 235,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is also no clear proof that some language families are easier (with current parsing methods) than others.",
                    "sid": 236,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be interesting to test parsers on the Hebrew treebank (Sima\u2019an et al., 2001), to compare performance to Arabic, the other Semitic language in the shared task, or on the Hungarian Szeged Corpus (Csendes et al., 2004), for another agglutinative language.",
                    "sid": 237,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For most parsers, their ranking for a specific language differs at most a few places from their overall ranking.",
                    "sid": 238,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are some outliers though.",
                    "sid": 239,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, Johansson and Nugues (2006) and Yuret (2006) are seven ranks higher for Turkish than overall, while Riedel et al. (2006) are five ranks lower.",
                    "sid": 240,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Canisius et al. (2006) are six and Schiehlen and Spranger (2006) even eight ranks higher for Dutch than overall, while Riedel et al.",
                    "sid": 241,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2006) are six ranks lower for Czech and Johansson and Nugues (2006) also six for Chinese.",
                    "sid": 242,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some of the higher rankings could be related to native speaker competence and resulting better parameter tuning but other outliers remain a mystery.",
                    "sid": 243,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even though McDonald et al. (2006) and Nivre et al.",
                    "sid": 244,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2006) obtained very similar overall scores, a more detailed look at their performance shows clear differences.",
                    "sid": 245,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Taken over all 12 obligatory languages, both obtain a recall of more than 89% on root tokens (i.e. those with HEAD=0) but Nivre\u2019s precision on them is much lower than McDonald\u2019s (80.91 versus 91.07).",
                    "sid": 246,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is likely to be an effect of the different parsing approaches.",
                    "sid": 247,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When breaking down by part-of-speech the results of all participants on all data sets, one can observe some patterns of \u201ceasy\u201d and \u201cdifficult\u201d parts-ofspeech, at least in so far as tag sets are comparable across treebanks.",
                    "sid": 248,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The one PoS that everybody got 100% correct are the German infinitival markers (tag PTKZU; like \u201cto\u201d in English).",
                    "sid": 249,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Accuracy on the Swedish equivalent (IM) is not far off at 98%.",
                    "sid": 250,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other easy PoS are articles, with accuracies in the nineties for German, Dutch, Swedish, Portuguese and Spanish.",
                    "sid": 251,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As several participants have remarked in their papers, prepositions are much more difficult, with typical accuracies in the fifties or sixties.",
                    "sid": 252,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, conjunctions typically score low, with accuracies even in the forties for Arabic and Dutch.",
                    "sid": 253,
                    "ssid": 63,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "8 future research",
            "number": "10",
            "sents": [
                {
                    "text": "There are many directions for interesting research building on the work done in this shared task.",
                    "sid": 254,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One is the question which factors make data sets \u201ceasy\u201d or difficult.",
                    "sid": 255,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another is finding out how much of parsing performance depends on annotations such as the lemma and morphological features, which are not yet routinely part of treebanking efforts.",
                    "sid": 256,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this respect, it would be interesting to repeat experiments with the recently released new version of the TIGER treebank which now contains this information.",
                    "sid": 257,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One line of research that does not require additional annotation effort is defining or improving the mapping from coarse-grained to finegrained PoS tags.34 Another is harvesting and using large-scale distributional data from the internet.",
                    "sid": 258,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also hope that by combining parsers we can achieve even better performance, which in turn would facilitate the semi-automatic enlargement of existing treebanks and possibly the detection of remaining errors.",
                    "sid": 259,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This would create a positive feedback loop.",
                    "sid": 260,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally one must not forget that almost all of the LEMMA, (C)POSTAG and FEATS values and even part of the FORM column (the multiword tokens used in many data sets and basically all tokenization for Chinese and Japanese, where words are normally not delimited by spaces) have been manually created or corrected and that the general parsing task has to integrate automatic tokenization, morphological analysis and tagging.",
                    "sid": 261,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hope that the resources created and lessons learned during this shared task will be valuable for many years to come but also that they will be extended and improved by others in the future, and that the shared task website will grow into an informational hub on multilingual dependency parsing.",
                    "sid": 262,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}