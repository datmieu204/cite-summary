{
    "ID": "C10-1135",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Joint Tokenization and Translation",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As tokenization is usually ambiguous for many natural languages such as Chineseand Korean, tokenization errors might po tentially introduce translation mistakes fortranslation systems that rely on 1-best tokenizations.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While using lattices to offer more alternatives to translation systems have elegantly alleviated this prob lem, we take a further step to tokenize and translate jointly.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Taking a sequence of atomic units that can be combined to form words in different ways as input, our joint decoder produces a tokenization on the source side and a translation on thetarget side simultaneously.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By integrat ing tokenization and translation features in a discriminative framework, our jointdecoder outperforms the baseline trans lation systems using 1-best tokenizationsand lattices significantly on both ChineseEnglish and Korean-Chinese tasks.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Interestingly, as a tokenizer, our joint de coder achieves significant improvements over monolingual Chinese tokenizers.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Tokenization plays an important role in statistical machine translation (SMT) because tokenizing a source-language sentence is always the first step in SMT systems.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on the type of input, Miand Huang (2008) distinguish between two cat egories of SMT systems : string-based systems (Koehn et al, 2003; Chiang, 2007; Galley et al, source target tokenize+translate string tokenization translation source target string tokenize tokenization translate translation (a) (b) Figure 1: (a) Separate tokenization and translation and (b) joint tokenization and translation.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2006; Shen et al, 2008) that take a string as input and tree-based systems (Liu et al, 2006; Mi et al,2008) that take a tree as input.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that a tree based system still needs to first tokenize the input sentence and then obtain a parse tree or forest of the sentence.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in Figure 1(a), we refer tothis pipeline as separate tokenization and transla tion because they are divided into single steps.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As tokenization for many languages is usuallyambiguous, SMT systems that separate tokeniza tion and translation suffer from a major drawback:tokenization errors potentially introduce translation mistakes.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As some languages such as Chi nese have no spaces in their writing systems, how to segment sentences into appropriate words has a direct impact on translation performance (Xu et al., 2005; Chang et al, 2008; Zhang et al, 2008).",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, although agglutinative languages such as Korean incorporate spaces between ?words?,which consist of multiple morphemes, the gran ularity is too coarse and makes the training data 1200considerably sparse.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Studies reveal that segmenting ?words?",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "into morphemes effectively im proves translating morphologically rich languages (Oflazer, 2008).",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More importantly, a tokenization close to a gold standard does not necessarily leads to better translation quality (Chang et al, 2008; Zhang et al, 2008).",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, it is necessary to offer more tokenizations to SMT systems toalleviate the tokenization error propagation prob lem.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently, many researchers have shown thatreplacing 1-best tokenizations with lattices im proves translation performance significantly (Xu et al, 2005; Dyer et al, 2008; Dyer, 2009).",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We take a next step towards the direction of offering more tokenizations to SMT systems by proposing joint tokenization and translation.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in Figure 1(b), our approach tokenizes and translates jointly to find a tokenization anda translation for a source-language string simultaneously.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We integrate translation and tokeniza tion models into a discriminative framework (Och and Ney, 2002), within which tokenization andtranslation models interact with each other.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Experiments show that joint tokenization and translation outperforms its separate counterparts (1 best tokenizations and lattices) significantly on the NIST 2004 and 2005 Chinese-English test sets.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our joint decoder also reports positive results on Korean-Chinese translation.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a tokenizer,our joint decoder achieves significantly better tokenization accuracy than three monolingual Chi nese tokenizers.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "separate tokenization and translation. ",
            "number": "2",
            "sents": [
                {
                    "text": "Tokenization is to split a string of characters into meaningful elements, which are often referred toas words.",
                    "sid": 25,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Typically, machine translation separates tokenization from decoding as a preprocess ing step.",
                    "sid": 26,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An input string is first preprocessed by atokenizer, and then is translated based on the tokenized result.",
                    "sid": 27,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Take the SCFG-based model (Chi ang, 2007) as an example.",
                    "sid": 28,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given the character sequence of Figure 2(a), a tokenizer first splits it into the word sequence as shown in Figure 2(b),then the decoder translates the word sequence us ing the rules in Table 1.",
                    "sid": 29,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach makes the translation process simple and efficient.",
                    "sid": 30,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it may not be ? ?",
                    "sid": 31,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0?",
                    "sid": 32,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 2 3 4 5 6 7 Figure 2: Chinese tokenization: (a) character sequence; (b) and (c) tokenization instances; (d) lattice created from (b) and (c).",
                    "sid": 33,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We insert ?-?",
                    "sid": 34,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "between characters in a word just for clarity.",
                    "sid": 35,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "r1 tao-fei-ke ?Taufik r2 duo fen ? gain a point r3 x1 you-wang x2 ? x1 will have the chance to x2Table 1: An SCFG derivation given the tokenization of Fig ure 2(b).",
                    "sid": 36,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "optimal for machine translation.",
                    "sid": 37,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, optimal granularity is unclear for machine translation.",
                    "sid": 38,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wemight face severe data sparseness problem by using large granularity, while losing much useful in formation with small one.",
                    "sid": 39,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consider the example in Figure 2.",
                    "sid": 40,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is reasonable to split duo fen intotwo words as duo and fen, since they have one to-one alignments to the target side.",
                    "sid": 41,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nevertheless,while you and wang also have one-to-one align ments, it is risky to segment them into two words.",
                    "sid": 42,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because the decoder is prone to translate wang as a verb look without the context you.",
                    "sid": 43,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, there may be tokenization errors.",
                    "sid": 44,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Figure2(c), tao fei ke is recognized as a Chinese person name with the second name tao and the first name fei-ke, but the whole string tao fei ke should be a name of the Indonesian badminton player.Therefore, it is necessary to offer more tokenizations to SMT systems to alleviate the tok enization error propagation problem.",
                    "sid": 45,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently,many researchers have shown that replacing 1best tokenizations with lattices improves transla tion performance significantly.",
                    "sid": 46,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this approach, a lattice compactly encodes many tokenizations and is fixed before decoding.",
                    "sid": 47,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1201 0 1 2 3 4 5 6 7 1 2 3 Figure 3: A derivation of the joint model for the tokenization in Figure 2(b) and the translation in Figure 2 by using the rules in Table 1.",
                    "sid": 48,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "N means tokenization while  represents translation.",
                    "sid": 49,
                    "ssid": 25,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "joint tokenization and translation. ",
            "number": "3",
            "sents": [
                {
                    "text": "3.1 Model.",
                    "sid": 50,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We take a next step towards the direction of of fering more tokenizations to SMT systems by proposing joint tokenization and translation.",
                    "sid": 51,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Asshown in Figure 1(b), the decoder takes an un tokenized string as input, and then tokenizes thesource side string while building the corresponding translation of the target side.",
                    "sid": 52,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the tradi tional rules like those in Table 1 natively include tokenization information, we can directly applythem for simultaneous construction of tokeniza tion and translation by the source side and target side of rules respectively.",
                    "sid": 53,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Figure 3, our joint model takes the character sequence in Figure 2(a)as input, and synchronously conducts both trans lation and tokenization using the rules in Table 1.As our model conducts tokenization during de coding, we can integrate tokenization models as features together with translation features underthe discriminative framework.",
                    "sid": 54,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expect tok enization and translation could collaborate with each other.",
                    "sid": 55,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tokenization offers translation withgood tokenized results, while translation helps to kenization to eliminate ambiguity.",
                    "sid": 56,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Formally, the probability of a derivation D is represented as P (D) ? ?",
                    "sid": 57,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "i ?i(D)?i (1)where ?i are features defined on derivations in cluding translation and tokenization, and ?i are feature weights.",
                    "sid": 58,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We totally use 16 features: ? 8 traditional translation features (Chiang,2007): 4 rule scores (direct and reverse translation scores; direct and reverse lexical trans lation scores); language model of the target side; 3 penalties for word count, extracted rule and glue rule.",
                    "sid": 59,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 tokenization features: maximum entropy model, language model and word count of the source side (Section 3.2).",
                    "sid": 60,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To handlethe Out Of Vocabulary (OOV) problem (Sec tion 3.3), we also introduce 5 OOV features: OOV character count and 4 OOV discount features.",
                    "sid": 61,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since our model is still a string-based model, theCKY algorithm and cube pruning are still applica ble for our model to find the derivation with max score.",
                    "sid": 62,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Adding Tokenization Features.",
                    "sid": 63,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maximum Entropy model (ME).",
                    "sid": 64,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first introduce ME model feature for tokenization by cast ing it as a labeling problem (Xue and Shen, 2003; Ng and Low, 2004).",
                    "sid": 65,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We label a character with the following 4 types: ? b: the begin of a word ? m: the middle of a word ? e: the end of a word ? s: a single-character word Taking the tokenization you-wang of the stringyou wang for example, we first create a label se quence b e for the tokenization you-wang and then calculate the probability of tokenization by P (you-wang | you wang) = P (b e | you wang) = P (b | you, you wang) ? P (e | wang, you wang) Given a tokenization wL1 with L words for a character sequence cn1 , we firstly create labels ln1for every characters and then calculate the proba bility by P (wL1 |cn1 ) = P (ln1 |cn1 ) = n?",
                    "sid": 66,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "i=1 P (li|ci, cn1 ) (2) 1202Under the ME framework, the probability of assigning the character c with the label l is repre sented as: P (l|c, cn1 ) = exp[?i ?ihi(l, c, cn1 )]?",
                    "sid": 67,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "l? exp[ ? i ?ihi(l?, c, cn1 )] (3) where hi is feature function, ?i is the feature weight of hi.",
                    "sid": 68,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the feature templates the same as Jiang et al, (2008) to extract features forME model.",
                    "sid": 69,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since we directly construct tokeniza tion when decoding, it is straight to calculate the ME model score of a tokenization according to formula (2) and (3).Language Model (LM).",
                    "sid": 70,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also use the n gram language model to calculate the probability of a tokenization wL1 : P (wL1 ) = L?",
                    "sid": 71,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "i=1 P (wi|wi?1i?n+1) (4) For instance, we compute the probability of the tokenization shown in Figure 2(b) under a 3-gram model by P (tao-fei-ke) ?P (you-wang | tao-fei-ke) ?P (duo | tao-fei-ke, you-wang) ?P (fen | you-wang, duo) Word Count (WC).",
                    "sid": 72,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature counts the number of words in a tokenization.",
                    "sid": 73,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Language model is prone to assign higher probabilities to short sentences in a biased way.",
                    "sid": 74,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature cancompensate this bias by encouraging long sen tences.",
                    "sid": 75,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, using this feature, we canoptimize the granularity of tokenization for translation.",
                    "sid": 76,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If larger granularity is preferable for trans lation, then we can use this feature to punish the tokenization containing more words.",
                    "sid": 77,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Considering All Tokenizations.",
                    "sid": 78,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Obviously, we can construct the potential tokenizations and translations by only using the ex tracted rules, in line with traditional translationdecoding.",
                    "sid": 79,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it may limits the potential to kenization space.",
                    "sid": 80,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consider a string you wang.",
                    "sid": 81,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If you-wang is not reachable by the extracted rules,the tokenization you-wang will never be consid ered under this way.",
                    "sid": 82,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the decoder may still create a derivation by splitting the string as small as possible with tokenization you wang and translating you with a and wang with look, which may hurt the translation performance.",
                    "sid": 83,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This case happens frequently for named entity especially.Overall, it is necessary to assure that the decoder can derive all potential tokenizations (Sec tion 4.1.3).",
                    "sid": 84,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To assure that, when a span is not tokenized into a single word by the extracted rules, we will add an operation, which is considering the entire span as an OOV.",
                    "sid": 85,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, we tokenize the entire span into a single word with a translation that is the copy of source side.",
                    "sid": 86,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can define the set of allpotential tokenizations ?(cn1 ) for the character se quence cn1 in a recursive way by ?(cn1 ) = n?1?",
                    "sid": 87,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "i {?(ci1) ? {w(cni+1)}} (5) here w(cni+1) means a word contains characters cni+1 and ?means the times of two sets.",
                    "sid": 88,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ac cording to this recursive definition, it is easy to prove that all tokenizations is reachable by usingthe glue rule (S ? SX,SX) and the added op eration.",
                    "sid": 89,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, glue rule is used to concatenate the translation and tokenization of the two variables S and X, which acts the role of the operator ? in equation (5).",
                    "sid": 90,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consequently, this introduces a large number of OOVs.",
                    "sid": 91,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to control the generation of OOVs, we introduce the following OOV features: OOV Character Count (OCC).",
                    "sid": 92,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature counts the number of characters covered by OOV.",
                    "sid": 93,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can control the number of OOV characters by this feature.",
                    "sid": 94,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It counts 3 when tao-fei-ke is an OOV, since tao-fei-ke has 3 characters.",
                    "sid": 95,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "OOV Discount (OD).",
                    "sid": 96,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The chances to be OOVs vary for words with different counts of characters.",
                    "sid": 97,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can directly attack this problem by adding features ODi that reward or punish OOV words which contains with i characters, or ODi,j forOOVs contains with i to j characters.",
                    "sid": 98,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 OD fea tures are used in this paper: 1, 2, 3 and 4+.",
                    "sid": 99,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, OD3 counts 1 when the word tao-fei-ke is an OOV.",
                    "sid": 100,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1203 Method Train #Rule Test TFs MT04 MT05 Speed Separate ICT 151M ICT ? 34.82 33.06 2.48 SF 148M SF ? 35.29 33.22 2.55 ME 141M ME ? 33.71 30.91 2.34 All 219M Lattice ? 35.79 33.95 3.83?",
                    "sid": 101,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "35.85 33.76 6.79 Joint ICT 151M Character ? 36.92 34.69 17.66 SF 148M 37.02 34.56 17.37 ME 141M 36.78 34.17 17.23 All 219M 37.25** 34.88** 17.52 Table 2: Comparison of Separate and Joint methods in terms of BLEU and speed (second per sentence).",
                    "sid": 102,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Columns Train and Test represents the tokenization methods for training and testing respectively.",
                    "sid": 103,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Column TFs stands for whether the 8 tokenization features is used (?)",
                    "sid": 104,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "or not (?).",
                    "sid": 105,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ICT, SF and ME are segmenter names for preprocessing.",
                    "sid": 106,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All means combined corpus processed by the three segmenters.",
                    "sid": 107,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice represent the system implemented as Dyer et al, (2008).",
                    "sid": 108,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "** means significantly (Koehn, 2004) better than Lattice (p  0.01).",
                    "sid": 109,
                    "ssid": 60,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments. ",
            "number": "4",
            "sents": [
                {
                    "text": "In this section, we try to answer the following questions: 1.",
                    "sid": 110,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Does the joint method outperform conven-.",
                    "sid": 111,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tional methods that separate tokenization from decoding.",
                    "sid": 112,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Section 4.1) 2.",
                    "sid": 113,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How about the tokenization performance of.",
                    "sid": 114,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the joint decoder?",
                    "sid": 115,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Section 4.2) 4.1 Translation Evaluation.",
                    "sid": 116,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the SCFG model (Chiang, 2007) for ourexperiments.",
                    "sid": 117,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We firstly work on the Chinese English translation task.",
                    "sid": 118,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The bilingual training data contains 1.5M sentence pairs coming from LDC data.1 The monolingual data for training English language model includes Xinhua portion of the GIGAWORD corpus, which contains 238M English words.",
                    "sid": 119,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the NIST evaluation sets of 2002 (MT02) as our development data set, and sets of 2004(MT04) and 2005(MT05) as test sets.",
                    "sid": 120,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the corpus derived from the People?s Daily (Renmin Ribao) in Feb. to Jun. 1998 containing 6M words for training LM and ME tokenization models.",
                    "sid": 121,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Translation Part.",
                    "sid": 122,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used GIZA++ (Och andNey, 2003) to perform word alignment in both di rections, and grow-diag-final-and (Koehn et al, 2003) to generate symmetric word alignment.",
                    "sid": 123,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extracted the SCFG rules as describing in Chiang (2007).",
                    "sid": 124,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The language model were trained by the 1including LDC2002E18, LDC2003E07, LDC2003E14, Hansards portion of LDC2004T07, LDC2004T08 and LDC2005T06 SRILM toolkit (Stolcke, 2002).2 Case insensitive NIST BLEU (Papineni et al, 2002) was used to measure translation performance.Tokenization Part.",
                    "sid": 125,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the toolkit imple mented by Zhang (2004) to train the ME model.",
                    "sid": 126,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Three Chinese word segmenters were used forcomparing: ICTCLAS (ICT) developed by insti tute of Computing Technology Chinese Academy of Sciences (Zhang et al, 2003); SF developed at Stanford University (Huihsin et al, 2005) and ME which exploits the ME model described in section (3.2).",
                    "sid": 127,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1.1 Joint Vs. SeparateWe compared our joint tokenization and trans lation with the conventional separate methods.",
                    "sid": 128,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The input of separate tokenization and translation can either be a single segmentation or a lattice.",
                    "sid": 129,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lattice combines the 1-best segmentations of segmenters.",
                    "sid": 130,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Same as Dyer et al, (2008), we also extracted rules from a combined bilingual corpuswhich contains three copies from different seg menters.",
                    "sid": 131,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We refer to this version of rules as All.Table 2 shows the result.3 Using all rule ta ble, our joint method significantly outperforms the best single system SF by +1.96 and +1.66 pointson MT04 and MT05 respectively, and also out performs the lattice-based system by +1.46 and+0.93 points.",
                    "sid": 132,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the 8 tokenization fea tures have small impact on the lattice system, probably because the tokenization space limited 2The calculation of LM probabilities for OOVs is done by the SRILM without special treatment by ourself.",
                    "sid": 133,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3The weights are retrained for different test conditions, so do the experiments in other sections.",
                    "sid": 134,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1204 ME LM WC OCC OD MT05 ? ?",
                    "sid": 135,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "24.97?",
                    "sid": 136,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "25.30 ? ?",
                    "sid": 137,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "24.70 ? ?",
                    "sid": 138,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "24.84 ? ?",
                    "sid": 139,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "25.51 ? ?",
                    "sid": 140,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "25.34 ? ?",
                    "sid": 141,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "25.74?",
                    "sid": 142,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "26.37 Table 3: Effect of tokenization features on Chinese-English translation task.",
                    "sid": 143,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "denotes using a tokenization feature while ???",
                    "sid": 144,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "denotes that it is inactive.by lattice has been created from good tokeniza tion.",
                    "sid": 145,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not surprisingly, our decoding method is about 2.6 times slower than lattice method with tokenization features, since the joint decoder takes character sequences as input, which is about 1.7times longer than the corresponding word se quences tokenized by segmenters.",
                    "sid": 146,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Section 4.1.4).",
                    "sid": 147,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of extracted rules with different segment methods are quite close, while the All version contains about 45% more rules than the single systems.",
                    "sid": 148,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With the same rule table, our joint method improves the performance over separatemethod up to +3.03 and +3.26 points (ME).",
                    "sid": 149,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In terestingly, comparing with the separate method, the tokenization of training data has smaller effect on joint method.",
                    "sid": 150,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The BLEU scores of MT04 andMT05 fluctuate about 0.5 and 0.7 points when ap plying the joint method, while the difference ofseparate method is up to 2 and 3 points respectively.",
                    "sid": 151,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It shows that the joint method is more ro bust to segmentation performance.",
                    "sid": 152,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1.2 Effect of Tokenization Model We also investigated the effect of tokenization features on translation.",
                    "sid": 153,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to reduce the time for tuning weights and decoding, we extracted rules from the FBIS part of the bilingual corpus, and trained a 4-gram English language model on the English side of FBIS.Table 3 shows the result.",
                    "sid": 154,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only using the 8 trans lation features, our system achieves a BLEU score of 24.97.",
                    "sid": 155,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By activating all tokenization features,the joint decoder obtains an absolute improve ment by 1.4 BLEU points.",
                    "sid": 156,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When only adding one single tokenization feature, the LM and WC fail to show improvement, which may result fromtheir bias to short or long tokenizations.",
                    "sid": 157,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How Method BLEU #Word Grau #OOV ICT 33.06 30,602 1.65 644 SF 33.22 30,119 1.68 882 ME 30.91 29,717 1.70 1,614 Lattice 33.95 30,315 1.66 494 JointICT 34.69 29,723 1.70 996 JointSF 34.56 29,839 1.69 972 JointME 34.17 29,771 1.70 1,062 JointAll 34.88 29,644 1.70 883 Table 4: Granularity (Grau, counts of character per word) and counts of OOV words of different methods on MT05.",
                    "sid": 158,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The subscript of joint means the type of rule table.ever, these two features have complementary advantages and collaborate well when using them to gether (line 8).",
                    "sid": 159,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The OCC and OD features also contribute improvements which reflects the fact that handling the generation of OOV is important for the joint model.",
                    "sid": 160,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1.3 Considering All Tokenizations?",
                    "sid": 161,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to explain the necessary of consideringall potential tokenizations, we compare the perfor mances of whether to tokenize a span as a single word or not as illustrated in section 3.3.",
                    "sid": 162,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When only tokenizing by the extracted rules, we obtain 34.37 BLEU on MT05, which is about 0.5 points lower than considering all tokenizations shown in Table 2.",
                    "sid": 163,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This indicates that spuriously limitationof the tokenization space may degenerate transla tion performance.",
                    "sid": 164,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1.4 Results Analysis To better understand why the joint method can improve the translation quality, this section shows some details of the results on the MT05 data set.",
                    "sid": 165,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 shows the granularity and OOV word counts of different configurations.",
                    "sid": 166,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lattice method reduces the OOV words quite a lot which is 23% and 70% comparing with ICT and ME. Incontrast, the joint method gain an absolute im provement even thought the OOV count do not decrease.",
                    "sid": 167,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It seems the lattice method prefers totranslate more characters (since smaller granular ity and less OOVs), while our method is inclinedto maintain integrity of words (since larger granularity and more OOVs).",
                    "sid": 168,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This also explains the difficulty of deciding optimal tokenization for trans lation before decoding.",
                    "sid": 169,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are some named entities or idioms that 1205 Method Type F1 Time Monolingual ICT 97.47 0.010 SF 97.48 0.007 ME 95.53 0.008 Joint ICT 97.68 9.382 SF 97.68 10.454 ME 97.60 10.451 All 97.70 9.248 Table 5: Comparison of segmentation performance in terms of F1 score and speed (second per sentence).",
                    "sid": 170,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Type columnmeans the segmenter for monolingual method, while repre sents the rule tables used by joint method.are split into smaller granularity by the seg menters.",
                    "sid": 171,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example:????",
                    "sid": 172,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "which is an English name ?Stone?",
                    "sid": 173,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "or ??-g -u?",
                    "sid": 174,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "which means?teenage?.",
                    "sid": 175,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although the separate method is possi ble to translate them using smaller granularity, the translation results are in fact wrong.",
                    "sid": 176,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, the joint method tokenizes them as entire OOV words, however, it may result a better translation for the whole sentence.",
                    "sid": 177,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also count the overlap of the segments used by the JointAll system towards the single segmentation systems.",
                    "sid": 178,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tokenization result of JointAll contains 29, 644 words, and shares 28, 159 , 27, 772 and 27, 407 words with ICT , SF and ME respectively.",
                    "sid": 179,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And 46 unique words appear only in the joint method, where most of them are named entity.",
                    "sid": 180,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Chinese Word Segmentation Evaluation.",
                    "sid": 181,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also test the tokenization performance of our model on Chinese word segmentation task.",
                    "sid": 182,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We randomly selected 3k sentences from the corpus of People?s Daily in Jan. 1998.",
                    "sid": 183,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1k sentences were used for tuning weights, while the other 2k sentences were for testing.",
                    "sid": 184,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use MERT (Och, 2003) to tune the weights by minimizing the error measured by F1 score.",
                    "sid": 185,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in Table 5, with all features activated, our joint decoder achieves an F1 score of 97.70 which reduces the tokenization error comparingwith the best single segmenter ICT by 8.7%.",
                    "sid": 186,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sim ilar to the translation performance evaluation, our joint decoder outperforms the best segmenter with any version of rule tables.",
                    "sid": 187,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Feature F1 TFs 97.37 TFs + RS 97.65 TFs + LM 97.67 TFs + RS + LM 97.62 All 97.70 Table 6: Effect of the target side information on Chineseword segmentation.",
                    "sid": 188,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "TFs stands for the 8 tokenization fea tures.",
                    "sid": 189,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All represents all the 16 features.",
                    "sid": 190,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2.1 Effect of Target Side Information We compared the effect of the 4 Rule Scores(RS), target side Language Model (LM) on tok enization.",
                    "sid": 191,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 6 shows the effect on Chinese word segmentation.",
                    "sid": 192,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When only use tokenization features, our joint decoder achieves an F1 score of 97.37.",
                    "sid": 193,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only integrating language model or rulescores, the joint decoder achieves an absolute im provement of 0.3 point in F1 score, which reducesthe error rate by 11.4%.",
                    "sid": 194,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, when combin ing them together, the F1 score deduces slightly,which may result from the weight tuning.",
                    "sid": 195,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Us ing all feature, the performance comes to 97.70.",
                    "sid": 196,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, our experiment shows that the target sideinformation can improve the source side tokenization under a supervised way, and outperform state of-the-art systems.",
                    "sid": 197,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2.2 Best Tokenization = Best Translation?",
                    "sid": 198,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Previous works (Zhang et al, 2008; Chang etal., 2008) have shown that preprocessing the in put string for decoder by better segmenters donot always improve the translation quality, we re verify this by testing whether the joint decoder produces good tokenization and good translation at the same time.",
                    "sid": 199,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To answer the question, weused the feature weights optimized by maximiz ing BLEU for tokenization and used the weights optimized by maximizing F1 for translation.",
                    "sid": 200,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We test BLEU on MT05 and F1 score on the test data used in segmentation evaluation experiments.",
                    "sid": 201,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bytuning weights regarding to BLEU (the configura tion for JointAll in table 2), our decoder achieves a BLEU score of 34.88 and an F1 score of 92.49.",
                    "sid": 202,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, maximizing F1 (the configuration for the last line in table 6) leads to a much lower BLEU of 27.43, although the F1 is up to 97.70.This suggests that better tokenization may not al ways lead to better translations and vice versa 1206 Rule #Rule Method Test Time Morph 46M Separate 21.61 4.12Refined 55M 21.21 4.63 All 74M Joint 21.93* 5.10 Table 7: Comparison of Separate and Joint method in terms of BLEU score and decoding speed (second per sentence) on Korean-Chinese translation task.",
                    "sid": 203,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "even by the joint decoding.",
                    "sid": 204,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This also indicates the hard of artificially defining the best tokenization for translation.",
                    "sid": 205,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.3 Korean-Chinese Translation.",
                    "sid": 206,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also test our model on a quite different task:Korean-Chinese.",
                    "sid": 207,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Korean is an agglutinative language, which comes from different language fam ily comparing with Chinese.",
                    "sid": 208,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used a newswire corpus containing 256k sentence pairs as training data.",
                    "sid": 209,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The development and test data set contain 1K sentence each with one single reference.",
                    "sid": 210,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the target side oftraining set for language model training.",
                    "sid": 211,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Korean part of these data were tokenized into morpheme sequence as atomic unit for our experi ments.",
                    "sid": 212,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compared three methods.",
                    "sid": 213,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First is directly use morpheme sequence (Morph).",
                    "sid": 214,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The secondone is refined data (Refined), where we use selec tive morphological segmentation (Oflazer, 2008) for combining morpheme together on the training data.",
                    "sid": 215,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the selective method needs alignmentinformation which is unavailable in the decod ing, the test data is still of morpheme sequence.",
                    "sid": 216,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These two methods still used traditional decodingmethod.",
                    "sid": 217,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The third one extracting rules from com bined (All) data of methods 1 and 2, and using joint decoder to exploit the different granularity of rules.",
                    "sid": 218,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 7 shows the result.",
                    "sid": 219,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since there is no gold standard data for tokenization, we do not use ME and LM tokenization features here.",
                    "sid": 220,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, ourjoint method can still significantly (p  0.05) im prove the performance by about +0.3 points.",
                    "sid": 221,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thisalso reflects the importance of optimizing granu larity for morphological complex languages.",
                    "sid": 222,
                    "ssid": 113,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "5",
            "sents": [
                {
                    "text": "Methods have been proposed to optimize tok enization for word alignment.",
                    "sid": 223,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, word alignment can be simplified by packing (Ma et al, 2007) several consecutive words together.",
                    "sid": 224,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Word alignment and tokenization can also be optimized by maximizing the likelihood of bilingual corpus (Chung and Gildea, 2009; Xu et al, 2008).",
                    "sid": 225,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, these work are orthogonal to our joint method,since they focus on training step while we are con cerned of decoding.",
                    "sid": 226,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We believe we can further the performance by combining these two kinds of work.",
                    "sid": 227,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our work also has connections to multilingual tokenization (Snyder and Barzilay, 2008).",
                    "sid": 228,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whilethey have verified that tokenization can be im proved by multilingual learning, our work showsthat we can also improve tokenization by collabo rating with translation task in a supervised way.",
                    "sid": 229,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More recently, Liu and Liu (2010) also shows the effect of joint method.",
                    "sid": 230,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They integrate parsing and translation into a single step and improve the performance of translation significantly.",
                    "sid": 231,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "6",
            "sents": [
                {
                    "text": "We have presented a novel method for joint tok enization and translation which directly combines the tokenization model into the decoding phase.Allowing tokenization and translation to collaborate with each other, tokenization can be opti mized for translation, while translation also makes contribution to tokenization performance under a supervised way.",
                    "sid": 232,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We believe that our approach can be applied to other string-based model such asphrase-based model (Koehn et al, 2003), stringto-tree model (Galley et al, 2006) and string-to dependency model (Shen et al, 2008).",
                    "sid": 233,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acknowledgement The authors were supported by SK Telecom CIBusiness, and National Natural Science Founda tion of China, Contracts 60736014 and 60903138.We thank the anonymous reviewers for their insightful comments.",
                    "sid": 234,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are also grateful to Wen bin Jiang, Zhiyang Wang and Zongcheng Ji for their helpful feedback.",
                    "sid": 235,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1207",
                    "sid": 236,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}