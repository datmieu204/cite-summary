{
    "ID": "P13-2009",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Semantic Parsing as Machine Translation",
                    "sid": 0,
                    "ssid": null,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semantic parsing is the problem of deriving a structured meaning representation from a natural language utterance.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here we approach it as a straightforward machine translation task, and demonstrate that standard machine translation components can be adapted into a semantic parser.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In experiments on the multilingual GeoQuery corpus we find that our parser is competitive with the state of the art, and in some cases achieves higher accuracy than recently proposed purpose-built systems.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These results support the use of machine translation methods as an informative baseline in semantic parsing evaluations, and suggest that research in semantic parsing could benefit from advances in machine translation.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "1 introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Semantic parsing (SP) is the problem of transforming a natural language (NL) utterance into a machine-interpretable meaning representation (MR).",
                    "sid": 5,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is well-studied in NLP, and a wide variety of methods have been proposed to tackle it, e.g. rule-based (Popescu et al., 2003), supervised (Zelle, 1995), unsupervised (Goldwasser et al., 2011), and response-based (Liang et al., 2011).",
                    "sid": 6,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At least superficially, SP is simply a machine translation (MT) task: we transform an NL utterance in one language into a statement of another (un-natural) meaning representation language (MRL).",
                    "sid": 7,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Indeed, successful semantic parsers often resemble MT systems in several important respects, including the use of word alignment models as a starting point for rule extraction (Wong and Mooney, 2006; Kwiatkowski et al., 2010) and the use of automata such as tree transducers (Jones et al., 2012) to encode the relationship between NL and MRL.",
                    "sid": 8,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The key difference between the two tasks is that in SP, the target language (the MRL) has very different properties to an NL.",
                    "sid": 9,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, MRs must conform strictly to a particular structure so that they are machine-interpretable.",
                    "sid": 10,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Contrast this with ordinary MT, where varying degrees of wrongness are tolerated by human readers (and evaluation metrics).",
                    "sid": 11,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To avoid producing malformed MRs, almost all of the existing research on SP has focused on developing models with richer structure than those commonly used for MT.",
                    "sid": 12,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work we attempt to determine how accurate a semantic parser we can build by treating SP as a pure MT task, and describe pre- and postprocessing steps which allow structure to be preserved in the MT process.",
                    "sid": 13,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our contributions are as follows: We develop a semantic parser using off-the-shelf MT components, exploring phrase-based as well as hierarchical models.",
                    "sid": 14,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Experiments with four languages on the popular GeoQuery corpus (Zelle, 1995) show that our parser is competitve with the state-ofthe-art, in some cases achieving higher accuracy than recently introduced purpose-built semantic parsers.",
                    "sid": 15,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach also appears to require substantially less time to train than the two bestperforming semantic parsers.",
                    "sid": 16,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These results support the use of MT methods as an informative baseline in SP evaluations and show that research in SP could benefit from research advances in MT.",
                    "sid": 17,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "2 mt-based semantic parsing",
            "number": "2",
            "sents": [
                {
                    "text": "The input is a corpus of NL utterances paired with MRs.",
                    "sid": 18,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to learn a semantic parser using MT we linearize the MRs, learn alignments between the MRL and the NL, extract translation rules, and learn a language model for the MRL.",
                    "sid": 19,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also specify a decoding procedure that will return structured MRs for an utterance during prediction.",
                    "sid": 20,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Linearization We assume that the MRL is variable-free (that is, the meaning representation for each utterance is tree-shaped), noting that formalisms with variables, like the A-calculus, can be mapped onto variable-free logical forms with combinatory logics (Curry et al., 1980).",
                    "sid": 21,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to learn a semantic parser using MT we begin by converting these MRs to a form more similar to NL.",
                    "sid": 22,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To do so, we simply take a preorder traversal of every functional form, and label every function with the number of arguments it takes.",
                    "sid": 23,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After translation, recovery of the function is easy: if the arity of every function in the MRL is known, then every traversal uniquely specifies its corresponding tree.",
                    "sid": 24,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using an example from GeoQuery, given an input function of the form answer(population(city(cityid(\u2018seattle\u2019, \u2018wa\u2019)))) we produce a \u201cdecorated\u201d translation input of the form answer, population, city, cityid2 seattle0 wa0 where each subscript indicates the symbol\u2019s arity (constants, including strings, are treated as zeroargument functions).",
                    "sid": 25,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Explicit argument number labeling serves two functions.",
                    "sid": 26,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most importantly, it eliminates any possible ambiguity from the tree reconstruction which takes place during decoding: given any sequence of decorated MRL tokens, we can always reconstruct the corresponding tree structure (if one exists).",
                    "sid": 27,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Arity labeling additionally allows functions with variable numbers of arguments (e.g. cityid, which in some training examples is unary) to align with different natural language strings depending on context.",
                    "sid": 28,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alignment Following the linearization of the MRs, we find alignments between the MR tokens and the NL tokens using the IBM Model 4 (Brown et al., 1993).",
                    "sid": 29,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once the alignment algorithm is run in both directions (NL to MRL, MRL to NL), we symmetrize the resulting alignments to obtain a consensus many-to-many alignment (Och and Ney, 2000; Koehn et al., 2005).",
                    "sid": 30,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rule extraction From the many-to-many alignment we need to extract a translation rule table, consisting of corresponding phrases in NL and MRL.",
                    "sid": 31,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We consider a phrase-based translation model (Koehn et al., 2003) and a hierarchical translation model (Chiang, 2005).",
                    "sid": 32,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rules for the phrase-based model consist of pairs of aligned source and target sequences, while hierarchical rules are SCFG productions containing at most two instances of a single nonterminal symbol.",
                    "sid": 33,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that both extraction algorithms can learn rules which a traditional tree-transducer-based approach cannot\u2014for example the right hand side [X] river, all0 traverse, [X] corresponding to the pair of disconnected tree fragments: Language modeling In addition to translation rules learned from a parallel corpus, MT systems also rely on an n-gram language model for the target language, estimated from a (typically larger) monolingual corpus.",
                    "sid": 34,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the case of SP, such a monolingual corpus is rarely available, and we instead use the MRs available in the training data to learn a language model of the MRL.",
                    "sid": 35,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information helps guide the decoder towards well-formed state border texa state, next to, state, stateid, texas0 structures; it encodes, for example, the preferences of predicates of the MRL for certain arguments.",
                    "sid": 36,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Prediction Given a new NL utterance, we need to find the n best translations (i.e. sequences of decorated MRL tokens) that maximize the weighted sum of the translation score (the probabilities of the translations according to the rule translation table) and the language model score, a process usually referred to as decoding.",
                    "sid": 37,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Standard decoding procedures for MT produce an n-best list of all possible translations, but here we need to restrict ourselves to translations corresponding to well-formed MRs.",
                    "sid": 38,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In principle this could be done by re-writing the beam search algorithm used in decoding to immediately discard malformed MRs; for the experiments in this paper we simply filter the regular n-best list until we find a well-formed MR.",
                    "sid": 39,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This filtering can be done with time linear in the length of the example by exploiting the argument label numbers introduced during linearization.",
                    "sid": 40,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we insert the brackets according to the tree structure specified by the argument number labels.",
                    "sid": 41,
                    "ssid": 24,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "3 experimental setup",
            "number": "3",
            "sents": [
                {
                    "text": "Dataset We conduct experiments on the GeoQuery data set.",
                    "sid": 42,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpus consists of a set of 880 natural-language questions about U.S. geography in four languages (English, German, Greek and Thai), and their representations in a variablefree MRL that can be executed against a Prolog database interface.",
                    "sid": 43,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initial experimentation was done using 10 fold cross-validation on the 600sentence development set and the final evaluation on a held-out test set of 280 sentences.",
                    "sid": 44,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All semantic parsers for GeoQuery we compare against also makes use of NP lists (Jones et al., 2012), which contain MRs for every noun phrase that appears in the NL utterances of each language.",
                    "sid": 45,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our experiments, the NP list was included by appending all entries as extra training sentences to the end of the training corpus of each language with 50 times the weight of regular training examples, to ensure that they are learned as translation rules.",
                    "sid": 46,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Evaluation for each utterance is performed by executing both the predicted and the gold standard MRs against the database and obtaining their respective answers.",
                    "sid": 47,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An MR is correct if it obtains the same answer as the gold standard MR, allowing for a fair comparison between systems using different learning paradigms.",
                    "sid": 48,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Jones et al. (2012) we report accuracy, i.e. the percentage of NL questions with correct answers, and F1, i.e. the harmonic mean of precision (percentage of correct answers obtained).",
                    "sid": 49,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Implementation In all experiments, we use the IBM Model 4 implementation from the GIZA++ toolkit (Och and Ney, 2000) for alignment, and the phrase-based and hierarchical models implemented in the Moses toolkit (Koehn et al., 2007) for rule extraction.",
                    "sid": 50,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The best symmetrization algorithm, translation and language model weights for each language are selected using cross-validation on the development set.",
                    "sid": 51,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the case of English and German, we also found that stemming (Bird et al., 2009; Porter, 1980) was hepful in reducing data sparsity.",
                    "sid": 52,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "4 results",
            "number": "4",
            "sents": [
                {
                    "text": "We first compare the results for the two translation rule extraction models, phrase-based and hierarchical (\u201cMT-phrase\u201d and \u201cMT-hier\u201d respectively in Table 1).",
                    "sid": 53,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We find that the hierarchical model performs better in all languages apart from Greek, indicating that the long-range reorderings learned by a hierarchical translation system are useful for this task.",
                    "sid": 54,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These benefits are most pronounced in the case of Thai, likely due to the the language\u2019s comparatively different word order.",
                    "sid": 55,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also present results for both models without using the NP lists for training in Table 2.",
                    "sid": 56,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As expected, the performances are almost uniformly lower, but the parser still produces correct output for the majority of examples.",
                    "sid": 57,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As discussed above, one important modification of the MT paradigm which allows us to produce structured output is the addition of structurechecking to the beam search.",
                    "sid": 58,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is not evident, a priori, that this search procedure is guaranteed to find any well-formed outputs in reasonable time; to test the effect of this extra requirement on the speed of SP, we investigate how many MRs the decoder needs to generate before producing one which is well-formed.",
                    "sid": 59,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In practice, increasing search depth in the n-best list from 1 to 50 results in a gain of no more than a percentage point or two, and we conclude that our filtering method is appropriate for the task.",
                    "sid": 60,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also compare the MT-based semantic parsers to several recently published ones: WASP (Wong and Mooney, 2006), which like the hierarchical model described here learns a SCFG to translate between NL and MRL; tsVB (Jones et al., 2012), which uses variational Bayesian inference to learn weights for a tree transducer; UBL (Kwiatkowski et al., 2010), which learns a CCG lexicon with semantic annotations; and hybridtree (Lu et al., 2008), which learns a synchronous generative model over variable-free MRs and NL strings.",
                    "sid": 61,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the results shown in Table 1 we observe that on English GeoQuery data, the hierarchical translation model achieves scores competitive with the state of the art, and in every language one of the MT systems achieves accuracy at least as good as a purpose-built semantic parser.",
                    "sid": 62,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We conclude with an informal test of training speeds.",
                    "sid": 63,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While differences in implementation and factors like programming language choice make a direct comparison of times necessarily imprecise, we note that the MT system takes less than three minutes to train on the GeoQuery corpus, while the publicly-available implementations of tsVB and UBL require roughly twenty minutes and five hours respectively on a 2.1 GHz CPU.",
                    "sid": 64,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So in addition to competitive performance, the MTbased parser also appears to be considerably more efficient at training time than other parsers in the literature.",
                    "sid": 65,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "5 related work",
            "number": "5",
            "sents": [
                {
                    "text": "WASP, an early automatically-learned SP system, was strongly influenced by MT techniques.",
                    "sid": 66,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Like the present work, it uses GIZA++ alignments as a starting point for the rule extraction procedure, and algorithms reminiscent of those used in syntactic MT to extract rules. tsVB also uses a piece of standard MT machinery, specifically tree transducers, which have been profitably employed for syntax-based machine translation (Maletti, 2010).",
                    "sid": 67,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In that work, however, the usual MT parameter-estimation technique of simply counting the number of rule occurrences does not improve scores, and the authors instead resort to a variational inference procedure to acquire rule weights.",
                    "sid": 68,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The present work is also the first we are aware of which uses phrasebased rather than tree-based machine translation techniques to learn a semantic parser. hybrid-tree (Lu et al., 2008) similarly describes a generative model over derivations of MRL trees.",
                    "sid": 69,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining system discussed in this paper, UBL (Kwiatkowski et al., 2010), leverages the fact that the MRL does not simply encode trees, but rather A-calculus expressions.",
                    "sid": 70,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It employs resolution procedures specific to the A-calculus such as splitting and unification in order to generate rule templates.",
                    "sid": 71,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Like other systems described, it uses GIZA alignments for initialization.",
                    "sid": 72,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other work which generalizes from variable-free meaning representations to A-calculus expressions includes the natural language generation procedure described by Lu and Ng (2011).",
                    "sid": 73,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "UBL, like an MT system (and unlike most of the other systems discussed in this section), extracts rules at multiple levels of granularity by means of this splitting and unification procedure. hybridtree similarly benefits from the introduction of multi-level rules composed from smaller rules, a process similar to the one used for creating phrase tables in a phrase-based MT system.",
                    "sid": 74,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Peter F. Brown, Vincent J. Della Pietra, Stephen A. Della Pietra, and Robert L. Mercer.",
                    "sid": 75,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1993.",
                    "sid": 76,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The mathematics of statistical machine translation: parameter estimation.",
                    "sid": 77,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Computational Linguistics, 19(2):263\u2013311.",
                    "sid": 78,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "6 discussion",
            "number": "6",
            "sents": [
                {
                    "text": "Our results validate the hypothesis that it is possible to adapt an ordinary MT system into a working semantic parser.",
                    "sid": 79,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In spite of the comparative simplicity of the approach, it achieves scores comparable to (and sometimes better than) many state-of-the-art systems.",
                    "sid": 80,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this reason, we argue for the use of a machine translation baseline as a point of comparison for new methods.",
                    "sid": 81,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results also demonstrate the usefulness of two techniques which are crucial for successful MT, but which are not widely used in semantic parsing.",
                    "sid": 82,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first is the incorporation of a language model (or comparable long-distance structure-scoring model) to assign scores to predicted parses independent of the transformation model.",
                    "sid": 83,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second is the use of large, composed rules (rather than rules which trigger on only one lexical item, or on tree portions of limited depth (Lu et al., 2008)) in order to \u201cmemorize\u201d frequently-occurring largescale structures.",
                    "sid": 84,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "7 conclusions",
            "number": "7",
            "sents": [
                {
                    "text": "We have presented a semantic parser which uses techniques from machine translation to learn mappings from natural language to variable-free meaning representations.",
                    "sid": 85,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser performs comparably to several recent purpose-built semantic parsers on the GeoQuery dataset, while training considerably faster than state-of-the-art systems.",
                    "sid": 86,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experiments demonstrate the usefulness of several techniques which might be broadly applied to other semantic parsers, and provides an informative basis for future work.",
                    "sid": 87,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "8",
            "sents": [
                {
                    "text": "Jacob Andreas is supported by a Churchill Scholarship.",
                    "sid": 88,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Andreas Vlachos is funded by the European Community\u2019s Seventh Framework Programme (FP7/2007-2013) under grant agreement no.",
                    "sid": 89,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "270019 (SPACEBOOK project www. spacebook-project.eu).",
                    "sid": 90,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}