{
    "ID": "D12-1074",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Many NLP tasks make predictions that are inherently coupled to syntactic relations, but for many languages the resources required to provide such syntactic annotations are unavailable.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For others it is unclear exactly how much of the syntactic annotations can be effectively leveraged with current models, and what structures in the syntactic trees are most relevant to the current task.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose a novel method which avoids the need for any syntactically annotated data when predicting a related NLP task.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our method couples latent syntactic representations, constrained to form valid dependency graphs or constituency parses, with the prediction task via specialized factors in a Markov random field.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At both training and test time we marginalize over this hidden structure, learning the optimal latent representations for the problem.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results show that this approach provides significant gains over a syntactically uninformed baseline, outperforming models that observe syntax on an English relation extraction task, and performing comparably to them in semantic role labeling.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Many NLP tasks are inherently tied to syntax, and state-of-the-art solutions to these tasks often rely on syntactic annotations as either a source for useful features (Zhang et al., 2006, path features in relation extraction) or as a scaffolding upon which a more narrow, specialized classification can occur (as often done in semantic role labeling).",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This decou pling of the end task from its intermediate representation is sometimes known as the two-stage approach (Chang et al., 2010) and comes with several drawbacks.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most notably this decomposition prohibits the learning method from utilizing the labels from the end task when predicting the intermediate representation, a structure which must have some correlation to the end task to provide any benefit.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relying on intermediate representations that are specifically syntactic in nature introduces its own unique set of problems.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Large amounts of syntactically annotated data is difficult to obtain, costly to produce, and often tied to a particular domain that may vary greatly from that of the desired end task.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Additionally, current systems often utilize only a small amount of the annotation for any particular task.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, performing named entity recognition (NER) jointly with constituent parsing has been shown to improve performance on both tasks, but the only aspect of the syntax which is leveraged by the NER component is the location of noun phrases (Finkel and Manning, 2009).",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By instead discovering a latent representation jointly with the end task we address all of these concerns, alleviating the need for any syntactic annotations, while simultaneously attempting to learn a latent syntax relevant to both the particular domain and structure of the end task.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We phrase the joint model as factor graph and marginalize over the hidden structure of the intermediate representation at both training and test time, to optimize performance on the end task.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Inference is done via loopy belief propagation, making this framework trivially extensible to most graph structures.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Computation over latent syntactic rep 810 Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 810\u2013820, Jeju Island, Korea, 12\u201314 July 2012.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2012 Association for Computational Linguistics resentations is made tractable with the use of special combinatorial factors which implement unlabeled variants of common dynamic-programming parsing algorithms, constraining the hidden representation to realize valid dependency graphs or constituency trees.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We apply this strategy to two common NLP tasks, coupling a model for the end task prediction with latent and general syntactic representations via specialized logical factors which learn associations between latent and observed structure.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In comparisons with identical models which observe \u201cgold\u201d syntactic annotations, derived from off-the-shelf parsers or provided with the corpora, we find that our hidden marginalization method is comparable in both tasks and almost every language tested, sometimes significantly outperforming models which observe the true syntax.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following sections serves as a preliminary, introducing an inventory of factors and variables for constructing factor graph representations of syntactically-coupled NLP tasks.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 3 explores the benefits of this method on relation extraction (RE), where we compare the use dependency and constituency structure as latent representations.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then turn to a more established semantic role label ing (SRL) task (\u00a74) where we evaluate across a wide range of languages.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "latent pseudo-syntactic structure. ",
            "number": "2",
            "sents": [
                {
                    "text": "The models presented in this paper are phrased in terms of variables in an undirected graphical model, Markov random field.",
                    "sid": 24,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, we implement the model as a factor graph, a bipartite graph composed of factors and variables in which we can efficiently compute the marginal beliefs of any variable set with the sum-product algorithm for cyclic graphs, loopy belief propagation,.",
                    "sid": 25,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now introduce the basic variable and factor components used throughout the paper.",
                    "sid": 26,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1 Latent Dependency Structure.",
                    "sid": 27,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency grammar is a lexically-oriented syntactic formalism in which syntactic relationships are expressed as dependencies between individual words.",
                    "sid": 28,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each non-root word specifies another as its head, provided that the resulting structure forms a valid directed graph, ie.",
                    "sid": 29,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "there are no cycles in the graph.",
                    "sid": 30,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to the flexibility of this representation it is often used to describe free-word-order languages, and increasingly preferred in NLP for more language-in-use scenarios.",
                    "sid": 31,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A dependency graph can be modeled with the following nodes, as first proposed by Smith and Eisner (2008): \u2022 Let {Link(i, j) : 0 \u2264 i \u2264 j \u2264 n, n 1= j} be O(n2) boolean variables corresponding to the possible links in a dependency parse.",
                    "sid": 32,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Li,j = true implies that there is a dependency from parent i to child j. \u2022 Let {LI N K (i, j) : 0 \u2264 i \u2264 j \u2264 n, n 1= j} be O(n2) unary factors, each paired with a corresponding Link(i, j) variable and expressing the independent belief that Link(i, j) = true.",
                    "sid": 33,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2 Latent Constituency Structure.",
                    "sid": 34,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alternatively we can describe the more structured constituency formalism by setting up a representation over span variables: \u2022 Let {Span(i, j) : 0 \u2264 i < j \u2264 n} be O(n2) boolean variables such that Span(i, j) = true iff there is a bracket spanning i to j 1.",
                    "sid": 35,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {SPAN(i, j) : 0 \u2264 i < j \u2264 n} be O(n2) unary factors, each attached to the corresponding Span(i, j) variable.",
                    "sid": 36,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These factors score the independent suitability of each span to appear in an unlabeled constituency tree.",
                    "sid": 37,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All boolean variables presented in this paper will be paired to unary factors in this manner, which we will omit in future descriptions.",
                    "sid": 38,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This encompasses the necessary representational structure for both syntactic formalisms, but nothing introduced up to this point guarantees that either of these representations will form a valid tree or DAG.",
                    "sid": 39,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.3 Combinatorial Factors.",
                    "sid": 40,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Naively constraining these latent representations through the introduction of many interconnected ternary factors is possible, but would likely be computationally intractable.",
                    "sid": 41,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, as observed in 1 In practice, we do not need to include variables for spans of width 1 or n, since they will always be true.",
                    "sid": 42,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Smith and Eisner (2008), we can encapsulating common dynamic programming algorithms within special-purpose factors to efficiently globally constrain variable configurations . Since the outgoing messages from such factors to a variable can be computed from the factor\u2019s posterior beliefs about that variable, there is no difficulty in exchanging beliefs between these special-purpose factors and the rest of the graph, and inference can proceed using the standard sum-product or max-product belief propagation.",
                    "sid": 43,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here we present two combinatorial factors that provide efficient ways of constraining the model to fit common syntactic frameworks.",
                    "sid": 44,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let CKYTREE be a global combinatorial factor, as used in previous work in efficient parsing (Naradowsky and Smith, 2012), attached to all the Span(i, j) variables.",
                    "sid": 45,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This factor con tributes a factor of 1 to the model\u2019s score iff the span variables collectively form a legal, binary bracketing and a factor of 0 otherwise.",
                    "sid": 46,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It enforces, therefore, a hard constraint on the variables, computing beliefs via an unlabeled variant of the inside-outside algorithm.",
                    "sid": 47,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let DEP-TREE be a global combinatorial factor, as presented in Smith and Eisner (2008), which attaches to all Link(i, j) variables and similarly contributes a factor of 1 iff the config uration of Link variables forms a valid projective dependency graph.",
                    "sid": 48,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A graph is projective if its edges do not cross.",
                    "sid": 49,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.4 Marginal MAP Inference.",
                    "sid": 50,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is straightforward to train these latent variable models to maximize the marginal probability of their outputs, conditioning on their inputs, and marginal- izing out the latent syntactic variables.",
                    "sid": 51,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To compute feature expectations, we can use marginal inference techniques such as sampling and sum-product belief propagation to compute marginal probabilities.",
                    "sid": 52,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A knottier problem arises when we want to find the best assignment to the variables of interest while marginalizing out \u201cnuisance\u201d latent variables.",
                    "sid": 53,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is the problem of marginal MAP inference\u2014 sometimes known as consensus decoding\u2014which has been shown to be NP-hard and without a polynomial time approximation scheme (Sima\u2019an, 1996; Casacuberta and Higuera, 2000).",
                    "sid": 54,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the NLP community, these inference problems often arise when dealing with spurious ambiguity where multiple derivations can lead to the same derived structure.",
                    "sid": 55,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In tree substitution grammars, for instance, there may be many ways of combining elementary trees to produce the same output tree; in machine translation, many different elementary phrases or elementary tree pairs might produce the same output string.",
                    "sid": 56,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For syntactic parsing, Goodman (1996) proposed a variational method for summing out spurious ambiguity that was equivalent to minimum Bayes risk decoding (Goel and Byrne, 2000; Kumar and Byrne, 2004) with a constituent-recall loss function.",
                    "sid": 57,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For MT, May and Knight (2006) proposed methods for determinizing tree automata to reduce ambiguity, and Li et al.",
                    "sid": 58,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2009) proposed a variational method based on n-gram loss functions.",
                    "sid": 59,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More recently, Liu and Ihler (2011) analyzed message-passing algorithms for marginal MAP.",
                    "sid": 60,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we adopt a simple minimum Bayes risk decoding scheme.",
                    "sid": 61,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we perform sum- product belief propagation on the full factor graph.",
                    "sid": 62,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, we maximize the expected accuracy of the variables of interest, subject to any hard constraints on them (such as mutual exclusion among labels).",
                    "sid": 63,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In some cases with complex combinatorial constraints, this simple MBR scheme has proved more effective than exact decoding over all variables (Auli and Lopez, 2011).",
                    "sid": 64,
                    "ssid": 41,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "relation extraction. ",
            "number": "3",
            "sents": [
                {
                    "text": "Performing a syntax-based NLP task in most real- world scenarios requires that the incoming data first be parsed using a pre-trained parsing model.",
                    "sid": 65,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For some tasks, like relation extraction, many data sets lack syntactic annotation and these circumstances persist even into the training phase.",
                    "sid": 66,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section we explore such scenarios and contrast the use of parser-provided syntactic annotation to marginal- izing over latent representations of constituency or dependency syntax.",
                    "sid": 67,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show the hidden syntactic models are not just competitive with these \u201coracle\u201d models, but in some configurations can actually outperform them.",
                    "sid": 68,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relation extraction is the task of identifying semantic relations between sets of entities in text (as illustrated in Fig.",
                    "sid": 69,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1b), and a good proving ground for latent syntactic methods for two reasons.",
                    "sid": 70,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, because entities share a semantic relationship, under most linguistic analyses these entities will also share some syntactic relation.",
                    "sid": 71,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Indeed, syntactic features have long been an extremely useful source of information for relation extraction systems (Culotta and Sorensen, 2004; Mintz et al., 2009).",
                    "sid": 72,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, relation extraction has been a common task for pioneering efforts in processing data mined from the internet, and otherwise noisy or out-of-domain data.",
                    "sid": 73,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, large noisily-annotated data sets have been generated by leveraging freely available knowledge bases such as Freebase (Bollacker et al., 2008; Mintz et al., 2009).",
                    "sid": 74,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such data sets have been utilized successfully for relation extraction from the web (Bunescu and Mooney, 2007).",
                    "sid": 75,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Model.",
                    "sid": 76,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present a simple model for representing relational structure, with the only variables present being a set of boolean-valued variables representing an undirected dependency between two entities, and an additional set of boolean label variables representing the type label of the relation.",
                    "sid": 77,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {Rel(i, j : 0 \u2264 i < j \u2264 n} be O(n2) boolean variables such that Rel(i, j) = true iff there is a relation spanning i to j. \u2022 Let {Rel-Label(i, j, \u03bb) : \u03bb \u2208 L, and 0 \u2264 i < j \u2264 n} be O(|L|n2) boolean variables suchthat Rel-Label(i, j, \u03bb) = true iff there is a re lation spanning i to j with relation type \u03bb.",
                    "sid": 78,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {ATMOST1(i, j) : 0 \u2264 i < j \u2264 n} be O(n2) factors, each coordinating the set L of possible nonterminal variables to the Rel vari able at each i, j tuple, allowing a Rel-Label variable to be true iff all other label variables are false and Rel(i, j) = true.",
                    "sid": 79,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here the Rel(i, j) and Rel-Label(i, j) variables simply express the representation of the problem, while the ATMOST1 factors are logical constraints ensuring that only one label will apply to a particular relation.",
                    "sid": 80,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Coordination Factors.",
                    "sid": 81,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An important contribution of this work is the introduction of a flexible, general framework for connecting the latent and observable partitions of the model.",
                    "sid": 82,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We accomplish this through the use of two additional factors, each expressing the same basic logic, which learn when to coordinate and when to ignore correlations between the latent syntax and the end task.",
                    "sid": 83,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While here we specify binary and ternary versions of these factors, they also generalize to higher dimensions.",
                    "sid": 84,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {D-CONNECT(i, j, k) : 0 \u2264 i < j \u2264 n; 0 \u2264 k \u2264 n} be O(n3) factors coordinating any number of dependency syntax Link(i, j) variables with representational variables on the end task, multiplying in 1 to the model score unless all variables are on, in which case it multiplies a connective potential \u03c6 derived from its features.",
                    "sid": 85,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus it functions logically as a soft NAND factor.",
                    "sid": 86,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this ternary formulation k represents a hidden dependency head or pivot which is shared between two syntactic dependencies anchored at the indices of the entities in the relation (as illustrated in Fig.",
                    "sid": 87,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1).",
                    "sid": 88,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {C-CONNECT(i, j) : 0 \u2264 i < j \u2264 n} be O(n2) factors coordinating syntacticSpan(i, j) and relation arc Rel(i, j), identi cally to D-CONNECT but with a 1-to-1 mapping.",
                    "sid": 89,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intuitively the joint model might learn \u03c6 > 1, i.e., constituency spans and task prediction relations are more likely to be coterminous.",
                    "sid": 90,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The difficulty in working with latent dependency syntax is that we posit that the RE variables do not share a 1-to-1 mapping with variables in the hidden representation.",
                    "sid": 91,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expect instead, according to linguistic intuition, that a relation between entities at position i and j in the sentence should have corresponding syntactic dependencies but that they are likely to realize this by sharing the same head word (as depicted in Fig.1), a word whose identity should help label the relation.",
                    "sid": 92,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore we introduce a special coordination factor, D-CONNECT as a ternary factor to capture the relationship between pairs of latent syntactic variables and a single relation variable, pivoting on the same unknown head word.",
                    "sid": 93,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1: Latent Dependency coupling for the RE task.",
                    "sid": 94,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The D-CONNECT factor expresses ternary connection relations because the shared head word of the proposed relation is unknown.",
                    "sid": 95,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As is convention, variables are represented by circles, factors by rectangles.",
                    "sid": 96,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We introduce six model scenarios.",
                    "sid": 97,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Baseline, simply the arc-factored model consisting only of Rel and corresponding Label variables for each entity.",
                    "sid": 98,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Features on the relation factors, which are common to all model configurations, are combinations of lexical information (i.e., the words that form the entity, the pos-tags of the entities, etc.) as well as the distance between the relation.",
                    "sid": 99,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is a lightweight model and generally does not attempt to exhaustively leverage all possible proven sources of useful features (Zhou et al., 2005) towards a higher absolute score, but rather to serve as a point of comparison to the models which rely on syntactic information.",
                    "sid": 100,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Baseline-Ent, a variant of Baseline with additional features which include combinations of \u2022 Oracle D-Parse, in which we also instantiate a full set of latent dependency syntax variables, and connect them to the baseline model using D-CONNECT factors.",
                    "sid": 101,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Syntax variables are clamped to their true values.",
                    "sid": 102,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Oracle C-Parse, the constituency syntax analogue of Oracle D-Parse.",
                    "sid": 103,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Hidden D-Parse, which is an extension of Oracle D-Parse in which we connect all syntax variables to a DEP-TREE factor, syntax variables are unobserved, and are learned jointly with the end task.",
                    "sid": 104,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The features for latent syntax are a subset of those used in dependency parsing (McDonald et al., 2005).",
                    "sid": 105,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Hidden C-Parse, the constituency syntax analogue of Hidden D-Parse.",
                    "sid": 106,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The feature set is similar but bigrams are taken over the words defining the constituent span, rather than the words defining the head/modifier relation.",
                    "sid": 107,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Coordination factor features for the syntactically- informed models are particularly important.",
                    "sid": 108,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This became evident in initial experiments where the baseline was often able to outperform the hidden syntactic model.",
                    "sid": 109,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, inclusion of entity and mention label features into the connection factors provides the model with greater reasoning over when to coordinate or ignore the relation predictions with the underlying syntax.",
                    "sid": 110,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are a proper subset of the Baseline-Ent features.",
                    "sid": 111,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Data.",
                    "sid": 112,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate these models using the 2005 Automatic Content Extraction (ACE) data set (Walker, 2006), using the English (dual-annotated) and Chinese (solely annotator #1 data set) sections.",
                    "sid": 113,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each corpus is annotated with entity mentions\u2014tagged as PER, ORG, LOC, or MISC\u2014and, where applicable, what type of relation exists between them (e.g., coarse: PHYS; fine: Located).",
                    "sid": 114,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But like most corpora available for the task, the burden of acquiring corresponding syntactic annotation is left to the researcher.",
                    "sid": 115,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this situation it is common to turn to existing pre-trained parsing models.",
                    "sid": 116,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We generate our data by first splitting the raw A C E R e s u l t s M od el E n g l i s h Unlabeled Labeled C h i n e s e Unlabeled Labeled P R F 1 P R F 1 P R F 1 P R F 1 Ba se lin e Ba se line En t 85 .4 87 .2 57 .0 65 .4 68 .4 74 .8 83 .0 85 .8 55 .3 64 .4 66 .4 73 .6 42 .9 55 .2 26 .8 31 .1 33 .0 39 .8 42 .6 51 .2 21 .3 29 .4 28 .4 37 .4 Or acl e D Pa rse Hi dd en D Pa rse 89 .3 87 .8 67 .4 69 .8 76 .8 77 .7 89 .3 85 .3 66 .2 67 .8 75 .4 75 .6 60 .0 48 .0 32 .6 32 .0 42 .2 38 .4 58 .1 47 .2 31 .3 30 .0 40 .7 36 .7 Or acl e C Pa rse Hi dd en C Pa rse 89 .1 90 .5 68 .7 69 .9 77 .6 78 .9 87 .5 88 .8 67 .5 68 .6 76 .2 77 .4 66 .8 56 .3 37 .8 32 .3 48 .3 41 .0 63 .8 53 .4 37 .0 31 .6 46 .8 39 .7 Table 1: Relation Extraction Results.",
                    "sid": 117,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Models using hidden constituency syntax provide significant gains over the syntactically-uniformed baseline model in both languages, but the advantages of the latent syntax were mitigated on the smaller Chinese data set.",
                    "sid": 118,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "are also tokenized according to Penn Chinese Tree- bank standards (Xue et al., 2005).",
                    "sid": 119,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The sentences are then tagged and parsed using the Stanford CoreNLP tools, using the standard pre-trained models for tagging (Toutanvoa and Manning, 2000), and the factored parsing model of Klein and Manning (2002).",
                    "sid": 120,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The distributed grammar is trained on a variety of sources, including the standard Wallstreet Journal corpus, but also biomedical, translation, and questions.",
                    "sid": 121,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then apply entity and relation annotations noisily to the data, collapsing multi-word entities into one term.",
                    "sid": 122,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We filter out sentences with fewer than two entities (and are thus incapable of containing relations) and sentences with more than 40 words (to keep the parses more reliable).",
                    "sid": 123,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This yields 6966 sentences for English data, but unfortunately only 747 sentences for the Chinese.",
                    "sid": 124,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nine of every ten sentences comprise the training set, with every tenth sentence reserved for test.",
                    "sid": 125,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4 Results.",
                    "sid": 126,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We train all models using 20 iterations of stochastic gradient descent, each with a maximum of 10 BP iterations (though in practice we find convergence to often occur much earlier).",
                    "sid": 127,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results are presented in Table 1, showing precision, recall, and F-measure for both labeled and unlabeled prediction.",
                    "sid": 128,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For English, not only is the hidden marginalization method a suitable replacement for the syntactic trees provided by pre-trained, state-of-the-art models, but in both configurations we find that inducing an optimal hidden structure is preferable to the parser-produced annotations.",
                    "sid": 129,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On Chinese, where the data set is atyp over the baseline in the constituency-based model though it is not able to match the observed syntax model.",
                    "sid": 130,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Despite the intuition that both entities occupy roles as modifiers of the same verb, we find that the Hidden D-Parse model often fails to recover the correct latent structure, and that even when successful dependency parses are observed, the head word is often not uniquely indicative of the relation type (as known is not strongly correlated with the relation type EMPLOYS in the phrase: Shigeru Miyamoto, best known for his work at the video game company Nintendo).",
                    "sid": 131,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence when it comes to relation extraction, at least on our relatively small data sets, we find the simplest approach to latent syntactic structure is the best.",
                    "sid": 132,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now turn to the task of semantic role labeling to evaluate this method on a more established hand-annotated data set, and a more varied set of languages.",
                    "sid": 133,
                    "ssid": 69,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "semantic role labeling. ",
            "number": "4",
            "sents": [
                {
                    "text": "The task of semantic role labeling (SRL) aims to detect and label the semantic relationships between particular words, most commonly verbs (referred to in the domain as predicates), and their arguments (MezaRuiz and Riedel, 2009).",
                    "sid": 134,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a manner similar to RE, there is a strong correlation between the presence of an SRL relation and there existing an underlying syntactic dependency, though this is not always expressed as directly as a 1-to-1 correspondence.",
                    "sid": 135,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This has historically motivated a reliance on syntactic annotation, and some a.)",
                    "sid": 136,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Syntactic Combinatorial Constraint DEP-Tree b.)",
                    "sid": 137,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Syntactic Layer Link 5, 1 Link 5, 2 Link 5, 3 . . .",
                    "sid": 138,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Link 5, n D-Connect 5, 1 D-Connect 5, 2 D-Connect 5, 3 D C o n n e c t 5 , n c.)",
                    "sid": 139,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Argument Prediction Arg 5, 1 Arg 5, 2 At Most 1 Arg 5, 3 d.)",
                    "sid": 140,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sense Prediction At Most 1 Pred sense.",
                    "sid": 141,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "01 sense.",
                    "sid": 142,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "02 . . .",
                    "sid": 143,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "role A0 role A1 role A2 . . .",
                    "sid": 144,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "role A-TM 5 sense.",
                    "sid": 145,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "| S | Figure 2: A tiered graphic representing the three different SRL model configurations.",
                    "sid": 146,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The baseline system is described in the bottom (c & d), the separate panels highlighting the independent predictions of this model: sense labels are assigned in an entirely separate process from argument prediction.",
                    "sid": 147,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pruning in the model takes place primarily in this tier, since we observe true predicates we only instantiate over these indices.",
                    "sid": 148,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The middle tier (b.) illustrates the syntactic representation layer, and the connective factors between syntax and SRL.",
                    "sid": 149,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the observed syntax model the Link variables are clamped to their correct values, with no need for a factor to coordinate them to form a valid tree.",
                    "sid": 150,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the hidden model comprises all layers, including a combinatorial syntactic constraint (a.) over syntactic variables.",
                    "sid": 151,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this scenario all labels in (b.) are hidden at both training and test time.",
                    "sid": 152,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "feature-rich classifiers to the parsed trees.",
                    "sid": 153,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Related work has recognized the large annotation burden the task demands, but aimed to keep the syntactic annotations and induce semantic roles (Lang and Lapata, 2010).",
                    "sid": 154,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section we will take the opposite approach, disregarding the syntactic annotations which we argue are more costly to acquire, as they require more formal linguistic training to produce.",
                    "sid": 155,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Model.",
                    "sid": 156,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present a simple, flexible model for SRL in which sense predictions are made independently of the rest of the model, and argument predictions are made independently of each other.",
                    "sid": 157,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model structure is composed as depicted in Fig.",
                    "sid": 158,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 159,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {Arg(i, j) : 0 \u2264 i < j \u2264 n} be O(n2) iff predicate i takes token j as an argument.",
                    "sid": 160,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {Role(i, j, \u03bb) : \u03bb \u2208 L, and 0 \u2264 i < j \u2264 n} be O(|L|n2) boolean variables such that Role(i, j, \u03bb) = true iff Arg(i, j) is true and takes the role label \u03bb.",
                    "sid": 161,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Let {Sense(i, \u03c3) : \u03c3 \u2208 S, and 0 \u2264 i \u2264 n} be O(|S|n) boolean variables such that Sense(i, \u03c3) = true iff predicate i has sense \u03c3.",
                    "sid": 162,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1.1 Features At the coarsest level both the SRL and RE models are specifying binary predictions between a pair of indices in the sentence, and a set of labels for each dependency that happens to be true.",
                    "sid": 163,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly we Figure 3: Examining the learned hidden representation for SRL.",
                    "sid": 164,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example the syntactic dependency arcs derived from gold standard syntactic annotations (left) are entirely disjoint from the correct predicate/arguments pairs (shown in the heatmaps by the squares outlined in black), and the observed syntax model fails to recover any of the correct predictions.",
                    "sid": 165,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, the hidden model structure (right) learns a representation that closely parallels the desired end task predictions, helping it recover three of the four correct SRL predictions (shaded arcs: red corresponds to a correct prediction, with true labels GA, KARA, etc.), and providing some evidence towards the fourth.",
                    "sid": 166,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dependency tree corresponding to the hidden structure is derived by edge-factored decoding: dependency variables whose beliefs > 0.5 are classified as true (though some arcs not relevant to the SRL predictions are omitted for clarity).",
                    "sid": 167,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "RE, with the sole exception that we incorporate the observable lemma and morphological features into bigrams on predicate/argument pairs.",
                    "sid": 168,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For sense prediction we rely only on unigram features taken in a close (w = 2) window of the target predicate.",
                    "sid": 169,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the coordinating factors we use subsets of combinations of word, part-of-speech, and capitalization features taken between head and argument, and concatenate these with the distance and direction between the predicate and argument.",
                    "sid": 170,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We do not find the performance of the system to be as sensitive to which features are present in the coordinating factors as we did in the RE task.",
                    "sid": 171,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Data.",
                    "sid": 172,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate our SRL model using the data set developed for the CoNLL 2009 shared task competition (Hajic\u02c7 et al., 2009), which features seven languages and provides an ideal opportunity to measure the ability of the hidden structure to generalize across languages of disparate origin and varied characteristics.",
                    "sid": 173,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also provides the opportunity to observe a variety of different annotation styles and biases, some of which our model was able to uncover as ill- suited to common models for the task.",
                    "sid": 174,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The data itself provides word, lemma, part-of-speech, and morphological feature information, along with gold dependency parses.",
                    "sid": 175,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Words which denote predicates are identified, and their (train time) arguments are provided.",
                    "sid": 176,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are also annotated with a sense label for each predicate, which is scored as an additional SRL dependency.",
                    "sid": 177,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus the task involves predicting for each predicate a set of argument dependencies and the sense label associated with that predicate.",
                    "sid": 178,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "D a t a M o d e l Unla bele d L a b e l e d CoNL L 2009 F1 P R F 1 P R F 1 M A X. M EA N M ED . C at al a n B a s e l i n e O r a cl e S y n . H id d e n S y n . 92 .2 0 98 .4 8 95 .2 1 62 .4 3 96 .1 7 92 .8 4 74 .4 8 97 .3 1 94 .0 1 73 .8 0 70 .4 2 68 .8 6 58 .7 6 68 .7 8 67 .1 5 65 .4 3 69 .5 9 67 .9 9 8 0 . 3 7 1 . 0 7 4.",
                    "sid": 179,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 C hi n es e B a s e l i n e O r a cl e S y n . H id d e n S y n . 72 .4 8 98 .5 7 90 .7 9 64 .8 2 78 .9 8 79 .0 9 68 .4 4 87 .6 9 84 .5 3 65 .9 7 87 .6 4 81 .9 7 59 .0 0 70 .2 2 71 .4 0 62 .2 9 77 .9 7 76 .3 2 7 8 . 6 7 2 . 2 7 0.",
                    "sid": 180,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 C z e c h B a s e l i n e O r a cl e S y n . H id d e n S y n . 97 .7 3 98 .6 2 92 .3 9 56 .5 0 81 .2 5 89 .3 5 71 .6 1 89 .0 9 90 .8 5 84 .8 0 92 .9 4 74 .4 1 48 .8 0 68 .2 5 71 .9 6 61 .8 4 74 .8 4 73 .1 6 8 5 . 4 7 2 . 4 7 1.",
                    "sid": 181,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 E n gli s h B a s e l i n e O r a cl e S y n . H id d e n S y n . 92 .4 6 96 .7 5 95 .0 6 71 .5 6 82 .2 5 79 .0 6 80 .6 8 88 .9 1 86 .3 2 84 .5 6 85 .4 8 83 .8 2 65 .4 5 72 .6 7 69 .7 2 73 .7 8 78 .5 5 76 .1 2 8 5 . 6 7 5 . 6 7 2.",
                    "sid": 182,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 G er m a n B a s e l i n e O r a cl e S y n . H id d e n S y n . 93 .4 9 95 .1 8 91 .9 2 44 .2 4 79 .1 1 86 .2 6 60 .0 6 86 .4 1 89 .0 0 75 .0 0 73 .2 4 69 .4 7 35 .4 9 60 .8 7 65 .1 9 48 .1 8 66 .4 9 67 .2 6 7 9 . 7 6 8 . 1 6 7.",
                    "sid": 183,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 Ja pa ne se B a s e l i n e O r a cl e S y n . H id d e n S y n . 91 .6 4 93 .8 4 90 .8 8 43 .3 6 48 .1 5 73 .4 7 58 .8 7 63 .6 4 81 .2 5 80 .4 1 90 .0 6 73 .4 2 38 .0 5 46 .2 1 59 .3 6 51 .6 6 61 .0 8 65 .6 5 7 8 . 2 6 2 . 7 7 2.",
                    "sid": 184,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 S p a ni sh B a s e l i n e O r a cl e S y n . H id d e n S y n . 82 .9 0 98 .9 6 96 .1 5 39 .4 7 94 .1 9 90 .5 3 53 .4 8 96 .5 2 93 .2 5 67 .6 4 70 .6 8 68 .8 1 32 .2 1 67 .2 7 64 .7 9 43 .6 4 68 .9 3 66 .7 4 8 0 . 5 7 0 . 4 7 3.",
                    "sid": 185,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Table 2: SRL Results.",
                    "sid": 186,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The hidden model excels on the unlabeled prediction results, often besting the scores obtained using the parses distributed with the CoNLL data sets.",
                    "sid": 187,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These gains did not always translate to the labeled task where poor sense prediction hindered absolute performance.",
                    "sid": 188,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.3 Results.",
                    "sid": 189,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate across a set of model configurations analogous to before.",
                    "sid": 190,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All experiments used 30 iterations of SGD with a Gaussian prior, and a max 10 iterations of BP to compute the marginals for each example.",
                    "sid": 191,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In comparison to the CoNLL competition entries (Table 2, rightmost columns) our syntactically- informed models generally fall in the middle of the rankings.",
                    "sid": 192,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is not surprising given the independent predictions of the model and the very general, language universal assumptions we have made in the model structure and feature sets.",
                    "sid": 193,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in terms of gauging the usefulness of the hidden syntactic marginalization method the results are extremely compelling, with only marginal differences between the performance of the observed-syntax model, especially relative to the baseline.",
                    "sid": 194,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And despite the simplicity of the model, we still manage to perform at state-of-the-art levels in a few instances, sometimes outperforming most of the competition entries without observing any syntax.",
                    "sid": 195,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance on Chinese is an example of this, with our system outperforming all but the best system, and the hidden syntactic model only slightly behind.",
                    "sid": 196,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Abstracting away from the performance comparisons against other systems, the unlabeled results are the more revealing evidence for the use of hidden syntactic structure.",
                    "sid": 197,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here the average hidden model score (88.89) almost outperforms the observed syntax model (90.22, and vs. 66.80 baseline), mostly due to the large margins on the unlabeled Japanese scores.",
                    "sid": 198,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The strong independence between sense prediction and argument prediction hinders performance on the labeled task, but on all languages we find an extremely significant improvement exploiting hidden syntactic structure in comparison to the baseline system\u2014the hidden model recovers more than 92% of the gap between the baseline and the observed syntax model.",
                    "sid": 199,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also interesting to note that in the shared task competition the two languages which systems lost the most performance between their parsing F1 and their SRL F1 were Japanese and German.",
                    "sid": 200,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As illustrated in Fig.",
                    "sid": 201,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3, the corre spondence between syntax and SRL are extremely, and systematically, poor.",
                    "sid": 202,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example our hidden structure model was able to assign strong beliefs to the latent syntactic variables which correspond to the correct predicate/argument pairs, allowing it to correctly identify three of the four SRL arguments when the joint model failed to recover one.",
                    "sid": 203,
                    "ssid": 70,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "5",
            "sents": [
                {
                    "text": "This work is perhaps mostly closely related to the Learning over Constrained Latent Representations (LCLR) framework of Chang et al.",
                    "sid": 204,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2010).",
                    "sid": 205,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their abstract problem formulation is identical: both paradigms seek to couple the end task to an intermediate representation which is not accessible to the learning algorithm.",
                    "sid": 206,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However much of the intent, scale, and methodology is different.",
                    "sid": 207,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LCLR aims to provide a flexible latent structure for increasing the representational power of the model in a useful way, and is demonstrated on tasks and domains where data availability is not a key concern.",
                    "sid": 208,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, while our hidden structure models may outperform their observed syntax counterparts, our focus is as much on alleviating the burden of procuring large amounts of syntactic annotation as it is about increasing the expressiveness of the model.",
                    "sid": 209,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To that end we constrain a more sophisticated latent representation and couple it to highly structured output predictions, opposed to binary classification problems.",
                    "sid": 210,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In methodology, we perform the more computationally intensive marginalization operation instead of maximizing.",
                    "sid": 211,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Marginalization of hidden structure is also fundamental to other work, and featured most prominently in generative Bayesian latent variable models (Teh et al., 2006).",
                    "sid": 212,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach is trained discriminatively, affording the use of very rich feature sets and the prediction of partial structures without needing to specify a full derivation.",
                    "sid": 213,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similar approaches have been used in more linear latent variable CRF-based models (McCallum et al., 2005), but these must only marginalize only over hidden states of a much more compact representation.",
                    "sid": 214,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Naively extending this to tree-based constraints would often be computationally inefficient, and we avoid intractability through the encapsulation of much of the dynamic programming machinery into specialized factors.",
                    "sid": 215,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, using loopy belief propagation means that the inference method is not closely coupled to the task structure, and need not change when applying this method to other types of graphs.",
                    "sid": 216,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "6",
            "sents": [
                {
                    "text": "We have presented a novel method of coupling syntactically-oriented NLP tasks to combinatorially- constrained hidden syntactic representations, and have shown that marginalizing over this latent representation not only provides significant improvements over syntactically-uninformed baselines, but occasionally improves performance when compared to systems which observe syntax.",
                    "sid": 217,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the task of relation extraction we find that a constituency representation provides the most improvement over the baseline, while in the SRL domain our model is extremely competitive with the best reported results on Chinese, and outperforms the model using the provided parses on German and Japanese.",
                    "sid": 218,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We believe this method delivers very promising results in our presented tasks, opening the door to new lines of research examining what types of constraints and what configurations of hidden structure are most beneficial for particular tasks and languages.",
                    "sid": 219,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, we present one type of coordinating factor, as both D-CONNECT and C-CONNECT logically express a soft NAND function, but more sophisticated coupling schemes are another natural direction to pursue.",
                    "sid": 220,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we use sum-product variant of belief propagation inference, but more specialized inference schemes may show additional benefits.",
                    "sid": 221,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgements",
            "number": "",
            "sents": [
                {
                    "text": "We would like to thank Andrea Gesmundo for help in procuring sections of the CoNLL 2009 shared task data.",
                    "sid": 222,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This work was supported in part by the Center for Intelligent Information Retrieval and in part by Army prime contract number W911NF07-10216 and University of Pennsylvania subaward number 103548106.",
                    "sid": 223,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The University of Massachusetts also gratefully acknowledges the support of Defense Advanced Research Projects Agency (DARPA) Machine Reading Program under Air Force Research Laboratory (AFRL) prime contract no.",
                    "sid": 224,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FA875009-C-0181.",
                    "sid": 225,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any opinions, findings, and conclusion or recommendations expressed in this material are those of the authors and do not necessarily reflect the view of the DARPA, AFRL, or the US government.",
                    "sid": 226,
                    "ssid": 10,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}