{
    "ID": "J05-1004",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "The Proposition Bank project takes a practical approach to semantic representation, adding a layer of predicate-argument information, or semantic role labels, to the syntactic structures of the Penn Treebank.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting resource can be thought of as shallow, in that it does not represent coreference, quantification, and many other higher-order phenomena, but also broad, in that it covers every instance of every verb in the corpus and allows representative statistics to be calculated.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We discuss the criteria used to define the sets of semantic roles used in the annotation process and to analyze the frequency of syntactic/semantic alternations in the corpus.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We describe an automatic system for semantic role tagging trained on the corpus and discuss the effect on its performance of various types of information, including a comparison of full syntactic parsing with a f lat representation and the contribution of the empty \u2018\u2018trace\u2019\u2019 categories of the treebank.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Robust syntactic parsers, made possible by new statistical techniques (Ratnaparkhi 1997; Collins 1999, 2000; Bangalore and Joshi 1999; Charniak 2000) and by the availability of large, hand-annotated training corpora (Marcus, Santorini, and Marcinkiewicz 1993; Abeille\u00b4 2003), have had a major impact on the field of natural language processing in recent years.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the syntactic analyses produced by these parsers are a long way from representing the full meaning of the sentences that are parsed.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a simple example, in the sentences (1) John broke the window.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2) The window broke.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "a syntactic analysis will represent the window as the verb\u2019s direct object in the first sentence and its subject in the second but does not indicate that it plays the same underlying semantic role in both cases.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that both sentences are in the active voice * Department of Computer and Information Science, University of Pennsylvania, 3330 Walnut Street, Philadelphia, PA 19104.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Email: mpalmer@cis.upenn.edu.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Department of Computer Science, University of Rochester, PO Box 270226, Rochester, NY 14627.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Email:.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "gildea@cs.rochester.edu.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Submission received: 9th December 2003; Accepted for publication: 11th July 2004 * 2005 Association for Computational Linguistics and that this alternation in subject between transitive and intransitive uses of the verb does not always occur; for example, in the sentences (3) The sergeant played taps.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(4) The sergeant played.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the subject has the same semantic role in both uses.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The same verb can also undergo syntactic alternation, as in (5) Taps played quietly in the background.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "and even in transitive uses, the role of the verb\u2019s direct object can differ: (6) The sergeant played taps.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(7) The sergeant played a beat-up old bugle.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alternation in the syntactic realization of semantic arguments is widespread, affecting most English verbs in some way, and the patterns exhibited by specific verbs vary widely (Levin 1993).",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntactic annotation of the Penn Treebank makes it possible to identify the subjects and objects of verbs in sentences such as the above examples.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the treebank provides semantic function tags such as temporal and locative for certain constituents (generally syntactic adjuncts), it does not distinguish the different roles played by a verb\u2019s grammatical subject or object in the above examples.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because the same verb used with the same syntactic subcategorization can assign different semantic roles, roles cannot be deterministically added to the treebank by an automatic conversion process with 100% accuracy.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our semantic-role annotation process begins with a rule-based automatic tagger, the output of which is then hand- corrected (see section 4 for details).",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Proposition Bank aims to provide a broad-coverage hand-annotated corpus of such phenomena, enabling the development of better domain-independent language understanding systems and the quantitative study of how and why these syntactic alternations take place.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We define a set of underlying semantic roles for each verb and annotate each occurrence in the text of the original Penn Treebank.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each verb\u2019s roles are numbered, as in the following occurrences of the verb offer from our data: (8) ...",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ Arg0 the company] to ... offer [ a 15% to 20% stake] [ Arg2 to the public] (wsj_0345)1 (9) ...",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ Arg0 Sotheby\u2019s] ... offered [ Arg2 the Dorrance heirs] [ Arg1a money back guarantee] (wsj_1928) (10) ...",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ an amendment] offered [ Arg0 by Rep. Peter DeFazio] ...",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0107) (11) ...",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ Subcontractors] will be offered [ Arg1 a settlement] ...",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0187) We believe that providing this level of semantic representation is important for applications including information extraction, question answering, and machine 1 Example sentences drawn from the treebank corpus are identified by the number of the file in which they.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "occur.",
                    "sid": 35,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Constructed examples usually feature John.",
                    "sid": 36,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "72 translation.",
                    "sid": 37,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Over the past decade, most work in the field of information extraction has shifted from complex rule-based systems designed to handle a wide variety of semantic phenomena, including quantification, anaphora, aspect, and modality (e.g., Alshawi 1992), to more robust finite-state or statistical systems (Hobbs et al. 1997; Miller et al. 1998).",
                    "sid": 38,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These newer systems rely on a shallower level of semantic representation, similar to the level we adopt for the Proposition Bank, but have also tended to be very domain specific.",
                    "sid": 39,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The systems are trained and evaluated on corpora annotated for semantic relations pertaining to, for example, corporate acquisitions or terrorist events.",
                    "sid": 40,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Proposition Bank (PropBank) takes a similar approach in that we annotate predicates\u2019 semantic roles, while steering clear of the issues involved in quantification and discourse-level structure.",
                    "sid": 41,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By annotating semantic roles for every verb in our corpus, we provide a more domain-independent resource, which we hope will lead to more robust and broad-coverage natural language understanding systems.",
                    "sid": 42,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Proposition Bank focuses on the argument structure of verbs and provides a complete corpus annotated with semantic roles, including roles traditionally viewed as arguments and as adjuncts.",
                    "sid": 43,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It allows us for the first time to determine the frequency of syntactic variations in practice, the problems they pose for natural language understanding, and the strategies to which they may be susceptible.",
                    "sid": 44,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin the article by giving examples of the variation in the syntactic realization of semantic arguments and drawing connections to previous research into verb alternation behavior.",
                    "sid": 45,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In section 3 we describe our approach to semantic-role annotation, including the types of roles chosen and the guidelines for the annotators.",
                    "sid": 46,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 5 compares our PropBank methodology and choice of semantic-role labels to those of another semantic annotation project, FrameNet.",
                    "sid": 47,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We conclude the article with a discussion of several preliminary experiments we have performed using the PropBank annotations, and discuss the implications for natural language research.",
                    "sid": 48,
                    "ssid": 48,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "semantic roles and syntactic alternation. ",
            "number": "2",
            "sents": [
                {
                    "text": "Our work in examining verb alternation behavior is inspired by previous research into the linking between semantic roles and syntactic realization, in particular, the comprehensive study of Levin (1993).",
                    "sid": 49,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Levin argues that syntactic frames are a direct reflection of the underlying semantics; the sets of syntactic frames associated with a particular Levin class reflect underlying semantic components that constrain allowable arguments.",
                    "sid": 50,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On this principle, Levin defines verb classes based on the ability of particular verbs to occur or not occur in pairs of syntactic frames that are in some sense meaning-preserving (diathesis alternations).",
                    "sid": 51,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classes also tend to share some semantic component.",
                    "sid": 52,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the break examples above are related by a transitive/intransitive alternation called the causative/inchoative alternation.",
                    "sid": 53,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Break and other verbs such as shatter and smash are also characterized by their ability to appear in the middle construction, as in Glass breaks/shatters/smashes easily.",
                    "sid": 54,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Cut, a similar change-of-state verb, seems to share in this syntactic behavior and can also appear in the transitive (causative) as well as the middle construction: John cut the bread, This loaf cuts easily.",
                    "sid": 55,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it cannot also occur in the simple intransitive: The window broke/ * The bread cut.",
                    "sid": 56,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, cut verbs can occur in the conative \u2014 John valiantly cut/hacked at the frozen loaf, but his knife was too dull to make a dent in it\u2014whereas break verbs cannot: *John broke at the window.",
                    "sid": 57,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The explanation given is that cut describes a series of actions directed at achieving the goal of separating some object into pieces.",
                    "sid": 58,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These actions consist of grasping an instrument with a sharp edge such as a knife and applying it in a cutting fashion to the object.",
                    "sid": 59,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is possible for these actions to be 73 performed without the end result being achieved, but such that the cutting manner can still be recognized, for example, John cut at the loaf.",
                    "sid": 60,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Where break is concerned, the only thing specified is the resulting change of state, in which the object becomes separated into pieces.",
                    "sid": 61,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "VerbNet (Kipper, Dang, and Palmer 2000; Kipper, Palmer, and Rambow 2002) extends Levin\u2019s classes by adding an abstract representation of the syntactic frames for each class with explicit correspondences between syntactic positions and the semantic roles they express, as in Agent REL Patient or Patient REL into pieces for break.2 (For other extensions of Levin, see also Dorr and Jones [2000] and Korhonen, Krymolowsky, and Marx [2003].)",
                    "sid": 62,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The original Levin classes constitute the first few levels in the hierarchy, with each class subsequently refined to account for further semantic and syntactic differences within a class.",
                    "sid": 63,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The argument list consists of thematic labels from a set of 20 such possible labels (Agent, Patient, Theme, Experiencer, etc.).",
                    "sid": 64,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntactic frames represent a mapping of the list of schematic labels to deep-syntactic arguments.",
                    "sid": 65,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Additional semantic information for the verbs is expressed as a set (i.e., conjunction) of semantic predicates, such as motion, contact, transfer_info.",
                    "sid": 66,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Currently, all Levin verb classes have been assigned thematic labels and syntactic frames, and over half the classes are completely described, including their semantic predicates.",
                    "sid": 67,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In many cases, the additional information that VerbNet provides for each class has caused it to subdivide, or use intersections of, Levin\u2019s original classes, adding an additional level to the hierarchy (Dang et al. 1998).",
                    "sid": 68,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are also extending the coverage by adding new classes (Korhonen and Briscoe 2004).",
                    "sid": 69,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our objective with the Proposition Bank is not a theoretical account of how and why syntactic alternation takes place, but rather to provide a useful level of representation and a corpus of annotated data to enable empirical study of these issues.",
                    "sid": 70,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have referred to Levin\u2019s classes wherever possible to ensure that verbs in the same classes are given consistent role labels.",
                    "sid": 71,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there is only a 50% overlap between verbs in VerbNet and those in the Penn TreeBank II, and PropBank itself does not define a set of classes, nor does it attempt to formalize the semantics of the roles it defines.",
                    "sid": 72,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While lexical resources such as Levin\u2019s classes and VerbNet provide information about alternation patterns and their semantics, the frequency of these alternations and their effect on language understanding systems has never been carefully quantified.",
                    "sid": 73,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While learning syntactic subcategorization frames from corpora has been shown to be possible with reasonable accuracy (Manning 1993; Brent 1993; Briscoe and Carroll 1997), this work does not address the semantic roles associated with the syntactic arguments.",
                    "sid": 74,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More recent work has attempted to group verbs into classes based on alternations, usually taking Levin\u2019s classes as a gold standard (McCarthy 2000; Merlo and Stevenson 2001; Schulte im Walde 2000; Schulte im Walde and Brew 2002).",
                    "sid": 75,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But without an annotated corpus of semantic roles, this line of research has not been able to measure the frequency of alternations directly, or more generally, to ascertain how well the classes defined by Levin correspond to real-world data.",
                    "sid": 76,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We believe that a shallow labeled dependency structure provides a feasible level of annotation which, coupled with minimal coreference links, could provide the foundation for a major advance in our ability to extract salient relationships from text.",
                    "sid": 77,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This will in turn improve the performance of basic parsing and generation 2 These can be thought of as a notational variant of tree-adjoining grammar elementary trees or tree-.",
                    "sid": 78,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "adjoining grammar partial derivations (Kipper, Dang, and Palmer 2000).",
                    "sid": 79,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "74 components, as well as facilitate advances in text understanding, machine translation, and fact retrieval.",
                    "sid": 80,
                    "ssid": 32,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "annotation scheme: choosing the set of semantic roles. ",
            "number": "3",
            "sents": [
                {
                    "text": "Because of the difficulty of defining a universal set of semantic or thematic roles covering all types of predicates, PropBank defines semantic roles on a verb-by-verb basis.",
                    "sid": 81,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An individual verb\u2019s semantic arguments are numbered, beginning with zero.",
                    "sid": 82,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For a particular verb, Arg0 is generally the argument exhibiting features of a Pro- totypical Agent (Dowty 1991), while Arg1 is a Prototypical Patient or Theme.",
                    "sid": 83,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No consistent generalizations can be made across verbs for the higher-numbered arguments, though an effort has been made to consistently define roles across members of VerbNet classes.",
                    "sid": 84,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition to verb-specific numbered roles, PropBank defines several more general roles that can apply to any verb.",
                    "sid": 85,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remainder of this section describes in detail the criteria used in assigning both types of roles.",
                    "sid": 86,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As examples of verb-specific numbered roles, we give entries for the verbs accept and kick below.",
                    "sid": 87,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These examples are taken from the guidelines presented to the annotators and are also available on the Web at http://www.cis.upenn.edu/\u02dc cotton/ cgi-bin/pblex_fmt.cgi.",
                    "sid": 88,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(12) Frameset accept.01 \u2018\u2018take willingly\u2019\u2019 Arg0: Acceptor Arg1: Thing accepted Arg2: Accepted-from Arg3: Attribute Ex:[ Arg0 He] [ ArgM-MOD ArgMNEG n\u2019t] accept [ Arg1 anything of value] Arg2 from those he was writing about].",
                    "sid": 89,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0186) (13) Frameset kick.01 \u2018\u2018drive or impel with the foot\u2019\u2019 Arg0: Kicker Arg1: Thing kicked Arg2: Instrument (defaults to foot) Ex1: [ ArgM-DIS But] [ Arg0 two big New York banks ] seem [ Arg0 *trace* ] to have kicked [ those chances] [ away], [ ArgMTMP for the moment], [ Arg2 with the embarrassing failure of Citicorp and Chase Manhattan Corp. to deliver $7.2 billion in bank financing for a leveraged buyout of United Airlines parent UAL Corp].",
                    "sid": 90,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1619) Ex2: [ Arg0 John ] tried [ Arg0 *trace* ] to kick [ Arg1 the football], but Mary pulled it away at the last moment.",
                    "sid": 91,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A set of roles corresponding to a distinct usage of a verb is called a roleset and can be associated with a set of syntactic frames indicating allowable syntactic variations in the expression of that set of roles.",
                    "sid": 92,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The roleset with its associated frames is called a 75 frameset.",
                    "sid": 93,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A polysemous verb may have more than one frameset when the differences in meaning are distinct enough to require a different set of roles, one for each frameset.",
                    "sid": 94,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tagging guidelines include a \u2018\u2018descriptor\u2019\u2019 field for each role, such as \u2018\u2018kicker\u2019\u2019 or \u2018\u2018instrument,\u2019\u2019 which is intended for use during annotation and as documentation but does not have any theoretical standing.",
                    "sid": 95,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, each frameset is complemented by a set of examples, which attempt to cover the range of syntactic alternations afforded by that usage.",
                    "sid": 96,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The collection of frameset entries for a verb is referred to as the verb\u2019s frames file.",
                    "sid": 97,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The use of numbered arguments and their mnemonic names was instituted for a number of reasons.",
                    "sid": 98,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Foremost, the numbered arguments plot a middle course among many different theoretical viewpoints.3 The numbered arguments can then be mapped easily and consistently onto any theory of argument structure, such as traditional theta role (Kipper, Palmer, and Rambow 2002), lexical-conceptual structure (Rambow et al. 2003), or Prague tectogrammatics (Hajic\u02d8ova and Kuc\u02d8erova\u00b4 2002).",
                    "sid": 99,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While most rolesets have two to four numbered roles, as many as six can appear, in particular for certain verbs of motion:4 (14) Frameset edge.01 \u2018\u2018move slightly\u2019\u2019 Arg0: causer of motion Arg3: start point Arg1: thing in motion Arg4: end point Arg2: distance moved Arg5: direction Ex: [ Arg0 Revenue] edged [ Arg5 up] [ Arg2EXT 3.4%] [ Arg4 to $904 million] Arg3 from $874 million] [ ArgMTMP in last year\u2019s third quarter].",
                    "sid": 100,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1210) Because of the use of Arg0 for agency, there arose a small set of verbs in which an external force could cause the Agent to execute the action in question.",
                    "sid": 101,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in the sentence . . .",
                    "sid": 102,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mr. Dinkins would march his staff out of board meetings and into his private office . . .",
                    "sid": 103,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0765), the staff is unmistakably the marcher, the agentive role.",
                    "sid": 104,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Yet Mr. Dinkins also has some degree of agency, since he is causing the staff to do the marching.",
                    "sid": 105,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To capture this, a special tag, ArgA, is used for the agent of an induced action.",
                    "sid": 106,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This ArgA tag is used only for verbs of volitional motion such as march and walk, modern uses of volunteer (e.g., Mary volunteered John to clean the garage, or more likely the passive of that, John was volunteered to clean the garage), and, with some hesitation, graduate based on usages such as Penn only graduates 35% of its students.",
                    "sid": 107,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(This usage does not occur as such in the Penn Treebank corpus, although it is evoked in the sentence No student should be permitted to be graduated from elementary school without having mastered the 3 R\u2019s at the level that prevailed 20 years ago.",
                    "sid": 108,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1286)) In addition to the semantic roles described in the rolesets, verbs can take any of a set of general, adjunct-like arguments (ArgMs), distinguished by one of the function tags shown in Table 1.",
                    "sid": 109,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although they are not considered adjuncts, NEG for verb-level negation (e.g., John didn\u2019t eat his peas) and MOD for modal verbs (e.g., John would eat 3 By following the treebank, however, we are following a very loose government-binding framework..",
                    "sid": 110,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 We make no attempt to adhere to any linguistic distinction between arguments and adjuncts.",
                    "sid": 111,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While many.",
                    "sid": 112,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "linguists would consider any argument higher than Agr2 or Agr3 to be an adjunct, such arguments occur frequently enough with their respective verbs, or classes of verbs, that they are assigned a number in order to ensure consistent annotation.",
                    "sid": 113,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "76 Table 1 Subtypes of the ArgM modifier tag.",
                    "sid": 114,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LOC: location CAU: cause EXT: extent TMP: time DIS: discourse connectives PNC: purpose ADV: general purpose MNR: manner NEG: negation marker DIR: direction MOD: modal verb everything else) are also included in this list to allow every constituent surrounding the verb to be annotated.",
                    "sid": 115,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DIS is also not an adjunct but is included to ease future discourse connective annotation.",
                    "sid": 116,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Distinguishing Framesets.",
                    "sid": 117,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The criteria for distinguishing framesets are based on both semantics and syntax.",
                    "sid": 118,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two verb meanings are distinguished as different framesets if they take different numbers of arguments.",
                    "sid": 119,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the verb decline has two framesets: (15) Frameset decline.01 \u2018\u2018go down incrementally\u2019\u2019 Arg1: entity going down Arg2: amount gone down by, EXT Arg3: start point Arg4: end point Ex: ...[ its net income] declining [ Arg2EXT 42%] [ to $121 million] ArgMTMP in the first 9 months of 1989].",
                    "sid": 120,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0067) (16) Frameset decline.02 \u2018\u2018demure, reject\u2019\u2019 Arg0: agent Arg1: rejected thing Ex: [ Arg0 A spokesman ] declined [ Arg1 *trace* to elaborate] (wsj_0038) However, alternations which preserve verb meanings, such as causative/inchoative or object deletion, are considered to be one frameset only, as shown in the example (17).",
                    "sid": 121,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both the transitive and intransitive uses of the verb open correspond to the same frameset, with some of the arguments left unspecified: (17) Frameset open.01 \u2018\u2018cause to open\u2019\u2019 Arg0: agent Arg1: thing opened Arg2: instrument Ex1: [ Arg0 John] opened [ the door] 77 Ex2: [ Ex3: [ Arg1 Arg0 The door] opened John] opened [ the door] [ with his foot] Moreover, differences in the syntactic type of the arguments do not constitute criteria for distinguishing among framesets.",
                    "sid": 122,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, see.01 allows for either an NP object or a clause object: (18) Frameset see.01 \u2018\u2018view\u2019\u2019 Arg0: viewer Arg1: thing viewed Ex1: [ Ex2: [ Arg0 Arg0 John] saw [ John] saw [ the President] the President collapse] Furthermore, verb-particle constructions are treated as separate from the corresponding simplex verb, whether the meanings are approximately the same or not.",
                    "sid": 123,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Example (1921) presents three of the framesets for cut: (19) Frameset cut.01 \u2018\u2018slice\u2019\u2019 Arg0: cutter Arg1: thing cut Arg2: medium, source Arg3: instrument Ex: [ Arg0 Longer production runs] [ ArgM-MOD would] cut [ Arg1 inefficiencies from adjusting machinery between production cycles].",
                    "sid": 124,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0317) (20) Frameset cut.04 \u2018\u2018cut off = slice\u2019\u2019 Arg0: cutter Arg1: thing cut (off) Arg2: medium, source Arg3: instrument Ex: [ Arg0 The seed companies] cut off [ Arg1 the tassels of each plant].",
                    "sid": 125,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0209) (21) Frameset cut.05 \u2018\u2018cut back = reduce\u2019\u2019 Arg0: cutter Arg1: thing reduced Arg2: amount reduced by 78 Arg3: start point Arg4: end point Ex: \u2018\u2018Whoa,\u2019\u2019 thought John, \u00b5[ I ]\u2019ve got [ Arg0 *trace* ] to start Arg0 *trace* ] cutting back [ Arg1 my intake of chocolate].",
                    "sid": 126,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the verb and particle do not need to be contiguous; (20) above could just as well be phrased The seed companies cut the tassels of each plant off.",
                    "sid": 127,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the WSJ text, there are frames for over 3,300 verbs, with a total of just over 4,500 framesets described, implying an average polysemy of 1.36.",
                    "sid": 128,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of these verb frames, only 21.6% (721/3342) have more than one frameset, while less than 100 verbs have four or more.",
                    "sid": 129,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each instance of a polysemous verb is marked as to which frameset it belongs to, with interannotator (ITA) agreement of 94%.",
                    "sid": 130,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framesets can be viewed as extremely coarse-grained sense distinctions, with each frameset corresponding to one or more of the Senseval 2 WordNet 1.7 verb groupings.",
                    "sid": 131,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each grouping in turn corresponds to several WordNet 1.7 senses (Palmer, BabkoMalaya, and Dang 2004).",
                    "sid": 132,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Secondary Predications.",
                    "sid": 133,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are two other functional tags which, unlike those listed above, can also be associated with numbered arguments in the frames files.",
                    "sid": 134,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first one, EXT (extent), indicates that a constituent is a numerical argument on its verb, as in climbed 15% or walked 3 miles.",
                    "sid": 135,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second, PRD (secondary predication), marks a more subtle relationship.",
                    "sid": 136,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If one thinks of the arguments of a verb as existing in a dependency tree, all arguments depend directly on the verb.",
                    "sid": 137,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each argument is basically independent of the others.",
                    "sid": 138,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are those verbs, however, which predict that there is a predicative relationship between their arguments.",
                    "sid": 139,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A canonical example of this is call in the sense of \u2018\u2018attach a label to,\u2019\u2019 as in Mary called John an idiot.",
                    "sid": 140,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case there is a relationship between John and an idiot (at least in Mary\u2019s mind).",
                    "sid": 141,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The PRD tag is associated with the Arg2 label in the frames file for this frameset, since it is predictable that the Arg2 predicates on the Arg1 John.",
                    "sid": 142,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This helps to disambiguate the crucial difference between the following two sentences: predicative reading ditransitive reading Mary called John a doctor.",
                    "sid": 143,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mary called John a doctor.5 (LABEL) (SUMMON) Arg0: Mary Arg0: Mary Rel: called Rel: called Arg1: John (item being labeled) Arg2: John (benefactive) Arg2PRD: a doctor (attribute) Arg1: a doctor (thing summoned) It is also possible for ArgMs to predicate on another argument.",
                    "sid": 144,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since this must be decided on a case-by-case basis, the PRD function tag is added to the ArgM by the annotator, as in example (28).",
                    "sid": 145,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 This sense could also be stated in the dative: Mary called a doctor for John..",
                    "sid": 146,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "79 3.3 Subsumed Arguments.",
                    "sid": 147,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because verbs which share a VerbNet class are rarely synonyms, their shared argument structure occasionally takes on odd characteristics.",
                    "sid": 148,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of primary interest among these are the cases in which an argument predicted by one member of a class cannot be attested by another member of the same class.",
                    "sid": 149,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For a relatively simple example, consider the verb hit, in VerbNet classes 18.1 and 18.4.",
                    "sid": 150,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This takes three very obvious arguments: (22) Frameset hit \u2018\u2018strike\u2019\u2019 Arg0: hitter Arg1: thing hit, target Arg2: instrument of hitting Ex1: Agentive subject: \u2018\u2018[ He ] digs in the sand instead of [ *trace* ] Arg0 i Arg0 i hitting [ the ball], like a farmer,\u2019\u2019 said Mr. Yoneyama.",
                    "sid": 151,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1303) Ex2: Instrumental subject: Dealers said [ the shares] were hit [ Arg2 fears of a slowdown in the U.S. economy].",
                    "sid": 152,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1015) Ex3: All arguments: [ John] hit [ Arg1 the tree] [ Arg2 with a stick].6 VerbNet classes 18.1 and 18.4 are filled with verbs of hitting, such as beat, hammer, kick, knock, strike, tap, and whack.",
                    "sid": 153,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For some of these the instrument of hitting is necessarily included in the semantics of the verb itself.",
                    "sid": 154,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, kick is essentially \u2018\u2018hit with the foot\u2019\u2019 and hammer is exactly \u2018\u2018hit with a hammer.\u2019\u2019 For these verbs, then, the Arg2 might not be available, depending on how strongly the instrument is incorporated into the verb.",
                    "sid": 155,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Kick, for example, shows 28 instances in the treebank but only one instance of a (somewhat marginal) instrument: (23) [ ArgM-DIS But] [ two big New York banks] seem to have kicked [ Arg1 those chances] [ ArgMDIR away], [ ArgMTMP for the moment], [ Arg2 with the embarrassing failure of Citicorp and Chase Manhattan Corp. to deliver $7.2 billion in bank financing for a leveraged buyout of United Airlines parent UAL Corp].",
                    "sid": 156,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1619) Hammer shows several examples of Arg2s, but these are all metaphorical hammers: (24) Despite the relatively strong economy, [ Arg1 junk bond prices ] did nothing except go down, [ *trace* ] hammered [ by a seemingly Arg1 i Arg2 endless trail of bad news].",
                    "sid": 157,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_2428) Another perhaps more interesting case is that in which two arguments can be merged into one in certain syntactic situations.",
                    "sid": 158,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consider the case of meet, which canonically takes two arguments: (25) Frameset meet \u2018\u2018come together\u2019\u2019 Arg0: one party 6 The Wall Street Journal corpus contains no examples with both an agent and an instrument..",
                    "sid": 159,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "80 Arg1: the other party Ex: [ Arg0 Argentine negotiator Carlos Carballo] [ ArgM-MOD will] meet Arg1 with banks this week].",
                    "sid": 160,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0021) It is perfectly possible, of course, to mention both meeting parties in the same constituent: (26) [ The economic and foreign ministers of 12 Asian and.",
                    "sid": 161,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pacific nations] [ ArgM-MOD will] meet [ in Australia] [ next week] ArgMPRP to discuss global trade as well as regional matters such as transportation and telecommunications].",
                    "sid": 162,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0043) In these cases there is an assumed or default Arg1 along the lines of \u2018\u2018each other\u2019\u2019: (27) [ The economic and foreign ministers of 12 Asian and.",
                    "sid": 163,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pacific nations] [ ArgM-MOD will] meet [ (with) each other] . . .",
                    "sid": 164,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, verbs of attachment (attach, tape, tie, etc.) can express the things being attached as either one constituent or two: (28) Frameset connect.01 \u2018\u2018attach\u2019\u2019 Arg0: agent, entity causing two objects to be attached Arg1: patient Arg2: attached-to Arg3: instrument Ex1: The subsidiary also increased reserves by $140 million, however, and set aside an additional $25 million for [ Arg1 claims] connected Arg2 with Hurricane Hugo].",
                    "sid": 165,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1109) Ex2: Machines using the 486 are expected to challenge higher-priced work stations and minicomputers in applications such as [ so-called servers ], [ which ] [ *trace* ] connect [ groups of computers] i Arg0 i Arg0 i Arg1 ArgMPRD [together], and in computer aided design.",
                    "sid": 166,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0781) 3.4 Role Labels and Syntactic Trees.",
                    "sid": 167,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Proposition Bank assigns semantic roles to nodes in the syntactic trees of the Penn Treebank.",
                    "sid": 168,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Annotators are presented with the roleset descriptions and the syntactic tree and mark the appropriate nodes in the tree with role labels.",
                    "sid": 169,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lexical heads of constituents are not explicitly marked either in the treebank trees or in the semantic labeling layered on top of them.",
                    "sid": 170,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Annotators cannot change the syntactic parse, but they are not otherwise restricted in assigning the labels.",
                    "sid": 171,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In certain cases, more than one node may be assigned the same role.",
                    "sid": 172,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The annotation software does not require that the nodes being assigned labels be in any syntactic relation to the verb.",
                    "sid": 173,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We discuss the ways in which we handle the specifics of the treebank syntactic annotation style in this section.",
                    "sid": 174,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "81 3.4.1 Prepositional Phrases.",
                    "sid": 175,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The treatment of prepositional phrases is complicated by several factors.",
                    "sid": 176,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On one hand, if a given argument is defined as a \u2018\u2018destination,\u2019\u2019 then in a sentence such as John poured the water into the bottle, the destination of the water is clearly the bottle, not \u2018\u2018into the bottle.\u2019\u2019 The fact that the water is going into the bottle is inherent in the description \u2018\u2018destination\u2019\u2019; the preposition merely adds the specific information that the water will end up inside the bottle.",
                    "sid": 177,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus arguments should properly be associated with the NP heads of prepositional phrases.",
                    "sid": 178,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, however, ArgMs which are prepositional phrases are annotated at the PP level, not the NP level.",
                    "sid": 179,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the sake of consistency, then, numbered arguments are also tagged at the PP level.",
                    "sid": 180,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This also facilitates the treatment of multiword prepositions such as out of, according to, and up to but not including.7 (29) [ Arg1 Its net income] declining [ Arg2EXT 42%] [to Arg4 $121 million] ArgMTMP in the first 9 months of 1989] (wsj_0067) 3.4.2 Traces and Control Verbs.",
                    "sid": 181,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Penn Treebank contains empty categories known as traces, which are often coindexed with other constituents in the tree.",
                    "sid": 182,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When a trace is assigned a role label by an annotator, the coindexed constituent is automatically added to the annotation, as in (30) [ Arg0 John ] tried [ Arg0 *trace* ] to kick [ Arg1 the football], but Mary pulled it away at the last moment.",
                    "sid": 183,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verbs such as cause, force, and persuade, known as object control verbs, pose a problem for the analysis and annotation of semantic structure.",
                    "sid": 184,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consider a sentence such as Commonwealth Edison said the ruling could force it to slash its 1989 earnings by $1.55 a share.",
                    "sid": 185,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0015).",
                    "sid": 186,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Penn Treebank\u2019s analysis assigns a single sentential (S) constituent to the entire string it to slash . . .",
                    "sid": 187,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "a share, making it a single syntactic argument to the verb force.",
                    "sid": 188,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the PropBank annotation, we split the sentential complement into two semantic roles for the verb force, assigning roles to the noun phrase and verb phrase but not to the S node which subsumes them: (31) Frameset cause, force, persuade, etc. \u2018\u2018impelled action\u2019\u2019 Arg0: agent Arg1: impelled agent Arg2: impelled action Ex: Commonwealth Edison said [ the ruling] [ ArgM-MOD could] force Arg1 it] [ Arg2PRD to slash its 1989 earnings by $1.55 a share].",
                    "sid": 189,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0015) In such a sentence, the object of the control verb will also be assigned a semantic role by the subordinate clause\u2019s verb: (32) Commonwealth Edison said the ruling could force [ Arg0 it] to slash Arg1 its 1989 earnings] by [ $1.55 a share].",
                    "sid": 190,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0015) 7 Note that out of is exactly parallel to into, but one is spelled with a space in the middle and the other isn\u2019t..",
                    "sid": 191,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "82 While it is the Arg0 of force, it is the Arg1 of slash.",
                    "sid": 192,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, subject control verbs such as promise result in the subject of the main clause being assigned two roles, one for each verb: (33) [ Mr. Bush\u2019s legislative package] promises [ Arg2 to cut emissions by 10 million tons\u2014basically in half\u2014by the year 2000].",
                    "sid": 193,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0146) (34) [ Mr. Bush\u2019s legislative package ] promises [ Arg0 *trace* ] to cut Arg1 emissions] [ by 10 million tons\u2014 basically in half\u2014] ARGMTMP by the year 2000].",
                    "sid": 194,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We did not find a single case of a subject control verb used with a direct object and an infinitival clause (e.g., John promised Mary to come) in the Penn Treebank.",
                    "sid": 195,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The cases above must be contrasted with verbs such as expect, often referred as exceptional case marking (ECM) verbs, where an infinitival subordinate clause is a single semantic argument: (35) Frameset expect \u2018\u2018look forward to, anticipate\u2019\u2019 Arg0: expector Arg1: anticipated event Ex: Mr. Leinonen said [ easily].",
                    "sid": 196,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0064) Arg0 he] expects [ Arg1 Ford to meet the deadline While Ford is given a semantic role for the verb meet, it is not given a role for expect.",
                    "sid": 197,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4.3 Split Constituents.",
                    "sid": 198,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most verbs of saying (say, tell, ask, report, etc.) have the property that the verb and its subject can be inserted almost anywhere within another of the verb\u2019s arguments.",
                    "sid": 199,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the canonical realization is John said (that) Mary was going to eat outside at lunchtime today, it is common to say Mary, John said, was going to eat outside at lunchtime today or Mary was going to eat outside, John said, at lunchtime today.",
                    "sid": 200,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this situation, there is no constituent holding the whole of the utterance while not also holding the verb of saying.",
                    "sid": 201,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We annotate these cases by allowing a single semantic role to point to the component pieces of the split constituent in order to cover the correct, discontinuous substring of the sentence.",
                    "sid": 202,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(36) Frameset say Arg0: speaker Arg1: utterance Arg2: listener Ex: [ Arg1 By addressing those problems], [ Arg0 Mr. Maxwell] said, Arg1 the new funds have become \u2018\u2018extremely attractive to Japanese and other investors outside the U.S.\u2019\u2019] (wsj_0029) In the flat structure we have been using for example sentences, this looks like a case of repeated role labels.",
                    "sid": 203,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Internally, however, there is one role label pointing to multiple constituents of the tree, shown in Figure 1.",
                    "sid": 204,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "83 Figure 1 Split constituents: In this case, a single semantic role label points to multiple nodes in the original treebank tree.",
                    "sid": 205,
                    "ssid": 125,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the propbank development process. ",
            "number": "4",
            "sents": [
                {
                    "text": "Since the Proposition Bank consists of two portions, the lexicon of frames files and the annotated corpus, the process is similarly divided into framing and annotation.",
                    "sid": 206,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Framing.",
                    "sid": 207,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The process of creating the frames files, that is, the collection of framesets for each lexeme, begins with the examination of a sample of the sentences from the corpus containing the verb under consideration.",
                    "sid": 208,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These instances are grouped into one or more major senses, and each major sense is turned into a single frameset.",
                    "sid": 209,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To show all the possible syntactic realizations of the frameset, many sentences from the corpus are included in the frames file, in the same format as the examples above.",
                    "sid": 210,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In many cases a particular realization will not be attested within the Penn Treebank corpus; in these cases, a constructed sentence is used, usually identified by the presence of the characters of John and Mary.",
                    "sid": 211,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Care was taken during the framing process to make synonymous verbs (mostly in the sense of \u2018\u2018sharing a VerbNet Class\u2019\u2019) have the same framing, with the same number of roles and the same descriptors on those roles.",
                    "sid": 212,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generally speaking, a given lexeme/sense pair required 10\u201315 minutes to frame, although highly polysemous verbs could require longer.",
                    "sid": 213,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With the 4,500+ framesets currently in place for PropBank, this is clearly a substantial time investment, and the frames files represent an important resource in their own right.",
                    "sid": 214,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We were able to use membership in a VerbNet class which already had consistent framing to project accurate frames files for up to 300 verbs.",
                    "sid": 215,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the overlap between VerbNet and PropBank had been more than 50%, this number might have been higher.",
                    "sid": 216,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Annotation.",
                    "sid": 217,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin the annotation process by running a rule-based argument tagger (Palmer, Rosenzweig, and Cotton 2001) on the corpus.",
                    "sid": 218,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This tagger incorporates an extensive lexicon, entirely separate from that used by PropBank, which encodes class-based 84 mappings between grammatical and semantic roles.",
                    "sid": 219,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rule-based tagger achieved 83% accuracy on pilot data, with many of the errors due to differing assumptions made in defining the roles for a particular verb.",
                    "sid": 220,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The output of this tagger is then corrected by hand.",
                    "sid": 221,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Annotators are presented with an interface which gives them access to both the frameset descriptions and the full syntactic parse of any sentence from the treebank and allows them to select nodes in the parse tree for labeling as arguments of the predicate selected.",
                    "sid": 222,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For any verb they are able to examine both the descriptions of the arguments and the example tagged sentences, much as they have been presented here.",
                    "sid": 223,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tagging is done on a verb-by-verb basis, known as lexical sampling, rather than all-words annotation of running text.",
                    "sid": 224,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The downside of this approach is that it does not quickly provide a stretch of fully annotated text, needed for early assessment of the usefulness of the resource (see subsequent sections).",
                    "sid": 225,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this reason a domain-specific subcorpus was automatically extracted from the entirety of the treebank, consisting of texts roughly primarily concerned with financial reporting and identified by the presence of a dollar sign anywhere in the text.",
                    "sid": 226,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This \u2018\u2018financial\u2019\u2019 subcorpus comprised approximately one-third of the treebank and served as the initial focus of annotation.",
                    "sid": 227,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The treebank as a whole contains 3,185 unique verb lemmas, while the financial subcorpus contains 1,826.",
                    "sid": 228,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These verbs are arrayed in a classic Zipfian distribution, with a few verbs occurring very often (say, for example, is the most common verb, with over 10,000 instances in its various inflectional forms) and most verbs occurring two or fewer times.",
                    "sid": 229,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As with the distribution of the lexical items themselves, the framesets also display a Zipfian distribution: A small number of verbs have many framesets ( go has 20 when including phrasal variants, and come, get, make, pass, take, and turn each have more than a dozen) while the majority of verbs (2581/3342) have only one frameset.",
                    "sid": 230,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For polysemous verbs annotators had to determine which frameset was appropriate for a given usage in order to assign the correct argument structure, although this information was explicitly marked only during a separate pass.",
                    "sid": 231,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Annotations were stored in a standoff notation, referring to nodes within the Penn Treebank without actually replicating any of the lexical material or structure of that corpus.",
                    "sid": 232,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The process of annotation was a two-pass, blind procedure followed by an adjudication phase to resolve differences between the two initial passes.",
                    "sid": 233,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both role labeling decisions and the choice of frameset were adjudicated.",
                    "sid": 234,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The annotators themselves were drawn from a variety of backgrounds, from undergraduates to holders of doctorates, including linguists, computer scientists, and others.",
                    "sid": 235,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Undergraduates have the advantage of being inexpensive but tend to work for only a few months each, so they require frequent training.",
                    "sid": 236,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Linguists make the best overall judgments although several of our nonlinguist annotators also had excellent skills.",
                    "sid": 237,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The learning curve for the annotation task tended to be very steep, with most annotators becoming comfortable with the process within three days of work.",
                    "sid": 238,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This contrasts favorably with syntactic annotation, which has a much longer learning curve (Marcus, personal communication), and indicates one of the advantages of using a corpus already syntactically parsed as the basis of semantic annotation.",
                    "sid": 239,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Over 30 annotators contributed to the project, some for just a few weeks, some for up to three years.",
                    "sid": 240,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framesets were created and annotation disagreements were adjudicated by a small team of highly trained linguists: Paul Kingsbury created the frames files and managed the annotators, and Olga BabkoMalaya checked the frames files for consistency and did the bulk of the adjudication.",
                    "sid": 241,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We measured agreement between the two annotations before the adjudication step using the kappa statistic (Siegel and Castellan 1988), which is defined with respect to 85 the probability of interannotator agreement, P\u00f0A\u00de, and the agreement expected by chance, P\u00f0E\u00de: P\u00f0A\u00de- P\u00f0E\u00de k 1 - P\u00f0E\u00de Measuring interannotator agreement for PropBank is complicated by the large number of possible annotations for each verb.",
                    "sid": 242,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For role identification, we expect agreement between annotators to be much higher than chance, because while any node in the parse tree can be annotated, the vast majority of arguments are chosen from the small number of nodes near the verb.",
                    "sid": 243,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to isolate the role classification decisions from this effect and avoid artifically inflating the kappa score, we split role identification (role vs. nonrole) from role classification (Arg0 vs. Arg1 vs. ..",
                    "sid": 244,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "and calculate kappa for each decision separately.",
                    "sid": 245,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, for the role identification kappa, the interannotator agreement probability P\u00f0A\u00de is the number of node observation agreements divided by the total number of nodes considered, which is the number of nodes in each parse tree multiplied by the number of predicates annotated in the sentence.",
                    "sid": 246,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All the PropBank data were annotated by two people, and in calculating kappa we compare these two annotations, ignoring the specific identities of the annotators for the predicate (in practice, agreement varied with the training and skill of individual annotators).",
                    "sid": 247,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the role classification kappa, we consider only nodes that were marked as arguments by both annotators and compute kappa over the choices of possible argument labels.",
                    "sid": 248,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For both role identification and role classification, we compute kappa for two ways of treating ArgM labels.",
                    "sid": 249,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first is to treat ArgM labels as arguments like any other, in which case ArgMTMP, ArgMLOC, and so on are considered separate labels for the role classification kappa.",
                    "sid": 250,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the second scenario, we ignore ArgM labels, treating them as unlabeled nodes, and calculate agreement for identification and classification of numbered arguments only.",
                    "sid": 251,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Kappa statistics for these various decisions are shown in Table 2.",
                    "sid": 252,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agreement on role identification is very high (.99 under both treatments of ArgM), given the large number of obviously irrelevant nodes.",
                    "sid": 253,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Reassuringly, kappas for the more difficult role classification task are also high: .93 including all types of ArgM and .96 considering only numbered arguments.",
                    "sid": 254,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Kappas on the combined identification and classication decision, calculated over all nodes in the tree, are .91 including all sub- types of ArgM and .93 over numbered arguments only.",
                    "sid": 255,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Interannotator agreement among nodes that either annotator identified as an argument was .84, including ArgMs and .87, excluding ArgMs.",
                    "sid": 256,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Discrepancies between annotators tended to be less on numbered arguments than on the selection of function tags, as shown in the confusion matrices of Tables 3 and 4.",
                    "sid": 257,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 Interannotator agreement.",
                    "sid": 258,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P\u00f0A\u00de P\u00f0E\u00de k Including ArgM Role identification .99 .89 .93 Role classification .95 .27 .93 Combined decision .99 .88 .91 Excluding ArgM Role identification .99 .91 .94 Role classification .98 .41 .96 Combined decision .99 .91 .93 86 Table 3 Confusion matrix for argument labels, with ArgM labels collapsed into one category.",
                    "sid": 259,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Entries are a fraction of total annotations; true zeros are omitted, while other entries are rounded to zero.",
                    "sid": 260,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ar g0 Ar g1 Ar g2 Ar g3 Ar g4 Ar g M Arg 0 0.2 88 0.0 06 0.0 01 0.0 00 0.0 00 Arg 1 0.3 64 0.0 06 0.0 01 0.0 00 0.0 02 Arg 2 0.0 74 0.0 01 0.0 01 0.0 03 Arg 3 0.0 13 0.0 00 0.0 01 Arg 4 0.0 11 0.0 00 Arg M 0.2 28 Certain types of functions, particularly those represented by the tags ADV, MNR, and DIS, can be difficult to distinguish.",
                    "sid": 261,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in the sentence Also, substantially lower Dutch corporate tax rates helped the company keep its tax outlay flat relative to earnings growth (wsj_0132), the phrase relative to earnings growth could be interpreted as a manner adverbial (MNR), describing how the tax outlays were kept flat, or as a general-purpose adverbial (ADV), merely providing more information on the keeping event.",
                    "sid": 262,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, a word such as then can have several functions.",
                    "sid": 263,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is canonically a temporal adverb marking time or a sequence of events (.",
                    "sid": 264,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the Senate then broadened the list further . . .",
                    "sid": 265,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0101)) but can also mark a consequence of another action (.",
                    "sid": 266,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "if for any reason I don\u2019t have the values, then I won\u2019t recommend it.",
                    "sid": 267,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0331)) or simply serve as a placeholder in conversation (It\u2019s possible then that Santa Fe\u2019s real estate . . .",
                    "sid": 268,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "could one day fetch a king\u2019s ransom (wsj_0331)).",
                    "sid": 269,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These three usages require three different taggings (TMP, ADV, and DIS, respectively) and can easily trip up an annotator.",
                    "sid": 270,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The financial subcorpus was completely annotated and given a preadjudication release in June 2002.",
                    "sid": 271,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fully annotated and adjudicated corpus was completed in March 2004.",
                    "sid": 272,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both of these are available through the Linguistic Data Consortium, although because of the use of the standoff notation, prior possession of the treebank is also necessary.",
                    "sid": 273,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The frames files are distributed separately and are available through the project Web site at http://www.cis.upenn.edu/\u02dcace/.",
                    "sid": 274,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 Confusion matrix among subtypes of ArgM, defined in Table 1.",
                    "sid": 275,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Entries are fraction of all ArgM labels.",
                    "sid": 276,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Entries are a fraction of all ArgM labels; true zeros are omitted, while other entries are rounded to zero.",
                    "sid": 277,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A D V C A U DI R DI S EX T LO C M N R M O D NE G PN C T M P AD V 0.0 87 0.0 03 0.0 01 0.0 17 0.0 01 0.0 04 0.0 16 0.0 01 0.0 00 0.0 03 0.0 07 CA U 0.0 18 0.0 00 0.0 00 0.0 01 0.0 01 0.0 02 0.0 02 DIR 0.0 14 0.0 00 0.0 01 0.0 01 0.0 00 DIS 0.0 55 0.0 00 0.0 00 0.0 02 0.0 00 0.0 00 0.0 00 0.0 05 EX T 0.0 07 0.0 00 0.0 01 0.0 00 0.0 00 LO C 0.1 06 0.0 06 0.0 00 0.0 00 0.0 00 0.0 03 MN R 0.0 85 0.0 00 0.0 00 0.0 01 0.0 02 MO D 0.1 61 0.0 00 0.0 00 NE G 0.0 61 0.0 01 PN C 0.0 26 0.0 00 TM P 0.2 86 87",
                    "sid": 278,
                    "ssid": 73,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "framenet and propbank. ",
            "number": "5",
            "sents": [
                {
                    "text": "The PropBank project and the FrameNet project at the International Computer Science Institute (Baker, Fillmore, and Lowe 1998) share the goal of documenting the syntactic realization of arguments of the predicates of the general English lexicon by annotating a corpus with semantic roles.",
                    "sid": 279,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Despite the two projects\u2019 similarities, their methodologies are quite different.",
                    "sid": 280,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FrameNet is focused on semantic frames,8 which are defined as a schematic representation of situations involving various participants, props, and other conceptual roles (Fillmore 1976).",
                    "sid": 281,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The project methodology has proceeded on a frame-by-frame basis, that is, by first choosing a semantic frame (e.g., Commerce), defining the frame and its participants or frame elements (BUYER, GOODS, SELLER, MONEY), listing the various lexical predicates which invoke the frame (buy, sell, etc.), and then finding example sentences of each predicate in a corpus (the British National Corpus was used) and annotating each frame element in each sentence.",
                    "sid": 282,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The example sentences were chosen primarily to ensure coverage of all the syntactic realizations of the frame elements, and simple examples of these realizations were preferred over those involving complex syntactic structure not immediately relevant to the lexical predicate itself.",
                    "sid": 283,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only sentences in which the lexical predicate was used \u2018\u2018in frame\u2019\u2019 were annotated.",
                    "sid": 284,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A word with multiple distinct senses would generally be analyzed as belonging to different frames in each sense but may only be found in the FrameNet corpus in the sense for which a frame has been defined.",
                    "sid": 285,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is interesting to note that the semantic frames are a helpful way of generalizing between predicates; words in the same frame have been found frequently to share the same syntactic argument structure (Gildea and Jurafsky 2002).",
                    "sid": 286,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A more complete description of the FrameNet project can be found in Baker, Fillmore, and Lowe (1998) and Johnson et al.",
                    "sid": 287,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2002), and the ramifications for automatic classification are discussed more thoroughly in Gildea and Jurafsky (2002).",
                    "sid": 288,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast with FrameNet, PropBank is aimed at providing data for training statistical systems and has to provide an annotation for every clause in the Penn Treebank, no matter how complex or unexpected.",
                    "sid": 289,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly to FrameNet, PropBank also attempts to label semantically related verbs consistently, relying primarily on VerbNet classes for determining semantic relatedness.",
                    "sid": 290,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there is much less emphasis on the definition of the semantics of the class that the verbs are associated with, although for the relevant verbs additional semantic information is provided through the mapping to VerbNet.",
                    "sid": 291,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The PropBank semantic roles for a given VerbNet class may not correspond to the semantic elements highlighted by a particular FrameNet frame, as shown by the examples of Table 5.",
                    "sid": 292,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, FrameNet\u2019s COMMERCE frame includes roles for Buyer (the receiver of the goods) and Seller (the receiver of the money) and assigns these roles consistently to two sentences describing the same event: FrameNet annotation: (37) [ Buyer Chuck] bought [ a car] [ Seller from Jerry] [ Payment for $1000].",
                    "sid": 293,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(38) [ Seller Jerry] sold [ Goods a car] [ Buyer to Chuck] [ for $1000].",
                    "sid": 294,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 The authors apologize for the ambiguity between PropBank\u2019s \u2018\u2018syntactic frames\u2019\u2019 and Framenet\u2019s. \u2018\u2018semantic frames.\u2019\u2019 Syntactic frames refer to syntactic realizations.",
                    "sid": 295,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semantic frames will appear herein in boldface.",
                    "sid": 296,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "88 Table 5 Comparison of frames.",
                    "sid": 297,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "PropBank FrameNet buy sell COMMERCE Arg 0: buy er Ar g0: sel ler Bu yer Arg 1: thin g bou ght Ar g1: thi ng sol d Sel ler Arg 2: sell er Ar g2: bu yer Pa ym ent Arg 3: pric e pai d Ar g3: pri ce pai d Go od s Arg 4: ben efac tive Ar g4: be nef act ive Ra te/ Un it PropBank annotation: (39) [ Chuck] bought [ Arg1 a car] [ from Jerry] [ for $1000].",
                    "sid": 298,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(40) [ Jerry] sold [ a car] [ Arg2 to Chuck] [ Arg3 for $1000].",
                    "sid": 299,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "PropBank requires an additional level of inference to determine who has possession of the car in both cases.",
                    "sid": 300,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, FrameNet does not indicate that the subject in both sentences is an Agent, represented in PropBank by labeling both subjects as Arg0.9 Note that the subject is not necessarily an agent, as in, for instance, the passive construction: FrameNet annotation: Goods A car] was bought [ Buyer by Chuck].",
                    "sid": 301,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Goods A car] was sold [ Buyer to Chuck] [ Seller by Jerry].",
                    "sid": 302,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Buyer Chuck] was sold [ Goods Seller by Jerry].",
                    "sid": 303,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "PropBank annotation: (44) [ A car] was bought [ Arg0 by Chuck].",
                    "sid": 304,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(45) [ A car] was sold [ Arg2 to Chuck] [ Arg0 by Jerry].",
                    "sid": 305,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(46) [ Chuck] was sold [ Arg1 a car] [ Arg0 by Jerry].",
                    "sid": 306,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To date, PropBank has addressed only verbs, whereas FrameNet includes nouns and adjectives.10 PropBank annotation also differs in that it takes place with reference to the Penn Treebank trees; not only are annotators shown the trees when analyzing a sentence, they are constrained to assign the semantic labels to portions of the sentence corresponding to nodes in the tree.",
                    "sid": 307,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parse trees are not used in FrameNet; annotators mark the beginning and end points of frame elements in the text and add 9 FrameNet plans ultimately to represent agency is such examples using multiple inheritance of frames.",
                    "sid": 308,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Fillmore and Atkins 1998; Fillmore and Baker 2001).",
                    "sid": 309,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "10 New York University is currently in the process of annotating nominalizations in the Penn Treebank.",
                    "sid": 310,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "using the PropBank frames files and annotation interface, creating a resource to be known as NomBank.",
                    "sid": 311,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "89 a grammatical function tag expressing the frame element\u2019s syntactic relation to the predicate.",
                    "sid": 312,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "a quantitative analysis of the semantic-role labels",
            "number": "6",
            "sents": [
                {
                    "text": "The stated aim of PropBank is the training of statistical systems.",
                    "sid": 313,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also provides a rich resource for a distributional analysis of semantic features of language that have hitherto been somewhat inaccessible.",
                    "sid": 314,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin this section with an overview of general characteristics of the syntactic realization of the different semantic-role labels and then attempt to measure the frequency of syntactic alternations with respect to verb class membership.",
                    "sid": 315,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We base this analysis on previous work by Merlo and Stevenson (2001).",
                    "sid": 316,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following section we discuss the performance of a system trained to automatically assign the semantic-role labels.",
                    "sid": 317,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.1 Associating Role Labels with Specific Syntactic Constructions.",
                    "sid": 318,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin by simply counting the frequency of occurrence of roles in specific syntactic positions.",
                    "sid": 319,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all the statistics given in this section, we do not consider pastor present- participle uses of the predicates, thus excluding any passive-voice sentences.",
                    "sid": 320,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntactic positions used are based on a few heuristic rules: Any NP under an S node in the treebank is considered a syntactic subject, and any NP under a VP is considered an object.",
                    "sid": 321,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all other cases, we use the syntactic category of the argument\u2019s node in the treebank tree: for example, SBAR for sentential complements and PP for prepositional phrases.",
                    "sid": 322,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For prepositional phrases, as well as for noun phrases that are the object of a preposition, we include the preposition as part of our syntactic role: for example, PP-in, PP-with.",
                    "sid": 323,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 6 shows the most frequent semantic roles associated with various syntactic positions, while Table 7 shows the most frequent syntactic positions for various roles.",
                    "sid": 324,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tables 6 and 7 show overall statistics for the corpus, and some caution is needed in interpreting the results, as the semantic-role labels are defined on a per-frameset basis and do not necessarily have corpus-wide definitions.",
                    "sid": 325,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nonetheless, a number of trends are apparent.",
                    "sid": 326,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Arg0, when present, is almost always a syntactic subject, while the subject is Arg0 only 79% of the time.",
                    "sid": 327,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This provides evidence for the notion of a thematic hierarchy in which the highest-ranking role present in a sentence is given the Table 6 Most frequent semantic roles for each syntactic position.",
                    "sid": 328,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Position Total Four most common roles (%) Other roles (%) Sub 37 ,3 64 Ar g0 79.",
                    "sid": 329,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 Ar g1 16.",
                    "sid": 330,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 Ar g2 2.",
                    "sid": 331,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 T M P 1.",
                    "sid": 332,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 0.",
                    "sid": 333,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Obj 21 ,6 10 Ar g1 84.",
                    "sid": 334,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 Ar g2 9.",
                    "sid": 335,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 T M P 4.",
                    "sid": 336,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Ar g3 0.",
                    "sid": 337,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 0.",
                    "sid": 338,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 S 10 ,1 10 Ar g1 76.",
                    "sid": 339,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 A D V 8.",
                    "sid": 340,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Ar g2 7.",
                    "sid": 341,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 PR P 2.",
                    "sid": 342,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 5.",
                    "sid": 343,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 NP 7 , 7 5 5 Ar g2 34.",
                    "sid": 344,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 Ar g1 23.",
                    "sid": 345,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Ar g4 18.",
                    "sid": 346,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 Ar g3 12.",
                    "sid": 347,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 10.",
                    "sid": 348,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 AD VP 5 , 9 2 0 T M P 30.",
                    "sid": 349,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 M N R 22.",
                    "sid": 350,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 DI S 19.",
                    "sid": 351,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 A D V 10.",
                    "sid": 352,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 17.",
                    "sid": 353,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 MD 4 , 1 6 7 M O D 97.",
                    "sid": 354,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Ar g M 2.",
                    "sid": 355,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 Ar g1 0.",
                    "sid": 356,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 M N R 0.",
                    "sid": 357,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 0.",
                    "sid": 358,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0PP in 3 , 1 3 4 LO C 46.",
                    "sid": 359,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 T M P 35.",
                    "sid": 360,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 M N R 4.",
                    "sid": 361,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 DI S 3.",
                    "sid": 362,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 10.",
                    "sid": 363,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 SB AR 2 , 6 7 1 A D V 36.",
                    "sid": 364,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 T M P 30.",
                    "sid": 365,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Ar g1 16.",
                    "sid": 366,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 PR P 7.",
                    "sid": 367,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 9.",
                    "sid": 368,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 RB 1 , 3 2 0 NE G 91.",
                    "sid": 369,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Ar g M 3.",
                    "sid": 370,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 DI S 1.",
                    "sid": 371,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 DI R 1.",
                    "sid": 372,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 2.",
                    "sid": 373,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3PP at 8 2 4 EX T 34.",
                    "sid": 374,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 LO C 27.",
                    "sid": 375,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 T M P 23.",
                    "sid": 376,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 M N R 6.",
                    "sid": 377,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 8.",
                    "sid": 378,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 90 Table 7 Most frequent syntactic positions for each semantic role.",
                    "sid": 379,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Roles Total Four most common syntactic positions (%) Other positions (%) Arg 1 35 ,1 12 Ob j 51.",
                    "sid": 380,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 S 21.",
                    "sid": 381,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 Su bj 17.",
                    "sid": 382,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 NP 5.",
                    "sid": 383,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 3.",
                    "sid": 384,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Arg 0 30 ,4 59 Su bj 96.",
                    "sid": 385,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 NP 2.",
                    "sid": 386,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 S 0.",
                    "sid": 387,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Ob j 0.",
                    "sid": 388,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 0.",
                    "sid": 389,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Arg 2 7, 4 3 3 NP 35.",
                    "sid": 390,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Ob j 28.",
                    "sid": 391,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Su bj 12.",
                    "sid": 392,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 S 10.",
                    "sid": 393,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 13.",
                    "sid": 394,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 TM P 6, 8 4 6 A D VP 26.",
                    "sid": 395,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 PP -in 16.",
                    "sid": 396,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Ob j 14.",
                    "sid": 397,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 SB AR 11.",
                    "sid": 398,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 31.",
                    "sid": 399,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 MO D 4, 1 0 2 M D 98.",
                    "sid": 400,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 A D VP 0.",
                    "sid": 401,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 N N 0.",
                    "sid": 402,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 RB 0.",
                    "sid": 403,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 0.",
                    "sid": 404,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 AD V 3, 1 3 7 SB AR 30.",
                    "sid": 405,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 S 27.",
                    "sid": 406,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 A D VP 19.",
                    "sid": 407,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 PP -in 3.",
                    "sid": 408,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 19.",
                    "sid": 409,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 LO C 2, 4 6 9 PP -in 59.",
                    "sid": 410,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 PP -on 10.",
                    "sid": 411,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 PP -at 9.",
                    "sid": 412,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 A D VP 6.",
                    "sid": 413,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 15.",
                    "sid": 414,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 MN R 2, 4 2 9 A D VP 54.",
                    "sid": 415,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 PP -by 9.",
                    "sid": 416,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 PP wit h 7.",
                    "sid": 417,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 PP -in 5.",
                    "sid": 418,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 22.",
                    "sid": 419,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Arg 3 1, 7 6 2 NP 56.",
                    "sid": 420,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Ob j 9.",
                    "sid": 421,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Su bj 8.",
                    "sid": 422,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 A DJ P 7.",
                    "sid": 423,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 16.",
                    "sid": 424,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 DIS 1, 6 8 9 A D VP 69.",
                    "sid": 425,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 CC 10.",
                    "sid": 426,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 PP -in 6.",
                    "sid": 427,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 PP for 5.",
                    "sid": 428,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 8.",
                    "sid": 429,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 honor of subjecthood.",
                    "sid": 430,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Going from syntactic position to semantic role, the numbered arguments are more predictable than the non-predicate-specific adjunct roles.",
                    "sid": 431,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The two exceptions are the roles of \u2018\u2018modal\u2019\u2019 (MOD) and \u2018\u2018negative\u2019\u2019 (NEG), which as previously discussed are not syntactic adjuncts at all but were simply marked as ArgMs as the best means of tracking their important semantic contributions.",
                    "sid": 432,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are almost always realized as auxiliary verbs and the single adverb (part-of-speech tag RB) not, respectively.",
                    "sid": 433,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2 Associating Verb Classes with Specific Syntactic Constructions.",
                    "sid": 434,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Turning to the behavior of individual verbs in the PropBank data, it is interesting to see how much correspondence there is between verb classes proposed in the literature Table 8 Semantic roles of verbs\u2019 subjects, for the verb classes of Merlo and Stevenson (2001).",
                    "sid": 435,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb Count Relative frequency of semantic role Arg 0 Ar g1 Ar g2 Ar gA T M P Uner gativ e floa t 14 35.",
                    "sid": 436,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 6 4.",
                    "sid": 437,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 hur ry 2 10 0.0 jum p 125 9 7.",
                    "sid": 438,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 2.",
                    "sid": 439,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 leap 11 9 0.",
                    "sid": 440,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 9.",
                    "sid": 441,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 mar ch 8 87.",
                    "sid": 442,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 1 2.",
                    "sid": 443,
                    "ssid": 131,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 race 4 75.",
                    "sid": 444,
                    "ssid": 132,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 25.",
                    "sid": 445,
                    "ssid": 133,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 rus h 31 6.",
                    "sid": 446,
                    "ssid": 134,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 9 0.",
                    "sid": 447,
                    "ssid": 135,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 3.",
                    "sid": 448,
                    "ssid": 136,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 vau lt 1 100.",
                    "sid": 449,
                    "ssid": 137,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 wa nde r 3 100.",
                    "sid": 450,
                    "ssid": 138,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 glid e 1 100.",
                    "sid": 451,
                    "ssid": 139,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 hop 34 97.",
                    "sid": 452,
                    "ssid": 140,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 2.",
                    "sid": 453,
                    "ssid": 141,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 jog 1 100.",
                    "sid": 454,
                    "ssid": 142,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 sco ot 1 10 0.0 scur ry 2 100.",
                    "sid": 455,
                    "ssid": 143,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 skip 5 100.",
                    "sid": 456,
                    "ssid": 144,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 tipt oe 2 100.",
                    "sid": 457,
                    "ssid": 145,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 91 Table 8 (cont.)",
                    "sid": 458,
                    "ssid": 146,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb Count Relative frequency of semantic role Arg 0 Ar g1 Ar g2 Ar gA T M P Una ccu sati ve boil 1 10 0.0 diss olv e 4 75.",
                    "sid": 459,
                    "ssid": 147,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 2 5.",
                    "sid": 460,
                    "ssid": 148,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 exp lod e 7 10 0.0 floo d 5 80.",
                    "sid": 461,
                    "ssid": 149,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 20 .0 frac ture 1 100.",
                    "sid": 462,
                    "ssid": 150,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 mel t 4 25.",
                    "sid": 463,
                    "ssid": 151,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 5 0.",
                    "sid": 464,
                    "ssid": 152,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 25.",
                    "sid": 465,
                    "ssid": 153,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 ope n 80 72.",
                    "sid": 466,
                    "ssid": 154,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 2 1.",
                    "sid": 467,
                    "ssid": 155,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 2 . 5 3.",
                    "sid": 468,
                    "ssid": 156,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 soli dify 6 83.",
                    "sid": 469,
                    "ssid": 157,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 1 6.",
                    "sid": 470,
                    "ssid": 158,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 coll aps e 36 9 4.",
                    "sid": 471,
                    "ssid": 159,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 5.",
                    "sid": 472,
                    "ssid": 160,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 cool 9 66.",
                    "sid": 473,
                    "ssid": 161,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 3 3.",
                    "sid": 474,
                    "ssid": 162,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 wid en 29 27.",
                    "sid": 475,
                    "ssid": 163,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 7 2.",
                    "sid": 476,
                    "ssid": 164,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 cha nge 14 8 65.",
                    "sid": 477,
                    "ssid": 165,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 3 3.",
                    "sid": 478,
                    "ssid": 166,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 0.",
                    "sid": 479,
                    "ssid": 167,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 clea r 14 78.",
                    "sid": 480,
                    "ssid": 168,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 2 1.",
                    "sid": 481,
                    "ssid": 169,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 divi de 1 100.",
                    "sid": 482,
                    "ssid": 170,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 sim mer 5 10 0.0 stab ilize 33 45.",
                    "sid": 483,
                    "ssid": 171,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 5 4.",
                    "sid": 484,
                    "ssid": 172,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Object Dro p dan ce 2 100.",
                    "sid": 485,
                    "ssid": 173,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 kick 5 80.",
                    "sid": 486,
                    "ssid": 174,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 2 0.",
                    "sid": 487,
                    "ssid": 175,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 knit 1 100.",
                    "sid": 488,
                    "ssid": 176,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 pai nt 4 100.",
                    "sid": 489,
                    "ssid": 177,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 pla y 67 91.",
                    "sid": 490,
                    "ssid": 178,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 9 . 0 rea p 10 100.",
                    "sid": 491,
                    "ssid": 179,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 was h 4 100.",
                    "sid": 492,
                    "ssid": 180,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 yell 5 100.",
                    "sid": 493,
                    "ssid": 181,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 borr ow 36 100.",
                    "sid": 494,
                    "ssid": 182,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 inh erit 6 100.",
                    "sid": 495,
                    "ssid": 183,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 org aniz e 11 100.",
                    "sid": 496,
                    "ssid": 184,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 sket ch 1 100.",
                    "sid": 497,
                    "ssid": 185,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 clea n 4 100.",
                    "sid": 498,
                    "ssid": 186,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 pac k 7 100.",
                    "sid": 499,
                    "ssid": 187,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 stu dy 40 100.",
                    "sid": 500,
                    "ssid": 188,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 swa llo w 5 80.",
                    "sid": 501,
                    "ssid": 189,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 2 0.",
                    "sid": 502,
                    "ssid": 190,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 call 19 9 97.",
                    "sid": 503,
                    "ssid": 191,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 1 . 5 1 . 0 0.",
                    "sid": 504,
                    "ssid": 192,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 and the annotations in the corpus.",
                    "sid": 505,
                    "ssid": 193,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 8 shows the PropBank semantic role labels for the subjects of each verb in each class.",
                    "sid": 506,
                    "ssid": 194,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Merlo and Stevenson (2001) aim to automatically classify verbs into one of three categories: unergative, unaccusative, and object-drop.",
                    "sid": 507,
                    "ssid": 195,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These three categories, more coarse-grained than the classes of Levin or VerbNet, are defined by the semantic roles they assign to a verb\u2019s subjects and objects in both transitive and intransitive sentences, as illustrated by the following examples: Unergative: [ Causal Agent The jockey] raced [ the horse] past the barn.",
                    "sid": 508,
                    "ssid": 196,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agent The horse] raced past the barn.",
                    "sid": 509,
                    "ssid": 197,
                    "kind_of_tag": "s"
                },
                {
                    "text": "92 Unaccusative: [ Causal Agent The cook] melted [ Theme the butter] in the pan.",
                    "sid": 510,
                    "ssid": 198,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Theme The butter] melted in the pan.",
                    "sid": 511,
                    "ssid": 199,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Object-Drop: [ Agent The boy] played [ soccer].",
                    "sid": 512,
                    "ssid": 200,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agent The boy] played.",
                    "sid": 513,
                    "ssid": 201,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2.1 Predictions.",
                    "sid": 514,
                    "ssid": 202,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our data, the closest analogs to Merlo and Stevenson\u2019s three roles of Causal Agent, Agent, and Theme are ArgA, Arg0, and Arg1, respectively.",
                    "sid": 515,
                    "ssid": 203,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hypothesize that PropBank data will confirm 1.",
                    "sid": 516,
                    "ssid": 204,
                    "kind_of_tag": "s"
                },
                {
                    "text": "that the subject can take one of two roles (Arg0 or Arg1) for unaccusative and unergative verbs but only one role (Arg0) for object-drop verbs; 2.",
                    "sid": 517,
                    "ssid": 205,
                    "kind_of_tag": "s"
                },
                {
                    "text": "that Arg1s appear more frequently as subjects for intransitive unaccusatives than they do for intransitive unergatives.",
                    "sid": 518,
                    "ssid": 206,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Table 8 we show counts for the semantic roles of the subjects of the Merlo and Stevenson verbs which appear in PropBank (80%), regardless of transitivity, in order to measure whether the data in fact reflect the alternations between syntactic and semantic roles that the verb classes predict.",
                    "sid": 519,
                    "ssid": 207,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each verb, we show counts only for occurrences tagged as belonging to the first frameset, reflecting the predominant or unmarked sense.",
                    "sid": 520,
                    "ssid": 208,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2.2 Results of Prediction 1.",
                    "sid": 521,
                    "ssid": 209,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The object-drop verbs of Merlo and Stevenson do in fact show little variability in our corpus, with the subject almost always being Arg0.",
                    "sid": 522,
                    "ssid": 210,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The unergative and unaccusative verbs show much more variability in the roles that can appear in the subject position, as predicted, although some individual verbs always have Arg0 as subject, presumably as a result of the small number of occurrences.",
                    "sid": 523,
                    "ssid": 211,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2.3 Results of Prediction 2.",
                    "sid": 524,
                    "ssid": 212,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As predicted, there is in general a greater preponderance of Arg1 subjects for unaccusatives than for unergatives, with the striking exception of a few unergative verbs, such as jump and rush, whose subjects are almost always Arg1.",
                    "sid": 525,
                    "ssid": 213,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Jump is being affected by the predominance of a financial-subcorpus sense used for stock reportage (79 out of 82 sentences), which takes jump as rise dramatically: Jaguar shares jumped 23 before easing to close at 654, up 6.",
                    "sid": 526,
                    "ssid": 214,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_1957) Rush is being affected by a framing decision, currently being reconsidered, wherein rush was taken to mean cause to move quickly.",
                    "sid": 527,
                    "ssid": 215,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus the entity in motion is tagged Arg1, as in Congress in Congress would have rushed to pass a private relief bill.",
                    "sid": 528,
                    "ssid": 216,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_0946) The distinction between unergatives and unaccusatives is not apparent from the PropBank data in this table, since we are not distinguishing between transitives and intransitives, which is left for future experiments.",
                    "sid": 529,
                    "ssid": 217,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In most cases, the first frameset (numbered 1 in the PropBank frames files) is the most common, but in a few cases this is not the case because of the domain of the text.",
                    "sid": 530,
                    "ssid": 218,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the second frameset for kick, corresponding to the phrasal usage kick in, meaning begin, accounted for seven instances versus the five instances for frameset 1.",
                    "sid": 531,
                    "ssid": 219,
                    "kind_of_tag": "s"
                },
                {
                    "text": "93 The phrasal frameset has a very different pattern, with the subject always corresponding to Arg1, as in (47) [ Arg1 Several of those post-crash changes] kicked in [ during Friday\u2019s one-hour collapse] and worked as expected, even though they didn\u2019t prevent a stunning plunge.",
                    "sid": 532,
                    "ssid": 220,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_2417) Statistics for all framesets of kick are shown in Table 9; the first row in Table 9 corresponds to the entry for kick in the \u2018\u2018Object-Drop\u2019\u2019 section of Table 8.",
                    "sid": 533,
                    "ssid": 221,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, these results support our hypotheses and also highlight the important role played by even the relatively coarse-grained sense tagging exemplified by the framesets.",
                    "sid": 534,
                    "ssid": 222,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "automatic determination of semantic-role labels. ",
            "number": "7",
            "sents": [
                {
                    "text": "The stated goal of the PropBank is to provide training data for supervised automatic role labelers, and the project description cannot be considered complete without a discussion of PropBank\u2019s suitability for this purpose.",
                    "sid": 535,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of PropBank\u2019s important features as a practical resource is that the sentences chosen for annotation are from the same Wall Street Journal corpus used for the original Penn Treebank project, and thus hand-checked syntactic parse trees are available for the entire data set.",
                    "sid": 536,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section, we examine the importance of syntactic information for semantic-role labeling by comparing the performance of a system based on gold-standard parses with one using automatically generated parser output.",
                    "sid": 537,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then examine whether it is possible that the additional information contained in a full parse tree is negated by the errors present in automatic parser output, by testing a role-labeling system based on a flat or \u2018\u2018chunked\u2019\u2019 representation of the input.",
                    "sid": 538,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gildea and Jurafsky (2002) describe a statistical system trained on the data from the FrameNet project to automatically assign semantic roles.",
                    "sid": 539,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system first passed sentences through an automatic parser (Collins 1999), extracted syntactic features from the parses, and estimated probabilities for semantic roles from the syntactic and lexical features.",
                    "sid": 540,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both training and test sentences were automatically parsed, as no hand- annotated parse trees were available for the corpus.",
                    "sid": 541,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the errors introduced by the parser no doubt negatively affected the results obtained, there was no direct way of quantifying this effect.",
                    "sid": 542,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the systems evaluated for the Message Understanding Conference task (Miller et al. 1998) made use of an integrated syntactic and semantic model producing a full parse tree and achieved results comparable to other systems that did not make use of a complete parse.",
                    "sid": 543,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in the FrameNet case, the parser was not Table 9 Semantic roles for different frame sets of kick.",
                    "sid": 544,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Frame set Count Relative frequency of semantic role Arg0 Arg1 Arg2 ArgA TMP Une rgat ive kick .01: driv e or imp el with the foot 5 8 0 . 0 2 0.",
                    "sid": 545,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 kick .02: kick in, beg in 7 10 0.0 kick .04: kick off, begi n, ina ugu rate 3 1 0 0 . 0 94 Figure 2 In this example, the path from the predicate ate to the argument NP He can be represented as VBjVPjS,NP, with j indicating upward movement in the parse tree and , downward movement.",
                    "sid": 546,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "trained on the corpus for which semantic annotations were available, and the effect of better, or even perfect, parses could not be measured.",
                    "sid": 547,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our first set of experiments, the features and probability model of the Gildea and Jurafsky (2002) system were applied to the PropBank corpus.",
                    "sid": 548,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The existence of the hand-annotated treebank parses for the corpus allowed us to measure the improvement in performance offered by gold-standard parses.",
                    "sid": 549,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.1 System Description.",
                    "sid": 550,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Probabilities of a parse constituent belonging to a given semantic role are calculated from the following features: The phrase type feature indicates the syntactic type of the phrase expressing the semantic roles: Examples include noun phrase (NP), verb phrase (VP), and clause (S).",
                    "sid": 551,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parse tree path feature is designed to capture the syntactic relation of a constituent to the predicate.11 It is defined as the path from the predicate through the parse tree to the constituent in question, represented as a string of parse tree nonterminals linked by symbols indicating upward or downward movement through the tree, as shown in Figure 2.",
                    "sid": 552,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although the path is composed as a string of symbols, our systems treat the string as an atomic value.",
                    "sid": 553,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The path includes, as the first element of the string, the part of speech of the predicate, and as the last element, the phrase type or syntactic category of the sentence constituent marked as an argument.",
                    "sid": 554,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The position feature simply indicates whether the constituent to be labeled occurs before or after the predicate.",
                    "sid": 555,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature is highly correlated with grammatical function, since subjects will generally appear before a verb and objects after.",
                    "sid": 556,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature may overcome the shortcomings of reading grammatical function from the parse tree, as well as errors in the parser output.",
                    "sid": 557,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The voice feature distinguishes between active and passive verbs and is important in predicting semantic roles, because direct objects of active verbs correspond to subjects of passive verbs.",
                    "sid": 558,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An instance of a verb is considered passive if it is tagged as a past participle (e.g., taken), unless it occurs as a descendent verb phrase headed by any form of have (e.g., has taken) without an intervening verb phrase headed by any form of be (e.g., has been taken).",
                    "sid": 559,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "11 While the treebank has a \u2018\u2018subject\u2019\u2019 marker on noun phrases, this is the only such grammatical function.",
                    "sid": 560,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tag.",
                    "sid": 561,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The treebank does not explicitly represent which verb\u2019s subject the node is, and the subject tag is not typically present in automatic parser output.",
                    "sid": 562,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "95 The headword is a lexical feature and provides information about the semantic type of the role filler.",
                    "sid": 563,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Headwords of nodes in the parse tree are determined using the same deterministic set of headword rules used by Collins (1999).",
                    "sid": 564,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system attempts to predict argument roles in new data, looking for the highest-probability assignment of roles ri to all constituents i in the sentence, given the set of features Fi \u00bc fpti, pathi, posi, vi , hig at each constituent in the parse tree, and the predicate p: argmaxr1 : : : n P\u00f0r1 : : : n jF1 : : : n , p\u00de We break the probability estimation into two parts, the first being the probability P\u00f0ri j Fi , p\u00de of a constituent\u2019s role given our five features for the constituent and the predicate p. Because of the sparsity of the data, it is not possible to estimate this probability from the counts in the training data.",
                    "sid": 565,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, probabilities are estimated from various subsets of the features and interpolated as a linear combination of the resulting distributions.",
                    "sid": 566,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The interpolation is performed over the most specific distributions for which data are available, which can be thought of as choosing the topmost distributions available from a back-off lattice, shown in Figure 3.",
                    "sid": 567,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, the probabilities P\u00f0ri j Fi , p\u00de are combined with the probabilities P\u00f0fr1 : : : n gj p\u00de for a set of roles appearing in a sentence given a predicate, using the following formula: P\u00f0ri j Fi , p\u00de P\u00f0r1 : : : n j F1 : : : n , p\u00de , P\u00f0fr1 : : : n gj p\u00deY i P\u00f0ri j p\u00de This approach, described in more detail in Gildea and Jurafsky (2002), allows interaction among the role assignments for individual constituents while making certain independence assumptions necessary for efficient probability estimation.",
                    "sid": 568,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, we assume that sets of roles appear independent of their linear order and that the features F of a constituent are independent of other constituents\u2019 features given the constituent\u2019s role.",
                    "sid": 569,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.1.1 Results.",
                    "sid": 570,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We applied the same system, using the same features, to a preliminary release of the PropBank data.",
                    "sid": 571,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The data set used contained annotations for 72,109 predicate-argument structures containing 190,815 individual arguments and examples Figure 3 Back-off lattice with more specific distributions towards the top.",
                    "sid": 572,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "96 from 2,462 lexical predicates (types).",
                    "sid": 573,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to provide results comparable with the statistical parsing literature, annotations from section 23 of the treebank were used as the test set; all other sections were included in the training set.",
                    "sid": 574,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The preliminary version of the data used in these experiments was not tagged for WordNet word sense or PropBank frameset.",
                    "sid": 575,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, the system neither predicts the frameset nor uses it as a feature.",
                    "sid": 576,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system was tested under two conditions, one in which it is given the constituents which are arguments to the predicate and merely has to predict the correct role, and one in which it has to both find the arguments in the sentence and label them correctly.",
                    "sid": 577,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results are shown in Tables 10 and 11.",
                    "sid": 578,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results for FrameNet are based on a test set of 8,167 individual labels from 4,000 predicate-argument structures.",
                    "sid": 579,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a guideline for interpreting these results, with 8,167 observations, the threshold for statistical significance with p < .05 is a 1.0% absolute difference in performance (Gildea and Jurafsky 2002).",
                    "sid": 580,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the PropBank data, with a test set of 8,625 individual labels, the threshold for significance is similar.",
                    "sid": 581,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are 7,574 labels for which the predicate has been seen 10 or more times in training (third column of the tables).",
                    "sid": 582,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results for PropBank are similar to those for FrameNet, despite the smaller number of training examples for many of the predicates.",
                    "sid": 583,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The FrameNet data contained at least 10 examples from each predicate, while 12% of the PropBank data had fewer than 10 training examples.",
                    "sid": 584,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Removing these examples from the test set gives 82.8% accuracy with gold-standard parses and 80.9% accuracy with automatic parses.",
                    "sid": 585,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.1.2 Adding Traces.",
                    "sid": 586,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The gold-standard parses of the Penn Treebank include several types of information not typically produced by statistical parsers or included in their evaluation.",
                    "sid": 587,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of particular importance are traces, empty syntactic categories which generally occupy the syntactic position in which another constituent could be interpreted and include a link to the relevant constituent.",
                    "sid": 588,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traces are used to indicate cases of wh-extraction, antecedents of relative clauses, and control verbs exhibiting the syntactic phenomena of raising and \u2018\u2018equi.\u2019\u2019 Traces are intended to provide hints as to the semantics of individual clauses, and the results in Table 11 show that they do so effectively.",
                    "sid": 589,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When annotating syntactic trees, the PropBank annotators marked the traces along with their antecedents as arguments of the relevant verbs.",
                    "sid": 590,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In line 2 of Table 11, along with all our experiments with automatic parser output, traces were ignored, and the semantic-role label was assigned to the antecedent in both training and test data.",
                    "sid": 591,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In line 3 of Table 11, we assume that the system is given trace information, and in cases of trace chains, the semantic-role label is assigned to the trace in training and test conditions.",
                    "sid": 592,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Trace information boosts the performance of the system by roughly 5%.",
                    "sid": 593,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This indicates that systems capable of recovering traces (Johnson 2002; Dienes and Dubey 2003) could improve semantic-role labeling.",
                    "sid": 594,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 10 Accuracy of semantic-role prediction (in percentages) for known boundaries (the system is given the constituents to classify).",
                    "sid": 595,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acc urac y Fra me Net Pr op Ba nk Pr op Ba nk > 10 ex am ple s Aut om atic pars es 82.0 79.",
                    "sid": 596,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 80.",
                    "sid": 597,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 Gold stan dar d pars es 82.",
                    "sid": 598,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 82.",
                    "sid": 599,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 97 Table 11 Accuracy of semantic-role prediction (in percentages) for unknown boundaries (the system must identify the correct constituents as arguments and give them the correct roles).",
                    "sid": 600,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FrameNet PropBank PropBank > 10 examples Pre cisi on Re cal l Pre cis ion Re cal l Pre cis ion Re cal l Aut om atic pars es 64.6 61.",
                    "sid": 601,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 68.",
                    "sid": 602,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 57.",
                    "sid": 603,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 69.",
                    "sid": 604,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 61.",
                    "sid": 605,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 Gold stan dar d pars es 74.",
                    "sid": 606,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 66.",
                    "sid": 607,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 76.",
                    "sid": 608,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 69.",
                    "sid": 609,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 Gold stan dar d with trac es 80.",
                    "sid": 610,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 71.",
                    "sid": 611,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 82.",
                    "sid": 612,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 74.",
                    "sid": 613,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 As our path feature is a somewhat unusual way of looking at parse trees, its behavior in the system warrants a closer look.",
                    "sid": 614,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The path feature is most useful as a way of finding arguments in the unknown boundary condition.",
                    "sid": 615,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Removing the path feature from the known-boundary system results in only a small degradation in performance, from 82.0% to 80.1%.",
                    "sid": 616,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason for the relatively small impact may be sparseness of the feature: 7% of paths in the test set are unseen in training data.",
                    "sid": 617,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most common values of the feature are shown in Table 12, in which the first two rows correspond to standard subject and object positions.",
                    "sid": 618,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason for sparsity is seen in the third row: In the treebank, the adjunction of an adverbial phrase or modal verb can cause an additional VP node to appear in our path feature.",
                    "sid": 619,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We tried two variations of the path feature to address this problem.",
                    "sid": 620,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first collapses sequences of nodes with the same label, for example, combining rows 2 and 3 of Table 12.",
                    "sid": 621,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second variation uses only two values for the feature: NP under S (subject position) and NP under VP (object position).",
                    "sid": 622,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Neither variation improved performance in the known-boundary condition.",
                    "sid": 623,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a gauge of how closely the PropBank semantic-role labels correspond to the path feature overall, we note that by always assigning the most common role for each path (for example, always assigning Arg0 to the subject position), and using no other features, we obtain the correct role 64.0% of the time, versus 82.0% for the complete system.",
                    "sid": 624,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Conditioning on the path and predicate, which allows the subject of different verbs to receive different labels but does not allow for alternation behavior within a verb\u2019s argument structure, yields an accuracy rate of 76.6%.",
                    "sid": 625,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 13 shows the performance of the system broken down by the argument types in the gold standard.",
                    "sid": 626,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results are shown for the unknown-boundaries condition, using gold-standard parses and traces (last row, middle two columns of Table 11).",
                    "sid": 627,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Table 12 Common values (in percentages) for parse tree path in PropBank data, using gold-standard parses.",
                    "sid": 628,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pat h Fre qu en cy VBj VP, NP 17.",
                    "sid": 629,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 VBj VPj S,N P 16.",
                    "sid": 630,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 VBj VPj VPj S,N P 7.",
                    "sid": 631,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 VBj VP, PP 7.",
                    "sid": 632,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 VBj VP, PP, NP 7.",
                    "sid": 633,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 VBj VP, SB AR, S 4.",
                    "sid": 634,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 VBj VP, S 4.",
                    "sid": 635,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 VBj VP, AD VP 2.",
                    "sid": 636,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Oth ers (n = 1,03 1) 76.",
                    "sid": 637,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 98 Table 13 Accuracy of semantic-role prediction for unknown boundaries (the system must identify the correct constituents as arguments and give them the correct roles).",
                    "sid": 638,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Role Number Precision Labeled recall Unlabeled recall Arg 0 1,1 97 9 4 . 2 % 8 8 . 9 % 9 2 . 2 % Arg 1 1,4 36 9 5 . 4 8 2 . 5 8 8 . 9 Arg 2 2 2 9 7 9 . 0 6 4 . 2 7 7 . 7 Arg 3 6 1 7 1 . 4 4 9 . 2 5 4 . 1 Arg 4 3 1 9 1 . 7 7 1 . 0 8 3 . 9 Arg M 1 2 7 5 9 . 6 2 6 . 8 5 2 . 0 ArgM AD V 8 5 5 9 . 1 3 0 . 6 5 5 . 3 ArgM DIR 4 9 7 6 . 7 4 6 . 9 6 1 . 2 ArgM DIS 6 5 4 0 . 0 1 8 . 5 5 5 . 4 ArgM EX T 1 8 8 1 . 2 7 2 . 2 7 7 . 8 ArgM LO C 9 5 6 0 . 7 3 8 . 9 6 2 . 1 ArgM MN R 8 0 6 2 . 7 4 0 . 0 6 3 . 8 ArgM MO D 9 5 7 7 . 6 4 0 . 0 4 3 . 2 ArgM NE G 4 0 6 3 . 6 1 7 . 5 4 0 . 0 ArgM PR D 3 0 . 0 0 . 0 3 3 . 3 ArgM PRP 5 4 7 0 . 0 2 5 . 9 3 7 . 0 ArgM TM P 3 2 5 7 2 . 4 4 5 . 2 6 4 . 6 \u2018\u2018Labeled Recall\u2019\u2019 column shows how often the semantic-role label is correctly identified, while the \u2018\u2018Unlabeled recall\u2019\u2019 column shows how often a constituent with the given role is correctly identified as being a semantic role, even if it is labeled with the wrong role.",
                    "sid": 639,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The more central, numbered roles are consistently easier to identify than the adjunct-like ArgM roles, even when the ArgM roles have preexisting Treebank function tags.",
                    "sid": 640,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.2 The Relation of Syntactic Parsing and Semantic-Role Labeling.",
                    "sid": 641,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many recent information extraction systems for limited domains have relied on finite- state systems that do not build a full parse tree for the sentence being analyzed.",
                    "sid": 642,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among such systems, Hobbs et al.",
                    "sid": 643,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(1997) built finite-state recognizers for various entities, which were then cascaded to form recognizers for higher-level relations, while Ray and Craven (2001) used low-level \u2018\u2018chunks\u2019\u2019 from a general-purpose syntactic analyzer as observations in a trained hidden Markov model.",
                    "sid": 644,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such an approach has a large advantage in speed, as the extensive search of modern statistical parsers is avoided.",
                    "sid": 645,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also possible that this approach may be more robust to error than parsers.",
                    "sid": 646,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experiments working with a flat, \u2018\u2018chunked\u2019\u2019 representation of the input sentence, described in more detail in Gildea and Palmer (2002), test this finite-state hypothesis.",
                    "sid": 647,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the chunked representation, base-level constituent boundaries and labels are present, but there are no dependencies between constituents, as shown by the following sample sentence: (48) [ Big investment banks] [ refused to step] [ ADVP up] [ to] the plate] [ to support] [ the beleaguered floor traders] [ by] buying] [ bigblocks] [ of] [ stock], [ traders] [ say].",
                    "sid": 648,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(wsj_2300) Our chunks were derived from the treebank trees using the conversion described by Tjong Kim Sang and Buchholz (2000).",
                    "sid": 649,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, the experiments were carried out using 99 gold-standard rather than automatically derived chunk boundaries, which we believe will provide an upper bound on the performance of a chunk-based system.",
                    "sid": 650,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Distance in chunks from the predicate was used in place of the parser-based path feature.",
                    "sid": 651,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results in Table 14 show that full parse trees are much more effective than the chunked representation for labeling semantic roles.",
                    "sid": 652,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is the case even if we relax the scoring criteria to count as correct all cases in which the system correctly identifies the first chunk belonging to an argument (last row of Table 14).",
                    "sid": 653,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As an example for comparing the behavior of the tree-based and chunk-based systems, consider the following sentence, with human annotations showing the arguments of the predicate support: (49) [ Arg0 Big investmen t banks] refused to step up to the plate to support Arg1 the beleaguered floor traders] [ MNR by buying big blocks of stock], traders say.",
                    "sid": 654,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our system based on automatic parser output assigned the following analysis: (50) Big investment banks refused to step up to the plate to support Arg1 the beleaguered floor traders] [ MNR by buying big blocks of stock], traders say.",
                    "sid": 655,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, the system failed to find the predicate\u2019s Arg0 relation, because it is syntactically distant from the verb support.",
                    "sid": 656,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The original treebank syntactic tree contains a trace which would allow one to recover this relation, coindexing the empty subject position of support with the noun phrase Big investment banks.",
                    "sid": 657,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, our automatic parser output does not include such traces.",
                    "sid": 658,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system based on gold-standard trees and incorporating trace information produced exactly the correct labels: (51) [ Arg0 Big investmen t banks] refused to step up to the plate to support Arg1 the beleaguered floor traders] [ MNR by buying big blocks of stock], traders say.",
                    "sid": 659,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system based on (gold-standard) chunks assigned the following semantic-role labels: (52) Big investment banks refused to step up to [ Arg0 the plate] to support Arg1 the beleaguered floor traders] by buying big blocks of stock, traders say.",
                    "sid": 660,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, as before, the true Arg0 relation is not found, and it would be difficult to imagine identifying it without building a complete syntactic parse of the sentence.",
                    "sid": 661,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But now, Table 14 Summary of results for unknown-boundary condition.",
                    "sid": 662,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pre cis ion Re cal l Gol d pars e 74.",
                    "sid": 663,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3% 66.",
                    "sid": 664,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4% Aut o pars e 68.",
                    "sid": 665,
                    "ssid": 131,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 57.",
                    "sid": 666,
                    "ssid": 132,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 Chu nk 27.",
                    "sid": 667,
                    "ssid": 133,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 22.",
                    "sid": 668,
                    "ssid": 134,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 Chu nk, rela xed scor ing 49.",
                    "sid": 669,
                    "ssid": 135,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 35.",
                    "sid": 670,
                    "ssid": 136,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 100 unlike in the tree-based output, the Arg0 label is mistakenly attached to a noun phrase immediately before the predicate.",
                    "sid": 671,
                    "ssid": 137,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Arg1 relation in direct-object position is fairly easily identifiable in the chunked representation as a noun phrase directly following the verb.",
                    "sid": 672,
                    "ssid": 138,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The prepositional phrase expressing the Manner relation, however, is not identified by the chunk-based system.",
                    "sid": 673,
                    "ssid": 139,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tree-based system\u2019s path feature for this constituent is VBjVP,PP, which identifies the prepositional phrase as attaching to the verb and increases its probability of being assigned an argument label.",
                    "sid": 674,
                    "ssid": 140,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The chunk- based system sees this as a prepositional phrase appearing as the second chunk after the predicate.",
                    "sid": 675,
                    "ssid": 141,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this may be a typical position for the Manner relation, the fact that the preposition attaches to the predicate rather than to its direct object is not represented.",
                    "sid": 676,
                    "ssid": 142,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Participants in the 2004 CoNLL semantic-labeling shared task (Carreras and Ma` rquez 2004) have reported higher results for chunk-based systems, but to date chunk-based systems have not closed the gap with the state-of-the-art results based on parser output.",
                    "sid": 677,
                    "ssid": 143,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.2.1 Parsing and Models of Syntax.",
                    "sid": 678,
                    "ssid": 144,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While treebank parsers such as that of Collins (1999) return much richer representations than a chunker, they do not include a great deal of the information present in the original Penn Treebank.",
                    "sid": 679,
                    "ssid": 145,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, long- distance dependencies indicated by traces in the treebank are crucial for semantic interpretation but do not affect the constituent recall and precision metrics most often used to evaluate parsers and are not included in the output of the standard parsers.",
                    "sid": 680,
                    "ssid": 146,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gildea and Hockenmaier (2003) present a system for labeling PropBank\u2019s semantic roles based on a statistical parser for combinatory categorial grammar (CCG) (Steedman 2000).",
                    "sid": 681,
                    "ssid": 147,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser, described in detail in Hockenmaier and Steedman (2002), is trained on a version of the Penn Treebank automatically converted to CCG representations.",
                    "sid": 682,
                    "ssid": 148,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The conversion process uses the treebank\u2019s trace information to make underlying syntactic relations explicit.",
                    "sid": 683,
                    "ssid": 149,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the same CCG-level relation appears between a verb and its direct object whether the verb is used in a simple transitive clause, a relative clause, or a question with wh-extraction.",
                    "sid": 684,
                    "ssid": 150,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the CCG- based parser, Gildea and Hockenmaier (2003) find a 2% absolute improvement over the Collins parser in identifying core or numbered PropBank arguments.",
                    "sid": 685,
                    "ssid": 151,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This points to the shortcomings of evaluating parsers purely on constituent precision and recall; we feel that a dependency-based evaluation (e.g., Carroll, Briscoe, and Sanfilippo 1998) is more relevant to real-world applications.",
                    "sid": 686,
                    "ssid": 152,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "8",
            "sents": [
                {
                    "text": "The Proposition Bank takes the comprehensive corpus annotation of the Penn Treebank one step closer to a detailed semantic representation by adding semantic-role labels.",
                    "sid": 687,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On analyzing the data, the relationships between syntax and semantic structures are more complex than one might at first expect.",
                    "sid": 688,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alternations in the realization of semantic arguments of the type described by Levin (1993) turn out to be common in practice as well as in theory, even in the limited genre of Wall Street Journal articles.",
                    "sid": 689,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even so, by using detailed guidelines for the annotation of each individual verb, rapid consistent annotation has been achieved, and the corpus is available through the Linguistic Data Consortium.",
                    "sid": 690,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For information on obtaining the frames file, please consult http://www.cis.upenn.edu/\u02dcace/.",
                    "sid": 691,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "101 The broad-coverage annotation has proven to be suitable for training automatic taggers, and in addition to ourselves there is a growing body of researchers engaged in this task.",
                    "sid": 692,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chen and Rambow (2003) make use of extracted tree-adjoining grammars.",
                    "sid": 693,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most recently, the Gildea and Palmer (2002) scores presented here have been improved markedly through the use of support-vector machines as well as additional features for named entity tags, headword POS tags, and verb clusters for back-off (Pradhan et al. 2003) and using maximum-entropy classifiers (He and Gildea 2004, Xue and Palmer 2004).",
                    "sid": 694,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This group also used Charniak\u2019s parser instead of Collins\u2019s and tested the system on TDT data.",
                    "sid": 695,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance on a new genre is lower, as would be expected.",
                    "sid": 696,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Despite the complex relationship between syntactic and semantic structures, we find that statistical parsers, although computationally expensive, do a good job of providing information relevant for this level of semantic interpretation.",
                    "sid": 697,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition to the constituent structure, the headword information, produced as a side product, is an important feature.",
                    "sid": 698,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Automatic parsers, however, still have a long way to go.",
                    "sid": 699,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our results using hand-annotated parse trees including traces show that improvements in parsing should translate directly into more accurate semantic representations.",
                    "sid": 700,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There has already been a demonstration that a preliminary version of these data can be used to simplify the effort involved in developing information extraction (IE) systems.",
                    "sid": 701,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Researchers were able to construct a reasonable IE system by simply mapping specific Arg labels for a set of verbs to template slots, completely avoiding the necessity of building explicit regular expression pattern matchers (Surdeanu et al. 2003).",
                    "sid": 702,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is equal hope for advantages for machine translation, and proposition banks in Chinese (Xue and Palmer 2003) and Korean are already being built, focusing where possible on parallel data.",
                    "sid": 703,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The general approach ports well to new languages, with the major effort continuing to go into the creation of frames files for verbs.",
                    "sid": 704,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are many directions for future work.",
                    "sid": 705,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our preliminary linguistic analyses have merely scratched the surface of what is possible with the current annotation, and yet it is only a first approximation at capturing the richness of semantic representation.",
                    "sid": 706,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Annotation of nominalizations and other noun predicates is currently being added by New York University, and a Phase II (BabkoMalaya et al.) that will include eventuality variables, nominal references, additional sense tagging, and discourse connectives is underway.",
                    "sid": 707,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have several plans for improving the performance of our automatic semantic- role labeling.",
                    "sid": 708,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a first step we are producing a version of PropBank that uses more informative thematic labels based on VerbNet thematic labels (Kipper, Palmer, and Rambow 2002).",
                    "sid": 709,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are also working with FrameNet to produce a mapping between our annotation and theirs which will allow us to merge the two annotated data sets.",
                    "sid": 710,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we will explore alternative machine-learning approaches and closer integration of semantic-role labeling and sense tagging with the parsing process.",
                    "sid": 711,
                    "ssid": 25,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "",
            "sents": [
                {
                    "text": "This work was funded by DOD grant MDA90400C-2136, NSF grant IIS9800658, and the Institute for Research in Cognitive Science at the University of Pennsylvania NSFSTC grant SBR89-20230.",
                    "sid": 712,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.",
                    "sid": 713,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are indebted to Scott Cotton, our staff programmer, for his untiring efforts and his lovely annotation tool, to Joseph Rosenzweig for the initial automatic semantic-role labeling of the Penn Treebank, and to Ben Snyder for programming support and computing agreement figures.",
                    "sid": 714,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We would also like to thank Mitch Marcus, Aravind Joshi, Olga BabkoMalaya, Hoa Trang Dang, Christiane Fellbaum, and Betsy Klipple for their extremely useful and insightful guidance and our many hard-working 102 annotators, especially Kate Forbes, Ilana Streit, Ann Delilkin, Brian Hertler, Neville Ryant, and Jill Flegg, for all of their help.",
                    "sid": 715,
                    "ssid": 29,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}