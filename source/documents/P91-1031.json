{
    "ID": "P91-1031",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Strategies are proposed for combining different kinds of constraints in declarative grammars with a detachable layer of control information.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The added control information is the basis for parametrized dynamically controlled linguistic deduction, a form of linguistic processing that permits the implementation of plausible linguistic performance models without giving up the declarative formulation of linguistic competence.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The information can be used by the linguistic processor for ordering the sequence in which conjuncts and disjuncts are processed, for mixing depth-first and breadth-first search, for cutting off undesired derivations, and for constraint-relaxation.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Feature term formalisms (FTF) have proven extremely useful for the declarative representation of linguistic knowledge.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The family of grammar models that are based on such formalisms include Generalized Phrase Structure Grammar (GPSG) [Gazdar et al. 1985], Lexical Functional Grammar (LFG) [Bresnan 1982], Functional Unification Grammar (bUG) [Kay 1984], Head-Driven Phrase Structure Grammar (I-IPSG) [Pollard and Sag 1988], and Categorial Unification Grammar (CUG) [Karttunen 1986, Uszkoreit 1986, Zeevat et al. 1987].",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research for this paper was carried out in parts at DFKI in the project DIsco which is funded by the German Ministry for Research and Technology under Grant-No.: 1TW 9002.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Partial funding was also provided by the German Research Association (DFG) through the Project BiLD in the SFB 314: Artificial Intelligence and Knowledge-Based Systems.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For fruitful discussions we would like to thank our colleagues in the projects DISCO, BiLD and LIIX)G as well as members of audiences at Austin, Texas, and Kyoto, Japan, where preliminary versions were presented.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Special thanks for valuable comment and suggestions go to Gregor Erbach, Stanley Peters, Jim Talley, and Gertjan van Noord.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The expressive means of feature term formalisms have enabled linguists to design schemes for a very uniform encoding of universal and language-particular linguistic principles.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most radical approach of organizing linguistic knowledge in a uniform way that was inspired by proposals of Kay can be found in HPSG.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unification grammar formalisms, or constraint-based grammar formalisms as they are sometimes called currently constitute the preferred paradigm for grammatical processing in computational linguistics.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One important reason for the success of unification grammars I in computational linguistics is their purely declarative nature.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since these grammars are not committed to any particular processing model, they can be used in combination with a number of processing strategies and algorithms.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The modularity has a number of advantages: \u2022 freedom for experimentation with different processing schemes, \u2022 compatibility of the grammar with improved system versions, \u2022 use of the same grammar for analysis and generation, \u2022 reusability of a grammar in different systems.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unification grammars have been used by theoretical linguists for describing linguistic competence.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There exist no processing models for unification grammars yet that incorporate at least a few of the most widely accepted observations about human linguistic performance.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Robustness: Human listeners can easily parse illformed input and adapt to patterns of ungrammaticality.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1The notion of grammar assumed here is equivalent to the structured collection of linguistic knowledge bases including the lexicon, different types of rule sets, linguistic principles, etc. \u2022 Syntactic disambiguation in parsing: Unlikely derivations should be cut off or only tried after more likely ones failed.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(attachment ambiguities, garden paths) \u2022 Lexical disarnbiguation in parsing: Highly unlikely readings should be suppressed or tried only if no result can be obtained otherwise.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Syntactic choice in generation: In generation one derivation needs to be picked out of a potentially infinite number of paraphrases.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Lexical choice in generation: One item needs to be picked out of a large number of alternatives.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Relationship between active and passive command of a language: The set of actively used constructions and lexical items is a proper subset of the ones mastered passively.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The theoretical grammarian has the option to neglect questions of linguistic performance and fully concentrate on the grammar as a correct and complete declarative recursive definition of a language fragment.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The psycholinguist, on the other hand, will not accept grammar theory and formalism if no plausible processing models can be shown.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Computational linguists-independent of their theoretical interests-have no choice but to worry about the efficiency of processing.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, as of this date, no implementations exist that allow efficient processing with the type of powerful unification grammars that are currently preferred by theoretical grammarians or grammar engineers.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As soon as the grammar formalism employs disjunction and negation, processing becomes extremely slow.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Yet the conclusion should not be to abandon unification grammar but to search for better processing models.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certain effective control strategies for linguistic deduction with unification grammars have been suggested in the recent literature.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[Shieber et al. 1990, Gerdemarm and Hinrichs 1990] The strategies do not allow the grammar writer to attach control information to the constraints in the grammar.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Neither can they be used for dynamic preference assignments.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model of control proposed in this paper can be used to implement these strategies in combination with others.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the strategies are not encoded in the program but control information and parametrization of deduction.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The claim is that unification grammar is much better suited for the experimental and inductive development of plausible processing models than previous grammar models.",
                    "sid": 35,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The uniformily encoded constraints of the grammar need to be enriched by control information.",
                    "sid": 36,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information serves the purpose to reduce local indeterminism through reordering and pruning of the search graph during linguistic deduction.",
                    "sid": 37,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper discusses several strategies for adding control information to the grammar without sacrificing its declarative nature.",
                    "sid": 38,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the central hypotheses of the paper is that-in contrast to the declarative meaning of the grammar-the order in which subterms in conjunctions and disjunctions are processed is of importance for a realistic processing model.",
                    "sid": 39,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In disjunctions, the disjuncts that have the highest probability of success should be processed first, whereas in conjunctions the situation is reversed.",
                    "sid": 40,
                    "ssid": 40,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "control information in conjunctions. ",
            "number": "2",
            "sents": [
                {
                    "text": "2.1 Ordering conjuncts.",
                    "sid": 41,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this context conjuncts are all feature subterms that are combined explicitly or implicitly by the operation of feature unification.",
                    "sid": 42,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most basic kind of conjunctive term that can be found in all FFFs is the conjunction of feature-value pairs.",
                    "sid": 43,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "t\"2\" V2 Other types of conjunctive terms in the knowledge base may occur in formalisms that allow template, type or sort names in feature term specifications.",
                    "sid": 44,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb [Transitive] |3raSing / |lex : hits / t_sem : hit'-] If these calls are processed (expanded) at compile time, the conjunction will also be processed at compile time and not much can be gained by adding control information.",
                    "sid": 45,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If, however, the type or template calls are processed on demand at run time, as it needs to be the case in FTFs with recursive types, these names can be treated as regular conjuncts.",
                    "sid": 46,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a conjunction is unified with some other feature term, every conjunct has to be unified.",
                    "sid": 47,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Controlling the order in which operands are processed in conjunctions may save time if conjuncts can be processed first that are most likely to fail.",
                    "sid": 48,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This observation is the basis for a reordering method proposed by Kogure [1990].",
                    "sid": 49,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If, e.g., in syntactic rule applications, the value of the attribute agreement in the representation of nominal elements leads to clashes more often than the value of the attribute definiteneness, it would in general be more efficient to unify agreement before definiteness.",
                    "sid": 50,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every unification failure in processing cuts off some unsuccessful branch in the search tree.",
                    "sid": 51,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For every piece of information in a linguistic knowledge base we will call the probability at which it is directly involved in search tree pruning its failure potential.",
                    "sid": 52,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More exactly, the failure potential of a piece of information is the average number of times, copies of this (sub)term turn to _1.",
                    "sid": 53,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "during the processing of some input.",
                    "sid": 54,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The failure path from the value that turns to _1_ fh'st up to the root is determined by the logical equivalences _1_= a : _1_ (for any attribute c0 2_ = [_1.",
                    "sid": 55,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "x] (for any term x) x = {.J_ x} (for any term x) \u00b1 = {.L} plus the appropriate associative laws.",
                    "sid": 56,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experience in grammar development has shown that it is very difficult for the linguist to make good guesses about the relative failure potential of subterms of rules, principles, lexical entries and other feature terms in the grammar.",
                    "sid": 57,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, relative rankings bases on failure potential can be calculated by counting failures during a training phase.",
                    "sid": 58,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the failure potential, as it is defined here, may depend on the processing scheme and on the order of subterms in the grammar.",
                    "sid": 59,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If, e.g., the value of the agreement feature person in the definition of the type Verb leads to failure more often than the value of the feature number, this may simply be due to the order in which the two subterms are processed.",
                    "sid": 60,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Assume the unlikely situation that the value of number would have led to failure-if the order had been reversed-in all the cases in which the value of person did in the oM order.",
                    "sid": 61,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus for any automatic counting scheme some constant shuffling and reshuffling of the conjunct order needs to be applied until the order stabilizes (see also [Kogure 1990]).",
                    "sid": 62,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a second criterion to consider.",
                    "sid": 63,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some unifications with conjuncts build a lot of structure whereas others do not.",
                    "sid": 64,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even if two conjuncts lead to failure the same number of times, it may still make a difference in which order they are processed.",
                    "sid": 65,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally there might good reasons to process some conjuncts before others simply because processing them will bring in additional constraints that can reduce the size of the search tree.",
                    "sid": 66,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Good examples of such strategies are the so-called head-driven or functor-driven processing schemes.",
                    "sid": 67,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model of controlled linguistic deduction allows the marking of conjuncts derived by failure counting, processing effort comparisons, or psyeholinguistic observations.",
                    "sid": 68,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the markings do not by themselves cause a different processing order.",
                    "sid": 69,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only if deduction is parametrized appropriately, the markings will be considered by the type inference engine.",
                    "sid": 70,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2 Relaxation markings.",
                    "sid": 71,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many attempts have been made to achieve more robustness in parsing through more or less intricate schemes of rule relaxation.",
                    "sid": 72,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In FTFs all linguistic knowledge is encoded in feature terms that denote different kinds of constraints on linguistic objects.",
                    "sid": 73,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the processing of grammatically illformed input, constraint relaxation techniques are needed.",
                    "sid": 74,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Depending on the task, communication type, and many other factors certain constraints will be singled out for possible relaxation.",
                    "sid": 75,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A relaxation marking is added to the control information of any subterm c encoding a constraint that may be relaxed.",
                    "sid": 76,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A relaxation marking consists of a function r c from relaxation levels to relaxed constraints, i.e., a set of ordered pairs <i, ci> where i is an integer greater than 0 denoting a relaxation level and ci is a relaxed constraint, i.e., a term subsuming c. 2 The relaxation level is set as a global parameter for processing.",
                    "sid": 77,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The default level is 0 for working with an unrelaxed constraint base.",
                    "sid": 78,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Level 1 is the first level at which constraints are weakened.",
                    "sid": 79,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More than two relaxation levels are only needed if relaxation is supposed to take place in several steps.",
                    "sid": 80,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the unification of a subterm bearing some relaxation marking with some other term yields &, unification is stopped without putting .L into the partial result.",
                    "sid": 81,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The branch in the derivation is discontinued just as if a real failure had occurred but a continuation point for backtracking is kept on a backtracking stack.",
                    "sid": 82,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The partial result of the unification that was interrupted is also kept.",
                    "sid": 83,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If no result can be derived using the grammar without relaxation, the relaxation level is increased and backtracking to the continuation points is activated.",
                    "sid": 84,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The 2Implicitely the ordered pair <0, c> is part of the control information for every subterm.",
                    "sid": 85,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore it can be omitted.",
                    "sid": 86,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "subterm that is marked for relaxation is replaced by the relaxed equivalent.",
                    "sid": 87,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unification continues.",
                    "sid": 88,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whenever a (sub)term c from the grammar is encountered for which re(i) is defined, the relaxed constraint is used.",
                    "sid": 89,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This method also allows processing with an initial relaxation level greater than 0 in applications or discourse situations with a high probability of ungrammatical inpuL For a grammar G let Gi be the grammar G except that every constraint is replaced by rc(i).",
                    "sid": 90,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let L i stand for the language generated or recognized by a grammar G i. If constraints are always properly relaxed, i.e., if relaxation does not take place inside the scope of negation in FITs that provide negation, L i will always be a subset ofLi+ 1.",
                    "sid": 91,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that correctness and completeness of the declarative grammar GO is preserved under the proposed relaxation scheme.",
                    "sid": 92,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All that is provided is an efficient way of jumping from processing with one grammar to processing with another closely related grammar.",
                    "sid": 93,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The method is based on the assumption that the relaxed grammars axe properly relaxed and very close to the unrelaxed grammar.",
                    "sid": 94,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore all intermediate results from a derivation on a lower relaxation level can be kept on a higher one.",
                    "sid": 95,
                    "ssid": 55,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "control information in disjunctions. ",
            "number": "3",
            "sents": [
                {
                    "text": "3.1 Ordering of disjuncts.",
                    "sid": 96,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section, it will be shown how the processing of feature terms may be controlled through the association of preference weights to disjuncts in disjunctions of constraints.",
                    "sid": 97,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The preference weights determine the order in which the disjuncts are processed.",
                    "sid": 98,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This method is the most relevant part of controlled linguistic deduction.",
                    "sid": 99,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In one model control information is given statically, in a second model it is calculated dynamically.",
                    "sid": 100,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Control information cannot be specified independent from linguistic knowledge.",
                    "sid": 101,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For parsing some readings in lexical entries might be preferred over others.",
                    "sid": 102,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For generation lexical choice might be guided by preference assignments.",
                    "sid": 103,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For both parsing and generation certain syntactic constructions might be preferred over others at choice points.",
                    "sid": 104,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certain translations might receive higher preference during the transfer phase in machine translation.",
                    "sid": 105,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Computational linguists have experimented with assignments of preferences to syntax and transfer rules, lexical entries and lexical readings.",
                    "sid": 106,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Preferences are usually assigned through numerical preference markers that guide lexical lookup and lexical choice as well as the choice of rules in parsing, generation, and transfer processes.",
                    "sid": 107,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intricate schemes have been designed for arithmetically calculating the preference marker of a complex unit from the preference markers of its parts.",
                    "sid": 108,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a pure context-free grammar only one type of disjunction is used which corrresponds to the choice among rules.",
                    "sid": 109,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In some unification grammars such as lexical functional grammars, there exist disjunction between rules, disjunction between lexical items and disjunction between feature-values in f-structures.",
                    "sid": 110,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In such grammars a uniform preference strategy cannot be achieved.",
                    "sid": 111,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other unification grammar formalisms such as FUG or HPSG, the phrase structure has been incorporated into the feature terms.",
                    "sid": 112,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The only disjunction is feature term disjunction.",
                    "sid": 113,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our preference scheme is based on the assumption that the formalism permits one type of disjunction only.",
                    "sid": 114,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For readers not familiar with such grammars, a brief outline is presented.",
                    "sid": 115,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In HPSG grammatical knowledge is fully encoded in feature terms.",
                    "sid": 116,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The formalism employs conjunction (unification), disjunction, implication, and negation as well as special data types for lists and sets.",
                    "sid": 117,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Subterms can also be connected through relational constraints.",
                    "sid": 118,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Linguistically relevant feature terms are order-sorted, i.e., there is a partially ordered set of sorts such that every feature term that describes a linguistic object is assigned to a sort.",
                    "sid": 119,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar can be viewed as a huge disjunctive constraint on the wellformedness of linguistic signs.",
                    "sid": 120,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every wellformed sign must unifiy with the grammar.",
                    "sid": 121,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar consists of a set of universal principles, a set of language-particular principles, a set of lexical entries (the lexicon), and a set of phrase-structure rules.",
                    "sid": 122,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar of English contains all principles of universal grammar, all principles of English, the English lexicon, and the phrase-structure rules of English.",
                    "sid": 123,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A sign has to conform with all universal and language-particular principles, therefore these principles are combined in conjunctions.",
                    "sid": 124,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is either a lexical sign in which case it has to unify with at least one lexical entry or it is a phrasal sign in which case it needs to unify with at least one phrase-structure rule.",
                    "sid": 125,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lexicon and the set of rules are therefore combined in disjunctions.",
                    "sid": 126,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "UniversalGrammar= [Pi] P2 ['P':~] Principles_of_English = ~P..\"+ Lpo Rules_of_English = R2 P [U ve G mar l Grammar of English = [Principles__ofEnglish| l/Rules--\u00b0f--English I]L/Lexicon_of_English JJ Figure 1.",
                    "sid": 127,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Organization of the Grammar of English in HPSG Such a grammar enables the computational linguist to implement processing in either direction as mere type inference.",
                    "sid": 128,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we claim that any attempts to follow this elegant approach will lead to terribly inefficient systems unless controlled linguistic deduction or an equally powerful paramelrizable control scheme is employed.",
                    "sid": 129,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Controlled linguistic deduction takes advantage of the fact that a grammar of the sort shown in Figure 1 allows a uniform characterization of possible choice points in grammatical derivation.",
                    "sid": 130,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every choice point in the derivation involves the processing of a disjunction.",
                    "sid": 131,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus feature disjunction is the only source of disjunction or nondeterminism in processing.",
                    "sid": 132,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is easy to see in the case of lexical lookup.",
                    "sid": 133,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that a lexicon is indexed for the type of information needed for access.",
                    "sid": 134,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By means of distributive and associative laws, the relevant index is factored out.",
                    "sid": 135,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A lexicon for parsing written input is indexed by a feature with the attribute graph that encodes the graphemic form.",
                    "sid": 136,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A lexicon with the same content might be used for generation except that the index will be the semantic content.",
                    "sid": 137,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An ambiguous entry contains a disjunction of its readings.",
                    "sid": 138,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following schematized entry for the English homograph bow the disjunction contains everything but the graphemic form.",
                    "sid": 139,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 graph: (bow)- (bowl~ I?+ l ~OWkl 3.2 Static preferences.",
                    "sid": 140,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There exist two basic strategies for dealing with disjunctions.",
                    "sid": 141,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One is based on the concept of backtracking.",
                    "sid": 142,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One disjunct is picked (either at random or from the top of a stack), a continuation point is set, and processing continues as if the picked disjtmct were the only one, i.e., as if it were the whole term.",
                    "sid": 143,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If processing leads to failure, the computation is set back completely to the fixed continuation point and a different (or next) disjunct is picked for continuation.",
                    "sid": 144,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the computation with the first disjunct yields success, one has the choice of either to be satisfied with the (first) solution or to set the computation back to the continuation point and try the next disjunct.",
                    "sid": 145,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With respect to the disjunction, this strategy amounts to depth-first search for a solution.",
                    "sid": 146,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second strategy is based on breadth-f'wst search.",
                    "sid": 147,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All disjuncts are used in the operation.",
                    "sid": 148,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If, e.g., a disjunction 3Additional information such as syntactic category might also be factored out within the entry: -ph: -synllocallcat: n] / J synllocallcat: vJ~ 1 I ] Ibow,+,,a However, all we are interested in in this context is the observation that in any case the preferences among readings have to be associated with disjuncts.",
                    "sid": 149,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "is unified with a nondisjunctive term, the term is unified with every disjunct.",
                    "sid": 150,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The result is again a disjunction.",
                    "sid": 151,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The strategy proposed here is to allow for combinations of depth-first and breadth-first processing.",
                    "sid": 152,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Depth-first search is useful if there are good reasons to believe that the use of one disjunct will lead to the only result or to the best result.",
                    "sid": 153,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A mix of the two basic strategies is useful if there are several disjuncts that offer better chances than the others.",
                    "sid": 154,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Preference markers (or preference values) are attached to the disjuncts of a disjunction.",
                    "sid": 155,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Assume that a preference value is a continuous value p in 0 < p _< 10.",
                    "sid": 156,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now a global width factor w in 0 < w < 10 can be set that separates the disjuncts to be tried out fast from the ones that can only be reached through backtracking.",
                    "sid": 157,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All disjuncts are tried out f'n-st in parallel whose values Pi are in Praax-W <- Pi <- Pmax.",
                    "sid": 158,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the width is set to 2, all disjuncts would be picked that have values Pi in Pmax2 <- Pi < Pmax.",
                    "sid": 159,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Purely depth-first and purely breadth-fast search are forced by setting the threshold to 0 or 10 respectively.",
                    "sid": 160,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Dynamic preferences.",
                    "sid": 161,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One of the major problems in working with preferences is their contextual dependence.",
                    "sid": 162,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although static preference values can be very helpful in guiding the derivation, especially for generation, transfer, or limiting lexical ambiguity, often different preferences apply to different contexts.",
                    "sid": 163,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Take as an example again the reduction of lexical ambiguity.",
                    "sid": 164,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is clearly the context that influences the hearers preferences in selecting a reading.",
                    "sid": 165,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 The astronomer marr/ed a star.",
                    "sid": 166,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "vs. The movie director married a star.",
                    "sid": 167,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tennis player opened the ball.",
                    "sid": 168,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "vs. The mayor opened the ball.",
                    "sid": 169,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Preferences among syntactic constructions, that is preferences among rules, depend on the sort of text to be A trivial but unsatisfactory solution is to substitute the preference values by a vector of values.",
                    "sid": 170,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Depending on the subject matter, the context, or the approriate style or",
                    "sid": 171,
                    "ssid": 76,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the fnst example is due to reder [1983].. ",
            "number": "4",
            "sents": [
                {
                    "text": "register, different fields of the vector values might be considered for controlling the processing.",
                    "sid": 172,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there are several reasons that speak against such a simple extension of the preference mechanism.",
                    "sid": 173,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First of all, the number of fields that would be needed is much too large.",
                    "sid": 174,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For lexical disambiguation, a mere classification of readings according to a small set of subject domains as it can be found in many dictionaries is much too coarse.",
                    "sid": 175,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Take, e.g., the English word line.",
                    "sid": 176,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word is highly ambiguous.",
                    "sid": 177,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can easily imagine appropriate preferred readings in the subject domains of telecommunication, geometry, genealogy, and drug culture.",
                    "sid": 178,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, even in a single computer manual the word may, depending on the context, refer to a terminal line, to a line of characters on the screen, to a horizontal separation line between editing windows, or to many other things.",
                    "sid": 179,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(In each case there is a different translation into German.)",
                    "sid": 180,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A second reason comes from the fact that preferences are highly dynamic, i.e., they can change at any time during processing.",
                    "sid": 181,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Psycholinguistic experiments strongly suggest that the mere perception of a word totally out of context already primes the subject, i.e., influences his preferences in lexical choice.",
                    "sid": 182,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[Swinney 1979] The third reason to be mentioned here is the multifactorial dependency of preferences.",
                    "sid": 183,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Preferences can be the result of a combination of factors such as the topic of the text or discourse, previous occurrence of priming words, register, style, and many more.",
                    "sid": 184,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to model the dynamics of preferences, a processing model is proposed that combines techniques from connectionist research with the declarative grammar formalisms through dynamic preference values.",
                    "sid": 185,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of assigning permanent preference values or value vectors to disjuncts, the values are dynamically calculated by a spreading-activation net.",
                    "sid": 186,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So far the potentials of neural nets for learning (e.g. backpropagation schemes) have not been exploited.",
                    "sid": 187,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every other metaphor for setting up weighted connections between constraints in disjunctions would serve our purpose equally well.",
                    "sid": 188,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 5For an introduction to connectionist nets see Rumelhart, Hinton, and McCleUand [1986].",
                    "sid": 189,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For an overview of different connectionist models see Feldman and Ballard [1982] and Kemke [1988].",
                    "sid": 190,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The type of net employed for our purposes is extremely simple.",
                    "sid": 191,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Every term in the linguistic knowledge bases whose activation may influence a preference and every term whose preference value may be influenced is associated with a unit.",
                    "sid": 192,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These sets are not disjoint since the selection of one disjunct may influence other preferences.",
                    "sid": 193,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition there can be units for extralinguistic influences on preferences.",
                    "sid": 194,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Units are connected by unidirectional weighted finks.",
                    "sid": 195,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They have an input value i, an activation value a, a resting value r, and a preservation function f. The input value is the sum of incoming activation.",
                    "sid": 196,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resting value is the minimal activation value, i.e., the degree of activation that is independent from current or previous input.",
                    "sid": 197,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The activation value is either equal to the sum of input and some fraction of the previous activation, which is determined by the preservation function or it is equal to the resting value, whichever is greater.",
                    "sid": 198,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ai+ 1 = max{r, i i +f(a/)}.",
                    "sid": 199,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this simple model the output is equal to the activation.",
                    "sid": 200,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The weights of the links l are factors such that 0 < l < 1.",
                    "sid": 201,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a link goes from unit Ul to unit u2, it contributes an activation of l*aul to the input of u2.",
                    "sid": 202,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Conclusion and future research.",
                    "sid": 203,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Strategies are proposed for combining declarative linguistic knowledge bases with an additional layer of control information.",
                    "sid": 204,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The unification grammar itself remains declarative.",
                    "sid": 205,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar also retains completeness.",
                    "sid": 206,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is the processing model that uses the control information for ordering and pruning the search graph.",
                    "sid": 207,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, if the control information is neglected or if all solutions are demanded and sought by backtracking, the same processing model can be used to obtain exactly those results derived without control information.",
                    "sid": 208,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Yet, if control is used to prune the search tree in such a way that the number of solutions is reduced, many observations about human linguistic performance some of which are mentioned in Section 1 can be simulated.",
                    "sid": 209,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6The selected simple model is sufficient for illustrating the basic idea.",
                    "sid": 210,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certainly more sophisticated eormectionist models will have to be employed for eognitively plausible simulation.",
                    "sid": 211,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason for the simple design of the net is the lack of a learning.",
                    "sid": 212,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Kt this time, no learning model has been worked out yet for the proposed type of spreading- activation nets.",
                    "sid": 213,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the time being it is assumed that the weights are set by hand using linguistic knowledge, corpora, and association dictionaries.",
                    "sid": 214,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Criteria for selection among alternatives can be encoded.",
                    "sid": 215,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The smaller set of actively used constructions and lexemes is simply explained by the fact that for all the items in the knowledge base that are not actively used there are alternatives that have a higher preference.",
                    "sid": 216,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The controlled linguistic deduction approach offers a new view of the competence-performance distinction, which plays an important r61e in theoretical linguistics.",
                    "sid": 217,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Uncontrolled deduction cannot serve as a plausible performance model.",
                    "sid": 218,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, the performance model extends beyond the processing model, it also includes the structuring of the knowledge base and control information that influence processing.",
                    "sid": 219,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Linguistic Processing Linguistic Knowledge \u00b0 \u00b0l \u20225 ~ arametrizatio control .~_ ,= of deduction information -'#.",
                    "sid": 220,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u00b0\u00b0t J1 ~ J linguistic declarative \u00b0 '5~a. L deduction j grammar 5Eo \u2022 0 Figure 2.",
                    "sid": 221,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A new view of the competence- performance distinction Since this paper reports about the first results from a new line of research, many questions remain open and demand further research.",
                    "sid": 222,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other types of control need to be investigated in relation with the strategies proposed in this paper.",
                    "sid": 223,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Uszkoreit [1990], e.g., argues that functional uncertainty needs to be controlled in order to reduce the search space and at the same time simulate syntactic preferences in human processing.",
                    "sid": 224,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unification grammar formalisms may be viewed as constraint languages in the spirit of constraint logic programming (CLP).",
                    "sid": 225,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Efficiency can be gained through appropriate strategies for delaying the evaluation of different constraint types.",
                    "sid": 226,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such schemes for delayed evaluation of constraints have been implemented for LFG.",
                    "sid": 227,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They play an even greater role in the processing of Constraint Logic Grammars (CLG) [Balari et al. 1990].",
                    "sid": 228,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The delaying scheme is a more sophisticated method for the ordering of conjuncts.",
                    "sid": 229,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More research is needed in this area before the techniques of CLP/CLG can be integrated in a general model of controlled (linguistic) deduction.",
                    "sid": 230,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So far the weight of the links for preference assignment can only be assigned on the basis of association dictionaries as they have been compiled by psychologists.",
                    "sid": 231,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For nonlexieal links the grammar writer has to rely on a trial and error method.",
                    "sid": 232,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A training method for inducing the best conjunct order on the basis of failure potential was described in Section 2.1.",
                    "sid": 233,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The training problem, .ie., the problem of automatic induction of the best control information is much harder for disjunctions.",
                    "sid": 234,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parallel to the method for conjunctions, during the training phase the success potential of a disjunct needs to be determined, i.e., the average number of contributions to successful derivations for a given number of inputs.",
                    "sid": 235,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problem is much harder for assigning weights to links in the spreading-activation net employed for dynamic preference assignment..",
                    "sid": 236,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hirst [1988] uses the structure of a semantic net for dynamic lexical disambiguation.",
                    "sid": 237,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Corresponding to their marker passing method a strategy should be developed that activates all supertypes of an activated type in decreasing quantity.",
                    "sid": 238,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wherever activations meet, a mutual reinforcement of the paths, that is of the hypotheses occurs.",
                    "sid": 239,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another topic for future research is the relationship betwccn control information and feature logic.",
                    "sid": 240,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "What happens if, for instance, a disjunction is transformed into a conjunction using De Morgans law?",
                    "sid": 241,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The immediate reply is that control structures are only valid on a certain formulation of the grammar and not on its logically eqtfivalent syntactic variants.",
                    "sid": 242,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, assume that a fraction of a statically or dynamically calculated fraction involving success potential sp and failure potentialfp is attached to every subterm.",
                    "sid": 243,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For disjuncts, sp is \u02d8fivided byfp, for conjuncts fp is divided bysp.",
                    "sid": 244,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "De Morgans law yields an intuitive result if we assume that negation of a term causes the attached fraction to be inverted.",
                    "sid": 245,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More research needs to be carried out before one can even start to argue for or against a preservation of control information under logical equivalences.",
                    "sid": 246,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Head-driven or functor-driven deduction has proven very useful.",
                    "sid": 247,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this approach the order of processing conjuncts has been fixed in order to avoid the logically perfect but much less effcient orderings in which the complement conjuncts in the phrase structure (e.g., in the value of the daughter feature) are processed before the head conjunct.",
                    "sid": 248,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This strategy could not be induced or learned using the simple ordering criteria that are merely based on failure and success.",
                    "sid": 249,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to induce the strategy from experience, the relative computational effort needs to be measured and compared for the logically equivalent orderings.",
                    "sid": 250,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ongoing work is dedicated to the task of formulating well-known processing algorithms such as the Earley algorithm for parsing or the functor-driven approach for generation purely in terms of preferences among conjuncts and disjuncts.",
                    "sid": 251,
                    "ssid": 80,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}