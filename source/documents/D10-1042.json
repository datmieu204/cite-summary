{
    "ID": "D10-1042",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "This paper studies the problem of mining entity translation, specifically, mining English and Chinese name pairs.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Existing efforts can be categorized into (a) a transliteration- based approach leveraging phonetic similarity and (b) a corpus-based approach exploiting bilingual co-occurrences, each of which suffers from inaccuracy and scarcity respectively.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In clear contrast, we use unleveraged resources of monolingual entity co-occurrences, crawled from entity search engines, represented as two entity-relationship graphs extracted from two language corpora respectively.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our problem is then abstracted as finding correct mappings across two graphs.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To achieve this goal, we propose a holistic approach, of exploiting both transliteration similarity and monolingual co-occurrences.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach, building upon monolingual corpora, complements existing corpus-based work, requiring scarce resources of parallel or comparable corpus, while significantly boosting the accuracy of transliteration-based work.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We validate our proposed system using real-life datasets.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Entity translation aims at mapping the entity names (e.g., people, locations, and organizations) in source language into their corresponding names in target language.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While high quality entity translation is essential in cross-lingual information access and trans lation, it is nontrivial to achieve, due to the challenge that entity translation, though typically bearing pronunciation similarity, can also be arbitrary, e.g., Jackie Chan and fiX :it (pronounced Cheng Long).",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Existing efforts to address these challenges can be categorized into transliteration- and corpus- based approaches.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009).",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These two approaches have complementary strength\u2013 transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Corpus-based similarity can support arbitrary translations, but require highly scarce resources of bilingual co-occurrences, obtained from parallel or comparable bilingual corpora.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we propose a holistic approach, leveraging both transliteration- and corpus-based similarity.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our key contribution is to replace the use of scarce resources of bilingual co-occurrences with the use of untapped and significantly larger resources of monolingual co-occurrences for translation.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, we extract monolingual co- occurrences of entities from English and Chinese Web corpora, which are readily available from entity search engines such as PeopleEntityCube1, deployed by Microsoft Research Asia.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such engine \u2217This work was done when the first two authors visited Microsoft Research Asia.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 http://people.entitycube.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "com 430 Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 430\u2013439, MIT, Massachusetts, USA, 911 October 2010.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2010 Association for Computational Linguistics automatically extracts people names from text and their co-occurrences to retrieve related entities based on co-occurrences.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To illustrate, Figure 1(a) demonstrates the query result for \u201cBill Gates,\u201d retrieving and visualizing the \u201centity-relationship graph\u201d of related people names that frequently co-occur with Bill in English corpus.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, entity-relationship graphs can be built over other language corpora, as Figure 1(b) demonstrates the corresponding results for the same query, from Renlifang2 on Chinese Web corpus.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From this point on, for the sake of simplicity, we refer to English and Chinese graphs, simply 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0 Tail Head Ours Google Engkoo as Ge and Gc respectively.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though we illustrate with EnglishChinese pairs in the paper, our method can be easily adapted to other language pairs.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, we propose a novel approach of abstracting entity translation as a graph matching problem of two graphs Ge and Gc in Figures 1(a) and (b).",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, the similarity between two nodes ve and vc in Ge and Gc is initialized as their transliteration similarity, which is iteratively refined based on relational similarity obtained from monolingual co- occurrences.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To illustrate this, an English news article mentioning \u201cBill Gates\u201d and \u201cMelinda Gates\u201d evidences a relationship between the two entities, which can be quantified from their co-occurrences in the entire English Web corpus.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, we can mine Chinese news articles to obtain the re lationships between \u201ct )];\u00b7Jli Vi\u201d and \u201c1'1 li\\ it\u00b7Jli Vi\u201d.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once these two bilingual graphs of people and their relationships are harvested, entity translation can leverage these parallel relationships to further evidence the mapping between translation pairs, as Figure 1(c) illustrates.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To highlight the advantage of our proposed approach, we compare our results with commercial machine translators (1) Engkoo3 developed in Microsoft Research Asia and (2) Google Translator4.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, Figure 2 reports the precision for two groups\u2013 \u201cheads\u201d that belong to top-100 popular people (determined by the number of hits), among randomly sampled 304 people names5 from six graph pairs of size 1,000 each, and the remaining \u201ctails\u201d.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Commercial translators such as Google, leveraging 2 http://renlifang.msra.cn 3 http://www.engkoo.com 4 http://translate.google.com 5 See Section 4 for the sampling process..",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2: Comparison for Head and Tail datasets bilingual co-occurrences that are scarce for tails, show significantly lower precision for tails.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Meanwhile, our work, depending solely on monolingual co-occurrences, shows high precision, for both heads and tails.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our focus is to boost translation accuracy for long tails with nontrivial Web occurrences in each monolingual corpus, but not with much bilingual co- occurrences, e.g., researchers publishing actively in two languages but not famous enough to be featured in multilingual Wikipedia entries or news articles.",
                    "sid": 35,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As existing translators are already highly accurate for popular heads, this focus well addresses the remaining challenges for entity translation.",
                    "sid": 36,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To summarize, we believe that this paper has the following contributions: \u2022 We abstract entity translation problem as a graph mapping between entity-relationship graphs in two languages.",
                    "sid": 37,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 We develop an effective matching algorithm leveraging both pronunciation and co- occurrence similarity.",
                    "sid": 38,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This holistic approach complements existing approaches and en hances the translation coverage and accuracy.",
                    "sid": 39,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 We validate the effectiveness of our approach using various real-life datasets.",
                    "sid": 40,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rest of this paper is organized as follows.",
                    "sid": 41,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 2 reviews existing work.",
                    "sid": 42,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 3 then develops our framework.",
                    "sid": 43,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 4 reports experimental results and Section 5 concludes our work.",
                    "sid": 44,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(a) English PeopleEntityCube Ge (b) Chinese Renlifang Gc (c) Abstracting translation as graph mapping Figure 1: Illustration of entity-relationship graphs",
                    "sid": 45,
                    "ssid": 45,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "2",
            "sents": [
                {
                    "text": "In this section, we first survey related efforts, categorized into transliteration-based and corpus-based approaches.",
                    "sid": 46,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our approach leveraging both is complementary to these efforts.",
                    "sid": 47,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1 Transliteration-based Approaches.",
                    "sid": 48,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many name translations are loosely based on phonetic similarity, which naturally inspires transliteration-based translation of finding the translation with the closest pronunciation similarity, using either rule-based (Wan and Verspoor, 1998) or statistical (Knight and Graehl, 1998; Li et al., 2004) approaches.",
                    "sid": 49,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective.",
                    "sid": 50,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2 Corpus-based Approaches.",
                    "sid": 51,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora.",
                    "sid": 52,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity.",
                    "sid": 53,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To alleviate such scarcity, (Fung and Yee, 1998; Shao and Ng, 2004) explore a more vast resource of comparable corpora, which share no parallel document- or sentence-alignments as in parallel corpora but describe similar contents in two languages, e.g., news articles on the same event.",
                    "sid": 54,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Alternatively, (Lin et al., 2008) extracts bilingual co- occurrences from bilingual sentences, such as annotating terms with their corresponding translations in English inside parentheses.",
                    "sid": 55,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, (Jiang et al., 2009) identifies potential translation pairs from bilingual sentences using lexical pattern analysis.",
                    "sid": 56,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.3 Holistic Approaches.",
                    "sid": 57,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The complementary strength of the above two approaches naturally calls for a holistic approach, such as recent work combining transliteration- and corpus-based similarity mining bilingual co- occurrences using general search engines.",
                    "sid": 58,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, (AlOnaizan and Knight, 2002) uses transliteration to generate candidates and then web corpora to identify translations.",
                    "sid": 59,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Later, (Jiang et al., 2007) enhances to use transliteration to guide web mining.",
                    "sid": 60,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our work is also a holistic approach, but leveraging significantly larger corpora, specifically by exploiting monolingual co-occurrences.",
                    "sid": 61,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such expansion enables to translate \u201clong-tail\u201d people entities with nontrivial Web occurrences in each monolingual corpus, but not much bilingual co-occurrences.",
                    "sid": 62,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, we initialize name pair similarity using transliteration-based approach, and iteratively reinforces base similarity using relational similarity.",
                    "sid": 63,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "our framework. ",
            "number": "3",
            "sents": [
                {
                    "text": "Given two graphs Ge = (Ve, Ee ) and Gc = (Vc , Ec ) harvested from English and Chinese corpora respectively, our goal is to find translation pairs, or a set S lation similarities Rij by exploiting the monolingual co-occurrences 3.",
                    "sid": 64,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Matching extraction: extracting the matching.",
                    "sid": 65,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "pairs from the final translation similarities Rij 3.1 Initialization with Transliteration.",
                    "sid": 66,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We initialize the translation similarity Rij as the transliteration similarity.",
                    "sid": 67,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section explains how to get the transliteration similarity between English and Chinese names using an unsupervised approach.",
                    "sid": 68,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Formally, let an English name Ne = (e1, e2, \u00b7 \u00b7 \u00b7 , en) and a Chinese name Nc = (c1 , c2, \u00b7 \u00b7 \u00b7 , cm ) be given, where ei is an English word and Ne is a sequence of the words, and ci is a Chinese character and Nc is a sequence of the characters.",
                    "sid": 69,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our goal is to compute a score indicating the similarity between the pronunciations of the two names.",
                    "sid": 70,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first convert Nc into its Pinyin representationP Yc = (s1, s2, \u00b7 \u00b7 \u00b7 , sm ), where si is the Pinyin representation of ci . Pinyin is the romanization rep resentation of pronunciation of Chinese character.",
                    "sid": 71,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the Pinyin representation of Ne = (\u201cBarack\u201d, \u201cObama\u201d) is P Yc =(\u201cba\u201d, \u201cla\u201d, \u201cke\u201d, \u201cao\u201d, \u201cba\u201d, \u201cma\u201d).",
                    "sid": 72,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Pinyin representations of Chinese characters can be easily obtained from Chinese character pronunciation dictionary.",
                    "sid": 73,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our experiments, we use an in-house dictionary, which contains pronunciations of 20, 774 Chinese characters.",
                    "sid": 74,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the Chinese characters having multiple pronunciations, we only use the most popular one.",
                    "sid": 75,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Calculation of transliteration similarity between Ne and Nc is now transformed to calculation of pronunciation similarity between Ne and P Yc . Because letters in Chinese Pinyins and English strings are pronounced similarly, we can further approximate of matching node pairs such that S \u2286 Ve \u00d7 Vc.",
                    "sid": 76,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let R be a |Ve |-by-|Vc| matrix where each Rij denotes pronunciation similarity between Ne and P Ycus the similarity between two nodes i \u2208 Ve and j \u2208 Vc.",
                    "sid": 77,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, with the matrix R, our approach consists of the following three steps, as we will discuss in the following three sections respectively: 1.",
                    "sid": 78,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initialization: computing base translation sim-.",
                    "sid": 79,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ilarities Rij between two entity nodes using transliteration similarity 2.",
                    "sid": 80,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Reinforcement model: reinforcing the trans-.",
                    "sid": 81,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ing their spelling similarity.",
                    "sid": 82,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we use Edit Distance (ED) to measure the spelling similarity.",
                    "sid": 83,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, since words in Ne are transliterated into characters in P Yc independently, it is more accurate to compute the ED between Ne and P Yc , i.e., EDname (Ne , P Yc ), as the sum of the EDs of all component transliteration pairs, i.e., every ei in Ne and its corresponding transliteration (si ) in P Yc.",
                    "sid": 84,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, we need to first align all sj \u2019s in P Yc with corresponding ei in Ne based on whether they are translations of each other.",
                    "sid": 85,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then based on the alignment, we can calculate EDname (Ne , P Yc) using the following formula.",
                    "sid": 86,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "EDname (Ne , P Yc) = \u2211 ED(ei , esi ) (1) i where esi is a string generated by concatenating all si \u2019s that are aligned to ei and ED(ei , esi ) is the Edit Distance between ei and esi , i.e., the minimum number of edit operations (including inser 3.2 Reinforcement Model.",
                    "sid": 87,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the initial similarity, we model our problem as an iterative approach that iteratively reinforces the similarity Rij of the nodes i and j from the matching similarities of their neighbor nodes u and v. The basic intuition is built on exploiting the similarity between monolingual co-occurrences of two different languages.",
                    "sid": 88,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, we assume two entities with strong relationship co-occur frequently in both corpora.",
                    "sid": 89,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to express this intuition, we formally define an iterative reinforcement model as tion, deletion and substitution) needed to transformei into esi . Because an English word usually con follows.",
                    "sid": 90,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let Rt denote the similarity of nodes i and sists of multiple syllables but every Chinese character consists of only one syllable, when aligning ei \u2019s j at t-th iteration: t t+1 \u2211 uv 0 with sj \u2019s, we add the constraint that each ei is allowed to be aligned with 0 to 4 si \u2019s but each si can Rij = \u03bb (u,v)k \u2208Bt (i,j,\u03b8) 2k + (1 \u2212 \u03bb)Rij (3)only be aligned with 0 to 1 ei . To get the align ment between P Yc and Ne which has the minimal The model is expressed as a linear combination of (a) the relational similarity \u2211 Rt kEDname (Ne , P Yc ), we use a Dynamic Program transliteration similarity R0 uv /2 and (b) ming based algorithm as defined in the following formula: ij .",
                    "sid": 91,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(\u03bb is the coefficient for interpolating two similarities.)",
                    "sid": 92,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the relational similarity, Bt (i, j, \u03b8) is an ordered set of the best matching pairs between neigh EDname (N 1,i , P Y 1,j ) = min( bor nodes of i and ones of j such that (u, v) e c k EDname (N 1,i\u22121 1,j e , P Yc ) + Len(ei ), Bt (i, j, \u03b8), Rt \u2265 \u03b8, where (u, v)k is the match EDname (N 1,i 1,j\u22121 e , P Yc ) + Len(sj ), ing pair with k-th highest similarity score.",
                    "sid": 93,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We con EDname (N 1,i\u22121 1,j\u22121 e , P Yc ) + ED(ei , sj ), sider (u, v) with similarity over some threshold \u03b8, EDname (N 1,i\u22121 1,j\u22122 j\u22121,j e , P Yc ) + ED(ei , P Yc ), or Rt \u2265 \u03b8, as a matching pair.",
                    "sid": 94,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this neighbor EDname (N 1,i\u22121 1,j\u22123 j\u22122,j e , P Yc ) + ED(ei , P Yc ), matching process, if many-to-many matches exist, EDname (N 1,i\u22121 1,j\u22124 j\u22123,j e , P Yc ) + ED(ei , P Yc )) where, given a sequence X = (x1 , x2, \u00b7 \u00b7 \u00b7) such that xi is a word, X i,j is the subsequence (xi , xi+1, \u00b7 \u00b7 \u00b7 , xj ) of X and Len(X ) is the numberof letters except spaces in the sequence X . For in stance, the minimal Edit Distance between the English name \u201cBarack Obama\u201d and the Chinese Pinyin representation \u201cba la ke ao ba ma\u201d is 4, as the best alignment is: \u201cBarack\u201d \u2194 \u201cba la ke\u201d (ED: 3), we select only one with the greatest matching score.",
                    "sid": 95,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3 describes such matching process more formally.",
                    "sid": 96,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "N (i) and N (j) are the sets of neighbor nodes of i and j, respectively, and H is a priority queue sorting pairs in the decreasing order of similarity scores.",
                    "sid": 97,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Meanwhile, note that, in order to express that the confidence for matching (i, j) progressively converges as the number of matched neighbors in creases, we empirically use decaying coefficient\u201cObama\u201d \u2194 \u201cao ba ma\u201d (ED: 1).",
                    "sid": 98,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally the translit eration similarity between Nc and Ne is calculated 1/2k for Rt , because \u2211\u221e 1/2k = 1.",
                    "sid": 99,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "using the following formula.",
                    "sid": 100,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sim (N , N ) = 1 EDname (Ne , P Yc) (2) Len(P Y ) + Len(N ) 3.3 Matching Extraction.",
                    "sid": 101,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After the convergence of the above model, we get the |Ve |-by-|Vc | similarity matrix R\u221e. From this c e matrix, we extract one-to-one matches maximizing the overall similarity.",
                    "sid": 102,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, Simtl (\u201cBarack Obama\u201d, \u201c\\3 5I \ufffd\u00b7\ufffd\\3\ufffd\u201d) is 1 \u2212 4 = 0.826.",
                    "sid": 103,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More formally, this problem can be stated as the maximum weighted bipartite matching (West, 1.",
                    "sid": 104,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bt (i, j, \u03b8) \u2190 {}.",
                    "sid": 105,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we crawled Ge = (Ve , Ee) and Gc = (V , E ) from English and Chinese EntityCubes.",
                    "sid": 106,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "c c 2.",
                    "sid": 107,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2200u \u2208 N (i), \u2200v \u2208 N (j) : H.push(u, v; R )uv Specifically, we built a graph pairs (G , G ) expand 3.",
                    "sid": 108,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "while H is not empty do e c 4.",
                    "sid": 109,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(u, v; s) \u2190 H.pop() 5.",
                    "sid": 110,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "if s < \u03b8 then 6.",
                    "sid": 111,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "break 7.",
                    "sid": 112,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "end if 8.",
                    "sid": 113,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "if neither u nor v are matched yet then ing from a \u201cseed pair\u201d of nodes se \u2208 Ve and sc \u2208 Vc until the number of nodes for each graph becomes 1,0006.",
                    "sid": 114,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, when we build a graph Ge by expanding from se , we use a queue Q. We first initialize Q by pushing the seed node se . We 9.",
                    "sid": 115,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bt (i, j, \u03b8) \u2190 Bt (i, j, \u03b8) \u222a {(u, v)}.",
                    "sid": 116,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "then iteratively pop a node ve from Q, save ve into 10.",
                    "sid": 117,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "11.",
                    "sid": 118,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "12.",
                    "sid": 119,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "end if end while retur n Bt (i, j, \u03b8) Ve , and push its neig hbor node s in decr easin g order of co occu rrenc e score s with ve . Simi larly, we can get Gc from a coun terpa rt seed node vc . By usin g this proc edur e, we built six grap h pairs from six dif Figure 3: How to get the ordered set Bt (i, j, \u03b8) 2000)\u2013 Given two groups of entities Ve and Vc from the two graphs Ge and Gc , we can build a weighted bipartite graph is G = (V, E), where V = Ve \u222a Vc and E is a set of edges (u, v) with weight R\u221e . To filter out null alignment, we construct only the edges ferent seed pairs.",
                    "sid": 120,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, the six seed nodes are English names and its corresponding Chinese names representing a wide range of occupation domains (e.g., \u2018Barack Obama,\u2019 \u2018Bill Gates,\u2019 \u2018Britney Spears,\u2019 \u2018Bruno Senna,\u2019 \u2018Chris Paul,\u2019 and \u2018Eminem\u2019) as Table 1 depicts.",
                    "sid": 121,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Meanwhile, though we demonstrate the effectiveness of the proposed method for with weight R\u221e \u2265 \u03b4.",
                    "sid": 122,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From this bipartite graph, mining name translations in Chinese and English the maximum weighted bipartite matching problem finds a set of pairwise non-adjacent edges S \u2286 E languages, the method can be easily adapted to other language pairs.",
                    "sid": 123,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "such that \u2211 \u221e \u2208is the maximum.",
                    "sid": 124,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Well known algorithms include Hungarian algorithm with time complexity of O(|V |2 log |V | + |V ||E|) (West, 2000).",
                    "sid": 125,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, to speed up processing, we consider a greedy alternative with the following steps\u2013 (1) choose the pair with the highest similarity score, (2) remove the corresponding row and column from the matrix, and (3) repeat (1) and (2) until their matching scores are over a specific threshold \u03b4.",
                    "sid": 126,
                    "ssid": 63,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments. ",
            "number": "4",
            "sents": [
                {
                    "text": "This section reports our experimental results to evaluate our proposed approach.",
                    "sid": 127,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we report our experimental setting in Section 4.1.",
                    "sid": 128,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, we validate the effectiveness and the scalability of our approach over a real-life dataset in Section 4.2.",
                    "sid": 129,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Experimental Settings.",
                    "sid": 130,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section describes (1) how we collect the English and Chinese EntityCube datasets, (2) how to build ground-truth test datasets for evaluating our framework, and (3) how to set up three parameters \u03bb, \u03b8, and \u03b4.",
                    "sid": 131,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1: Summary for graphs and test datasets obtained from each seed pair i |Ve |, |Vc | |Ti | En gli sh Na me C h i n e s e N a m e 1 1 , 0 0 0 51 Ba rac k Ob am a \\ 3 5I \ufffd \u00b7 \ufffd \\ 3 \ufffd 2 1 , 0 0 0 52 B i l l G a t e s t ) ] ; \u00b7 J l i V i 3 1 , 0 0 0 40 Bri tne y Sp ear s \u00b7 )]; 4 1 , 0 0 0 53 Br un o Se nn a \u00b7 5 1 , 0 0 0 51 C h r i s P a u l \ufffd \u00b7 6 1 , 0 0 0 57 E m i n e m Second, we manually searched for about 50 \u201cground-truth\u201d matched translations for each graph pair to build test datasets Ti , by randomly selecting nodes within two hops7 from the seed pair (se, sc ), since nodes outside two hops may include nodes whose neighbors are not fully crawled.",
                    "sid": 132,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, due to our crawling process expanding to add neighbors from the seed, the nodes close to the seed have all the neighbors they would have in the full graph, while those far from the node may not.",
                    "sid": 133,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to pick the nodes that well represent the actual 6 Note, this is just a default setting, which we later increase for scalability evaluation in Figure 6.",
                    "sid": 134,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Note that the numbers of nodes within two hops in Ge and.",
                    "sid": 135,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gc are 327 and 399 on average respectively.",
                    "sid": 136,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "neighbors, we built test datasets among those within two hops.",
                    "sid": 137,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, this crawling is used for the evaluation sake only, and thus does not suggest the bias in our proposed framework.",
                    "sid": 138,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 describes the size of such test dataset for each graph pair.",
                    "sid": 139,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lastly, we set up the three parameters \u03bb, \u03b8, and \u03b4 using 6-fold cross validation with 6 test datasets Ti \u2019s of the graphs.",
                    "sid": 140,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, for each dataset Ti , we decide \u03bbi and \u03b8i such that average MRR for the other 5 test datasets is maximized.",
                    "sid": 141,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(About MRR, see more details of Equation (4) in Section 4.2.) We then decide \u03b4i such that average F1-score is maximized.",
                    "sid": 142,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 4 shows the average MRR for \u03bbi and \u03b8i with default values \u03b8 = 0.66 and \u03bb = 0.2.",
                    "sid": 143,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on these results, we set \u03bbi with values {0.2, 0.15, 0.2, 0.15, 0.2, 0.15} that optimize MRR in datasets T1, . . .",
                    "sid": 144,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "T6, and similarly \u03b8i with {0.67, 0.65, 0.67, 0.67, 0.65, 0.67}.",
                    "sid": 145,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also set \u03b4iwith values {0.63, 0.63, 0.61, 0.61, 0.61, 0.61} opti mizing F1-score with the same default values \u03bb = 0.2 and \u03b8 = 0.66.",
                    "sid": 146,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can observe the variances of optimal parameter setting values are low, which suggests the robustness of our framework.",
                    "sid": 147,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Experimental Results.",
                    "sid": 148,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section reports our experimental results using the evaluation datasets explained in previous section.",
                    "sid": 149,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each graph pair, we evaluated the effectiveness of (1) reinforcement model using MRR measure in Section 4.2.1 and (2) overall framework using precision, recall, and F1 measures in Section 4.2.2.",
                    "sid": 150,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also validated (3) scalability of our framework over larger scale of graphs (with up to five thousand nodes) in Section 4.2.3.",
                    "sid": 151,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(In all experimental results, Bold numbers indicate the best performance for each metric.)",
                    "sid": 152,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2.1 Effectiveness of reinforcement model We evaluated the reinforcement model over MRR (Voorhees, 2001), the average of the reciprocal ranks of the query results as the following formula: MRRs for two matrices R0 and R\u221e, we can validate the effectiveness of the reinforcement model.",
                    "sid": 153,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Baseline matrix (R0): using only the transliteration similarity score, i.e., without reinforcement \u2022 Reinforced matrix (R\u221e): using the reinforced similarity score obtained from Equation (3) Table 2: MRR of baseline and reinforced matrices S e t M R R Ba sel in e R0 Re inf or ce d R \u221e T 1 0 . 6 9 6 4 0 . 8 3 7 7 T 2 0 . 6 2 1 3 0 . 7 5 8 1 T 3 0 . 7 0 9 5 0 . 7 9 8 9 T 4 0 . 8 1 5 9 0 . 8 3 7 8 T 5 0 . 6 9 8 4 0 . 8 1 5 8 T 6 0 . 5 9 8 2 0 . 8 0 1 1 Av er ag e 0 . 6 9 0 0 0 . 8 0 8 2 We empirically observed that the iterative model converges within 5 iterations.",
                    "sid": 154,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all experiments, we used 5 iterations for the reinforcement.",
                    "sid": 155,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 summarizes our experimental results.",
                    "sid": 156,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As these figures show, MRR scores significantly increase after applying our reinforcement model except for the set T4 (on average from 69% to 81%), which indirectly shows the effectiveness of our reinforcement model.",
                    "sid": 157,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2.2 Effectiveness of overall framework Based on the reinforced matrix, we evaluated the effectiveness of our overall matching framework using the following three measures\u2013(1) precision: how accurately the method returns matching pairs, (2) recall: how many the method returns correct matching pairs, and (3) F1-score: the harmonic mean of precision and recall.",
                    "sid": 158,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We compared our approach with a baseline, mapping two graphs with only transliteration similarity.",
                    "sid": 159,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MRR = 1 \u2211 1 (4) 0 |Q| q\u2208Q rankq \u2022 Baseline: in matching extraction, using R as Each q is a ground-truth matched pair (u, v) such that u \u2208 Ve and v \u2208 Vc , and rankq is the rank of the similarity score of Ruv among all Ruk \u2019s such that k \u2208 Vc . Q is a set of such queries.",
                    "sid": 160,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By comparingthe similarity matrix by bypassing the rein forcement step \u2022 Ours: using R\u221e, the similarity matrix converged by Equation (3) 0.85 0.84 0.74 0.84 0.83 0.82 0.81 1 2 0.82 3 4 0.8 5 0 . 7 3 0 . 7 2 1 1 2 0 . 7 1 2 0.8 0.79 0.78 0.77 6 0.1 0.15 0.2 0.25 0.3 ( = 0 . 6 6 ) 0.78 0.76 0.74 3 4 5 6 0.61 0 .63 0 .65 0 .67 0 .69 ( = 0 . 2 ) 0.7 0.69 0.68 3 4 5 6 0.57 0.59 0.61 0.63 0.65 ( = 0 . 2 , = 0 . 6 6 ) Figure 4: Parameter setup for \u03bb, \u03b8, and \u03b4 In addition, we compared ours with the machine translators of Engkoo and Google.",
                    "sid": 161,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 summarizes our experimental results.",
                    "sid": 162,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As this table shows, our approach results in the highest precision (about 80% on average) without compromising the best recall of Google, i.e., 61% of Google vs. 63% of ours.",
                    "sid": 163,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, our approach outperforms others in all three measures.",
                    "sid": 164,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Meanwhile, in order to validate the translation accuracy over popular head and long-tail, as discussed in Section 1, we separated the test data into two groups and analyzed the effectiveness separately.",
                    "sid": 165,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 5 plots the number of hits returned for the names from Google search engine.",
                    "sid": 166,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "According to the distribution, we separate the test data into top-100 popular people with the highest hits and the remaining, denoted head and tail, respectively.",
                    "sid": 167,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2.3 Scalability To validate the scalability of our approach, we evaluated the effectiveness of our approach over the number of nodes in two graphs.",
                    "sid": 168,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We built larger six graph pairs (Ge, Gc ) by expanding them from the seed pairs further until the number of nodes reaches 5,000.",
                    "sid": 169,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 6 shows the number of matched translations according to such increase.",
                    "sid": 170,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, the number of matched pairs linearly increases as the number of nodes increases, which suggests scalability.",
                    "sid": 171,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The ratio of node overlap in two graphs is about between 7% and 9% of total node size.",
                    "sid": 172,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "350 300 250 200 150 8 10 100 7 10 50 1000 2000 3000 4000 5000 |V | and |V | e c 6 10 Figure 6: Matched translations over |Ve | and |Vc | 5 10 4 10 0 50 100 150 200 250 300 350 Number of names Figure 5: Distribution over number of hits Table 4 shows the effectiveness with both datasets, respectively.",
                    "sid": 173,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As difference of the effectiveness between tail and head (denoted diff ) with respect to three measures shows, our approach shows stably high precision, for both heads and tails.",
                    "sid": 174,
                    "ssid": 48,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "5",
            "sents": [
                {
                    "text": "This paper abstracted name translation problem as a matching problem of two entity-relationship graphs.",
                    "sid": 175,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This novel approach complements existing name translation work, by not requiring rare resources of parallel or comparable corpus yet outperforming the state-of-the-art.",
                    "sid": 176,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, we combine bilingual phonetic similarity and monolingual Web co-occurrence similarity, to compute a holistic notion of entity similarity.",
                    "sid": 177,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To achieve this goal, we de Table 3: Precision, Recall, and F1-score of Baseline, Engkoo, Google, and Ours over test sets Ti Se t P r e c i s i o n R e c a l l F 1 s c o r e En gko o Go ogl e Bas elin e O ur s En gko o Go ogl e Bas elin e O ur s Eng koo Go ogl e Bas elin e O ur s T 1 0.5 26 3 0.4 510 0.5 26 3 0.8 974 0.3 92 2 0.4 510 0.1 96 1 0.6 863 0.4 49 4 0.4 510 0.2 85 7 0.7 778 T 2 0.7 55 1 0.",
                    "sid": 178,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "75 0.7 14 3 0.8 056 0.7 11 5 0.",
                    "sid": 179,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "75 0.2 88 5 0.5 577 0.7 32 7 0.",
                    "sid": 180,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "75 0.4 11 0 0.6 591 T 3 0.5 83 3 0.7 925 0.5 55 6 0.7 949 0.5 28 3 0.7 925 0.1 88 7 0.5 849 0.5 54 5 0.7 925 0.2 81 7 0.6 739 T 4 0 . 5 0.",
                    "sid": 181,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "45 0.7 36 8 0.7 353 0.",
                    "sid": 182,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "42 5 0.",
                    "sid": 183,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "45 0.",
                    "sid": 184,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 5 0.6 25 0.4 59 5 0.",
                    "sid": 185,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "45 0.4 74 6 0.6 757 T 5 0.6 11 1 0.3 137 0 . 5 0.7 234 0.4 31 4 0.3 137 0.1 76 5 0.6 667 0.5 05 7 0.3 137 0.2 60 9 0.6 939 T 6 0.5 63 6 0.8 947 0 . 6 0.8 605 0.5 43 8 0.8 947 0.1 05 3 0.6 491 0.5 53 6 0.8 947 0.1 79 1 0.",
                    "sid": 186,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "74 AV G 0.5 89 9 0.6 086 0.6 05 5 0.8 028 0.5 05 4 0.6 086 0.2 17 5 0.6 283 0.5 42 6 0.6 086 0.3 15 5 0.7 034 Table 4: Precision, Recall, and F1-score of Engkoo, Google, and Ours with head and tail datasets M et ho d P r e c i s i o n R e c a l l F 1 s c o r e h e a d t a i l d i f f he ad t a i l d i f f h e a d t a i l d i f f En gk oo 0.",
                    "sid": 187,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "60 82 0.",
                    "sid": 188,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "58 54 0.",
                    "sid": 189,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "02 29 0.",
                    "sid": 190,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "59 0.",
                    "sid": 191,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "47 06 0.",
                    "sid": 192,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "11 94 0.",
                    "sid": 193,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "59 90 0.",
                    "sid": 194,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "52 17 0.",
                    "sid": 195,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "07 72 G oo gl e 0 . 7 5 0.",
                    "sid": 196,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "55 88 0.",
                    "sid": 197,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19 12 0.",
                    "sid": 198,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "75 0.",
                    "sid": 199,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "55 88 0.",
                    "sid": 200,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19 12 0 . 7 5 0.",
                    "sid": 201,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "55 88 0.",
                    "sid": 202,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19 12 O u r s 0.",
                    "sid": 203,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "84 62 0.",
                    "sid": 204,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "78 12 0.",
                    "sid": 205,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "06 49 0.",
                    "sid": 206,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "66 0.",
                    "sid": 207,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "61 27 0.",
                    "sid": 208,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "04 73 0.",
                    "sid": 209,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "74 16 0.",
                    "sid": 210,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "68 68 0.",
                    "sid": 211,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "05 48 veloped a graph alignment algorithm that iteratively reinforces the matching similarity exploiting relational similarity and then extracts correct matches.",
                    "sid": 212,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our evaluation results empirically validated the accuracy of our algorithm over real-life datasets, and showed the effectiveness on our proposed perspective.",
                    "sid": 213,
                    "ssid": 39,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "",
            "sents": [
                {
                    "text": "This work was supported by Microsoft Research Asia NLP theme funding and MKE (Ministry of Knowledge Economy), Korea, under the ITRC (Information Technology Research Center) support program supervised by the IITA (Institute for Information Technology Advancement) (IITA2009- C10900902-0045).",
                    "sid": 214,
                    "ssid": 40,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}