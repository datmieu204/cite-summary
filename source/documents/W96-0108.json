{
    "ID": "W96-0108",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "This paper describes an automatic, context-sensitive, word-error correction system based on statistical language modeling (SLM) as applied to optical character recognition (OCR) post\u00ad processing.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system exploits information from multiple sources, including letter n-grams, character confusion probabilities, and word-bigram probabilities.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Letter n-grams are used to index the words in the lexicon.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a sentence to be corrected, the system decomposes each string in the sentence into letter n-grams and retrieves word candidates from the lexicon by comparing string n-grams with lexicon-entry n-grams.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The retrieved candidates are ranked by the conditional probability of matches with the string, given character confusion probabilities.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the word-bigram model and Viterbi algorithm are used to determine the best scoring word sequence for the sentence.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system can correct non-word errors as well as real-word errors and achieves a 60.2% error reduction rate for real OCR text.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the system can learn the character confusion probabilities for a specific OCR environment and use them in self-calibration to achieve better performance.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Word errors present problems for various text- or speech-based applications such as optical char\u00ad acter recognition (OCR) and voice-input computer interfaces.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, though current OCR technology is quite refined and robust, sources such as old books, poor-quality (nth-generation) photocopies, and faxes can still be difficult to process and may cause many OCR errors.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For OCR to be truly useful in a wide range of applications, such as office automation and information retrieval systems, OCR reliability must be improved.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A method for the automatic correction of OCR errors would be clearly beneficial.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Essentially, there are two types of word errors: non-word errors and real-word errors.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A non\u00ad word error occurs when a word in a source text is interpreted (under OCR) as a string that does not correspond to any valid word in a given word list or dictionary.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A real-word error occurs when a source-text word is interpreted as a string that actually does occur in the dictionary, but is not identical with the source-text word.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, if the source text \"John found the man\" is rendered as \"John fomd he man\" by an OCR device, then \"fomd\" is a non-word error and \"he\" is a real-word error.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, non-word errors will never correspond to any dictionary entries and will include wildly incorrect strings (such as\"# &&\") as well as misrecognized alphanumeric sequences (such as \"BN234\" for \"8N234\").",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, some non-word errors might become real\u00ad word errors if the size of the word list or dictionary increases.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(For example, the word \"ruel\"1 might count as a non-word error for the source-text word \"rut\" if a small dictionary is used for reference, but count as a real-word error if an unabridged dictionary is used.)",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While non-word errors might be corrected without considering the context in which the error occurs, a real-word error can only be corrected by taking context into account.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problems of word-error detection and correction have been studied for several decades.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A good survey in this area can be found in [Kukich 1992].",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most traditional word-correction techniques concentrate on non-word error correction and do not consider the context in which the error appears.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently, statistical language models (SLMs) and feature-based methods have been used for context-sensitive spelling-error correction.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, Atwell and Elliittm [1987] have used a part-of-speech (POS) tagging method to detect the real-word errors in text.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mays and colleagues [1991] have exploited word trigrams to detect and correct both the non-word and real-word errors that were artificially generated from 100 sentences.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Church and Gale [1991] have used a Bayesian classifier method to improve the performance for non-word error correction.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Golding [1995] has applied a hybrid Bayesian method for real-word error correction and Golding and Schabes [1996] have combined a POS trigram and Bayesian methods for the same purpose.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal of the work described here is to investigate the effectiveness and efficiency of SLM\u00ad based methods applied to the problem of OCR error correction.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since POS-based methods are not effective in distinguishing among candidates with the same POS tags and since methods based on word-trigram models involve extensive training data and require that huge word-trigram tables be available at run time, we used a word-bigram SLM as the first step in our investigation.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we describe a system that uses a word-bigram SLM technique to correct OCR errors.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system takes advantage of information from multiple sources, including letter n\u00ad grams, character confusion probabilities, and word bigram probabilities, to effect context-based word error correction.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It can correct non-word as well as real-word errors.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the system can learn the character confusion probability table for a specific OCR environment and use it to achieve better performance.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the approach. ",
            "number": "2",
            "sents": [
                {
                    "text": "2.1 Problem Statement.",
                    "sid": 35,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problem of context-based OCR word-error correction can be stated as follows: Let L = { w 1, w2 , \u2022\u2022\u2022 , wm} be the set of all the words in a given lexicon.",
                    "sid": 36,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For an input sentence, S = s 1 , \u2022\u2022\u2022,sn, produced as the output of an OCR device, where s 1 , \u2022\u2022\u2022,sn are character strings separated by spaces, find the best word sequence, vV = wb '11'2, \u2022\u2022\u2022 , Wn, for W; E L, that maximizes the probability pr(lVjS): (1) 1\"Ruel\" is an obscure French-derivative word meaning the space between a bed and the wall.",
                    "sid": 37,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using Bayes' formula, we can rewrite 1as: argmaxw(pr(WIS)) pr(W) * pr(SIW)) argmaxw ( pr(S) argmaxw(pr(W) * pr(SIW)) (2) The probability pr(W) is given by the language model and can be decomposed as: n pr(W) = IIpr(w;lw1,i-1) i=1 (3) wherepr( w;jw1,;_1) is the probability thattheword w; appears given thatw1, w2 , \u2022\u2022\u2022 , w;_1 appeared previously.",
                    "sid": 38,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a word-bigram language model, we assume that the probability that a word w; will appear is affected only by the immediately preceding word.",
                    "sid": 39,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, (4) and n pr ( W ) = IT pr ( w; jw; 1) i = 1 (5) The conditional probability, pr(SIW), reflects the channel (processing) characteristics of the OCR environment.",
                    "sid": 40,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If we assume that strings produced under OCR are independent of one another, we have the following formula: n pr(SIW) = ITpr(s;lw;) i=l So, w argmaxw(pr(W) * pr(SIW)) n argmaxw(ITpr( w;jw;-1) * pr(s;lw;)) i=l (6) (7) Thus, the problem of calculatingW is reduced to estimating the word-bigram probability, pr( w; lw;_1), and the word confusion probability, pr( s; Iw;).",
                    "sid": 41,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word-bigram probability, pr( w; Iw;-1), can be estimated by a maximum likelihood estimator (MLE): prML ( I ) = c( will w;) W; Wi1 c(wi1) where c( w;_1) is the number of times that wi_1 occurs in the text and c( will wi) is the number of times that the word bignim (will w;) occurs in the text.",
                    "sid": 42,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the estimatation of unseen bigrams is a problem.",
                    "sid": 43,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use a back-off model similar to that described in [Dagan & Pereira 1994] to estimate the word-bigram probabilities in our system.",
                    "sid": 44,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If we already have estimates of the probabilities pr( w;lw;-1) and pr( s;jw;), the Viterbi algo\u00ad rithm [Chamiak 1993] could be used to determine the best word sequence for the given sentence.",
                    "sid": 45,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Details of the back-off model and Viterbi algorithm can be found in [Dagan & Pereira 1994] and [Charniak 1993].",
                    "sid": 46,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2 Estimate of Channel Probabilities and Learning of Character Confusion Table.",
                    "sid": 47,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The probability pr( slw )-the conditional probability that, given a word w, it is recognized by the OCR software as the string scan be estimated by the confusion probabilities of the characters in s if we assume that character recognition in OCR is an independent process.",
                    "sid": 48,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that an OCR string is generated from the original word by one or more of the following operations: (a) delete a character; (b) insert a character; or (c) substitute one character for another.",
                    "sid": 49,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Under such circumstances, a dynamic programming method can be used to determine the operations that maximize the conditional probability when transforming the original word to the OCR string, given a character confusion probability table.",
                    "sid": 50,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let t 1 ,t 2 \u2022\u2022\u2022 t; be the first i characters of the string that is produced by the OCR process for a source word s and let s1 , s2 \u2022\u2022\u2022 si be the first j actual characters of s. Define pr( ilj) to be the conditional probability that the substring s1,i is recognized as substring h,; by the OCR process, i.e., pr(t 1 ,;is 1 ,j)\u00b7 The dynamic programming recurrence is given as follows: pr(i- llj) * pr(ins(t;)) pr(ilj) =max pr(ilj1) * pr(del(si)lsi) pr(i- llj- 1) * pr(t;lsi) (8) where pr( ins(y)) is the probability that letter y is inserted.",
                    "sid": 51,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "pr(del(y)IY) is the probability that letter y is deleted.",
                    "sid": 52,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "pr(xly) is the probability that letter y is replaced by letter x. For example, suppose that source word \"flag\" is recognized as \"flo\" by an OCR device.",
                    "sid": 53,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For\u00ad mula 8 may determine that a sequence of four operations-(!}substitute \"f\" for \"f\"; (2) substitute \"1\" for \"1\"; (3) substitute \"a\" for \"o\", and (4) delete \"g\"-maximizes the conditional probability pr(\"flo\"l\"flag\").",
                    "sid": 54,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then the probability of \"flag\" being rendered as \"flo\" can be estimated as: pr(\"flo\"l\"flag\") = pr(\"f\"l\"f\") * pr(\"l\"l\"l\") * pr(\"o\"l\"a\") * pr(del(\"g\")l\"g\") This method is similar to what was described in [Wagner 1974] where the minimum edit distance between two strings was computed.",
                    "sid": 55,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The minimum edit distance is the minimum number of oper\u00ad ations that transform the source string to the target string.",
                    "sid": 56,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that to effect spelling correction, we could include character transposition probabilities.",
                    "sid": 57,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If we have no information about the character confusion probabilities, we can estimate them as: pr(ylx) { a ify=x 1-;t otherwise (9) pr( del( x )lx) = pr(ins(x)) = 1-a (10) where N is the total number of printable characters.",
                    "sid": 58,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The estimator a can be regarded as the probability that a given character is correctly recognized.",
                    "sid": 59,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experiments show that system performance is very sensitive to the value of a, especially for real-word error correction.",
                    "sid": 60,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, if a is very high, then the probability pr( sis) will be too high to be affected by subsequent processing and will not be changed.",
                    "sid": 61,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand if a is very low, some correct words may be detected as real-word errors and will be changed.",
                    "sid": 62,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If we have both the original text and the corresponding OCR output and if we assume that the errors made by a particular OCR system are not random (but semi-deterministic), we can count the cases of substitution, deletion, and insertion using a method similar to computing the minimum edit distance between strings [Wagner 1974] and we can estimate the probabilities using formulas similar to those in [Church & Gale 1991]: pr(ylx) = num(sub(x, y))jnum(x) (11) pr( del (x) ) n u m ( d e l ( x ) ) j n u m ( x ) (12 ) pr( ins (y) ) n u m ( i n s ( y ) ) j n u m ( < a l l l e t t e r s > ) (13 ) Obviously, in practice, we typically do not have the original text to compare to the OCR text or to use for correction.",
                    "sid": 63,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, as noted in [Liu et al. 1991], the character confusion characteristics are heavily dependent on the OCR environment, encompassing everything from the performance biases of the specific OCR software to the size of characters in the source text, fonts used, individual character types, and print quality of the text being processed.",
                    "sid": 64,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is not feasible to train on texts to acquire character confusion probabilities for each OCR environment.",
                    "sid": 65,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current system employs an iterative learning1rom-correcting technique that treats the cor\u00ad rected OCR text as an approximation of the original text.",
                    "sid": 66,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system starts by assuming all characters are equally likely to be misrecognized (with some uniform, small probability) and learns the character confusion probabilities by comparing the OCR text to the corrected OCR text after each pass.",
                    "sid": 67,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then the learned character confusion probabilities are used for the next pass processing (feedback processing).",
                    "sid": 68,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This method proves to be quite effective in improving system performance.",
                    "sid": 69,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.3 Generation of Word Candidates for a Given String.",
                    "sid": 70,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ideally, each word, w, in the lexicon should be compared to a given OCR string, s, to compute the conditional probability, pr( wls).",
                    "sid": 71,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, this approach would be computationally too expensive.",
                    "sid": 72,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, the system operates in two steps, first to generate the candidates and then to specify the maximal number of candidates, N, to be considered for the correction of an OCR string.",
                    "sid": 73,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In step 1, the system retrieves a large list of word candidates for a given string.",
                    "sid": 74,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To nominate candidates, we use a vector space information retrieval technique [Salton 1989]: all the words in the lexicon are indexed by letter n-grams and the (OCR) string, also parsed into letter n-grams, is treated as a query over the database of lexicon entries.",
                    "sid": 75,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, all words (or OCR strings) are indexed by their letter trigrams, including the 'beginning' and 'end' spaces surrounding the string.",
                    "sid": 76,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Words of four or fewer characters are also indexed by their letter bigrams.",
                    "sid": 77,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example: \"the\" \"example\" => {#th, the, he#, #t, th, he, e#} => {#ex, exa, xam, mpl, ple, le#} A given OCR string to be corrected is represented by a vector containing its letter n-grams.",
                    "sid": 78,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the vector as the query, the lexicon words that are similar to the word error are retrieved, giving a large list of candidate correct forms.",
                    "sid": 79,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Candidates must share at least some features with the input string (query).",
                    "sid": 80,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A ranked list can be generated by scoring matches using a simple term frequency (TF) count-the number of matches between the query vector and then-gram vector of a candidate word.",
                    "sid": 81,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, given the string: \"exanple\" => {#exanple#} => {#ex, exa, xan, anp, npl, ple, le#} the word \"example\" is a candidate: \"example\" :::} {#example#} :::} {#ex, exa, xam, amp, mpl, ple, le#} Since the two items share four letter n-grams-\"#ex\", \"exa\", \"ple\", and \"le#\"-the TF score of the candidate word \"example\" for the input string \"exanple\" is four.",
                    "sid": 82,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note also that the TF score can be used to establish a threshold or cutoff score to limit the number of candidates to consider.",
                    "sid": 83,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In step 2, the system re-ranks the words in the candidate list using channel probabilities as described above.",
                    "sid": 84,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On average, the system generates several hundred candidates for a given string.",
                    "sid": 85,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Only the first N candidates are retained for context-based word-error correction.",
                    "sid": 86,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.4 The Word Correction System for OCR Post-Processing.",
                    "sid": 87,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The architecture of the word correction system for OCR post-processing is given in Figure 1.",
                    "sid": 88,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ o_c_R T_e_x_t ] J Candidate Generation Lexicon I / Candidate Retrieval J Character Confusion Candidate Ranking I Table [ Word Bigram l ...",
                    "sid": 89,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maximum Likelihood Table Word Sequence Finding Feedback Corrected OCR Text t Figure 1: System Architecture The lexicon is generated from the training text; it includes all the words in the training set with frequency greater than the preset threshold.",
                    "sid": 90,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The words in the lexicon are indexed by letter n-grams as described in the previous section.",
                    "sid": 91,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The overall process for correcting a sentence is as follows: 1.",
                    "sid": 92,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Read a sentence from the input OCR text..",
                    "sid": 93,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 94,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Retrieve up to lv1 candidates from the lexicon for each possible error.",
                    "sid": 95,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Rerank the lv1.",
                    "sid": 96,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "candidates by their conditional probabilities to the error.",
                    "sid": 97,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Keep only the top N candidates for the next processing step.",
                    "sid": 98,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(In the current system, lv1 is 10,000 and N is 10.)",
                    "sid": 99,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 100,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Use the Viterbi algorithm to get the best word sequence for the strings in the sentence..",
                    "sid": 101,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2 illustrates the alternative choices and the optimal path found during the processing (correcting) of the sentence \"john fomd he man\".",
                    "sid": 102,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Original Sentence: John found the man. Input Sentence: john fornd he man. Corrected Sentence: John found the man. john famed he Joh ------:::::>:;:;.",
                    "sid": 103,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "found ::::=:==---\u00ad fond ford man man > an may Sohn jobs joint job Johns for form forms food force He The de her she De can J a n m a n y m e n S a n Man Kahn sound Le van Best Word Sequence: John found the man. Figure 2: Process of Correcting a Sentence The system requires several passes to correct an OCR text.",
                    "sid": 104,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first pass, the system has no information on the character confusion probabilities, so it will assume a prior belief a as the probability that a character is correctly recognized.",
                    "sid": 105,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system distributes the rest of the probability uniformly among other events.",
                    "sid": 106,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Cf.",
                    "sid": 107,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Formula 9.)",
                    "sid": 108,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In each feedback step, the system first generates a character confusion probability table by comparing the OCR text to the corrected OCR text from the last pass.",
                    "sid": 109,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It uses the new confusion table for the next-pass correction of the OCR text.",
                    "sid": 110,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 1n its non-word error mode of operation, the system treats every word that does not match a lexicon entry as a possible error.",
                    "sid": 111,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In its non-word and real-word error mode, the system treats every word as though it were a possible error.",
                    "sid": 112,
                    "ssid": 78,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments and results. ",
            "number": "3",
            "sents": [
                {
                    "text": "To test our OCR-error-correction process, we used a set of electronic documents from the ZiffDavis (ZIFF) news wire.3 The documents in the corpus are business articles in the domain of computer science and computer engineering.",
                    "sid": 113,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used 90% of the collection for training and the remaining 10% for testing.",
                    "sid": 114,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system created a lexicon and collected word-bigram sequences and statistics from the training data.",
                    "sid": 115,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Words or word-bigrams with frequency less than three were discarded.",
                    "sid": 116,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting lexicon contained about 100,000 words; these were indexed using 34,847letter n-grams.",
                    "sid": 117,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting word-bigram table had about 1,000,000 entries.",
                    "sid": 118,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Seventy pages of ZIFF data in the test set were printed in 7-point Times font.",
                    "sid": 119,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We degraded the print quality of the documents by photocopying them on a 'light' setting.",
                    "sid": 120,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The photocopies were then scanned by a Fujitsu 3097E scanner and the resulting images were processed by Xerox Textbridge OCR software.",
                    "sid": 121,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The set of documents contained 55,699 strings and the overall word error rate after OCR processing was 22.9% (12,760).",
                    "sid": 122,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For literal words in the source (only letter sequences, not alpha\u00ad numeric ones), the error rate was lower, 14.7% (8,198).",
                    "sid": 123,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 gives the number of real-word and non-word errors for literal words in the OCR data.",
                    "sid": 124,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "N on W or d Er ro rs Real W or d Er ro rs T ot al Er ro rs N u m be r 6 , 5 0 6 1 , 6 9 2 8 , 1 9 8 % 7 9 . 4 2 0 . 6 1 0 0 Table 1: OCR Errors Originating from Literal Words We conducted three experiments: 1.",
                    "sid": 125,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Isolated-Word Error Correction: The system used only channel probabilities without consid\u00ad.",
                    "sid": 126,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ering context information, i.e., it always selected the candidate with the highest rank in the candidates list to correct a given OCR string.",
                    "sid": 127,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 128,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Context-Dependent Non-Word Error Correction: The system used context to correct strings that.",
                    "sid": 129,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "did match valid lexicon words.",
                    "sid": 130,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 131,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Context-Dependent Non- and Real-Word Error Correction: The system treated all input strings.",
                    "sid": 132,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "as possible errors and tried to correct them by taking into account the contexts in which the strings appeared.",
                    "sid": 133,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In each experiment, the system conducted four correction passes: one initial pass with prior probability a= 0.99 and three feedback passes.",
                    "sid": 134,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results are given in Tables 2, 3, and 4.",
                    "sid": 135,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all cases, we considered only those strings whose correct forms are literal words (not alpha-numerics).",
                    "sid": 136,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that errors can be introduced by the system when it incorrectly changes a correct word in the OCR text into another word.",
                    "sid": 137,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, we distinguish two types of errors introduced by the system: errors caused by changing correct 3The ZIFF collection is distributed as part of the data used in the Text Retrieval Conference (TREC) evaluations.",
                    "sid": 138,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpus contains about 33 million words.",
                    "sid": 139,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "unknown words and errors caused by changing correct lexicon words.",
                    "sid": 140,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The error reduction rate was calculated by subtracting total errors from 8,198 and dividing by 8,198.",
                    "sid": 141,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system, running unoptimized code on a 128MHz DECalpha processor, processed the test corpus at a rate of about 200 words (strings) per second for experiments 1 and 2; and 30 words (strings) per second for experiment 3.",
                    "sid": 142,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P a s sNon Word Error sReal Word Errors Int ro du ce d Err ors To tal Err ors E r r o r R ed uc tio n( % ) Re ma in Co rre cte d Re ma in Co rre cte d Un kn ow n W ds Le x W ds F i r s t 3, 0 4 9 3 , 4 5 7 1, 6 9 2 0 1 8 2 0 4, 92 3 3 9 . 9 Fe ed back 1 2, 8 1 6 3 , 6 9 0 1, 6 9 2 0 1 8 2 0 4, 69 0 4 2 . 8 Fe ed back 2 2, 7 9 1 3 , 7 1 5 1, 6 9 2 0 1 8 2 0 4, 66 5 4 3 . 1 Fe ed back 3 2, 7 8 4 3 , 7 2 2 1, 6 9 2 0 1 8 2 0 4, 65 8 4 3 . 2 Table 2: Results from Isolated-Word Error Correction P a s sNon Word Error sReal Word Errors Int ro du ce d Err ors T ot al Er ror s E r r o r R ed uc tio n( % ) Re ma in Co rre cte d Re ma in Co rre cte d Un kn ow n W ds Le x W ds F i r s t 2, 6 8 4 3 , 8 2 2 1, 6 9 2 0 1 8 2 0 4, 55 8 4 4 . 4 Fe ed back 1 1, 9 7 2 4 , 3 5 4 1, 6 9 2 0 1 8 2 0 3, 84 6 5 3 . 1 Fe ed back 2 1 , 9 4 3 4 , 5 6 3 1, 6 9 2 0 1 8 2 0 3, 81 7 5 3 . 4 Fe ed back 3 1, 9 4 8 4 , 5 5 8 1, 6 9 2 0 1 8 2 0 3, 82 2 5 3 . 4 Table 3: Results from Context-Dependent Non-Word Error Correction P a s sNon Word Error sReal Word Errors Int ro du ce d Err ors T ot al Err ors E r r o r R ed uc ti on ( % ) Re ma in Co rre cte d Re ma in Co rre cte d Un kn ow n W ds Le x W ds F i r s t 2, 5 2 9 3 , 9 7 7 1, 2 2 5 4 6 7 1 8 2 5 4 3, 99 0 5 1 . 3 Fe ed back 1 1, 9 7 8 4 , 5 2 8 1, 0 3 1 6 6 1 1 8 2 1 1 9 3, 31 0 5 9 . 6 Fe ed back 2 1, 9 3 5 4 , 5 7 1 1, 0 0 8 6 8 4 1 8 2 1 4 1 3, 26 6 6 0 . 2 Fe ed ba ck3 1 , 9 2 6 4 , 5 8 0 1 , 0 1 5 6 7 7 1 8 2 1 4 7 3, 27 0 6 0 . 1 Table 4: Results from Context-Dependent Real- and Non-Word Error Correction",
                    "sid": 143,
                    "ssid": 31,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "analysis. ",
            "number": "4",
            "sents": [
                {
                    "text": "Based on the results, we can see that the predominant, positive effect in correction occurs in the first pass.",
                    "sid": 144,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Performance also improves significantly in the first feedback process, as the system learns the character confusion probabilities by correcting the OCR text.",
                    "sid": 145,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second and third feedback steps have only slight effect on the error reduction rates.",
                    "sid": 146,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Indeed, in experiment 3, the result from the third feedback pass is actually worse than that from the second feedback pass.",
                    "sid": 147,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These results indicate that an initial pass followed by two feedback passes may optimize the method.",
                    "sid": 148,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the following discussion, we compare the three experiments using the results obtained from the second feedback step (Feedback-2).",
                    "sid": 149,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As we might expect, the results from the context-based experiments are much better than those from the isolated-word experiment.",
                    "sid": 150,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The error reduction rates in experiments 2 and 3 are, respectively, 10.3% and 17.1% higher than the rate in experiment 1.",
                    "sid": 151,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This indicates that even a modest (e.g., bigram-based) representation of context is useful in selecting the best candidates for word-error correction.",
                    "sid": 152,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Inall three experiments, the system introduced 182 new errors due to false corrections of words that were not in the lexicon.",
                    "sid": 153,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Recall that the system lexicon is based on the words derived from the training corpus; some words may be present in the test corpus that are not in the training corpus.)",
                    "sid": 154,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whenever the system encounters an unknown word, it treats it as a non-word error and attempts to correct it.",
                    "sid": 155,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In such cases, the system replaces the presumed non-word error with a word from its lexicon.",
                    "sid": 156,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, for example, if the system encounters the word \"MobileData\" (a correct name) in the OCR output, but does not have \"MobileData\" in its lexicon, it might change \"MobileData\" to \"MobileComm\" (a word that does exist in the training corpus lexicon).",
                    "sid": 157,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of course, such problems in processing unknown words are not unique to OCR error correction; they represent a general problem for all natural-language processing tasks.",
                    "sid": 158,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown by experiment 3, when the system uses context-based non- and real-word error correction, it achieves a total error reduction rate of 60.2%.",
                    "sid": 159,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is 6.8% higher than the rate achieved in the context-based non-word experiment.",
                    "sid": 160,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The improvement in performance is gained principally from the reduction of the real-word errors.",
                    "sid": 161,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although the system introduces additional errors-since all the strings in the OCR text are treated as possible errors and subject to change-the number of corrected real-word errors far exceeds the number of real-word errors introduced.",
                    "sid": 162,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the second feedback pass, for example, the system introduced 141 new errors by changing correct lexicon words into other lexicon words.",
                    "sid": 163,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, the system properly corrected 684 real errors-32.1% of all the real errors.",
                    "sid": 164,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corrected OCR text, therefore, has 543 fewer real-word errors than the original OCR text.",
                    "sid": 165,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Certain types of errors in the source or OCR-output text present systematic problems for our approach, highlighting the limitations of the system.",
                    "sid": 166,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, because the process is based on the structural definition of a word (viz., a character sequence 'between white space')-not a morphological one-any errors that obscure word boundaries will defy correction.",
                    "sid": 167,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, run-on errors (e.g., \"of the\"/\"ofthe\") and split-word errors (\"training\"/\"train ng\") cannot be corrected.",
                    "sid": 168,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the use of a vector-space querying to find candidate lexical entries\u00ad including our special approach to word decomposition and scoring an present problems when processing some OCR errors, especially short strings.",
                    "sid": 169,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, if \"both\" (in the source) is \u00b7rendered as \"hotn\" (in the OCR text), it is not possible for the system to generate \"both\" as one of the high-ranked candidates-they share only one feature, the bigram \"ot\"-despite the fact that the conditional probability pr(\"hotn\"l\"both\") might be high.",
                    "sid": 170,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the system suffers from the common limitation of word bigram or trigram models in that it cannot capture discourse properties of context, such as topic and tense, which are sometimes required to select the correct word.",
                    "sid": 171,
                    "ssid": 28,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "5",
            "sents": [
                {
                    "text": "The system we have created uses information from a variety of sources-letter n-grams, charac\u00ad ter confusion probabilities, and word-bigram probabilities-to realize context-based, automatic, word-error correction.",
                    "sid": 172,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It can correct non-word errors as well as real-word errors.",
                    "sid": 173,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system can also learn character confusion probability tables by correcting OCR text and use such information to achieve better performance.",
                    "sid": 174,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, for complete (real- and non-word) error correction, it achieved a 60.2% rate of error reduction.",
                    "sid": 175,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The techniques we have used are subject to certain systematic problems.",
                    "sid": 176,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we believe they will prove to be useful not only in improving the quality of OCR processing, but also in enhancing a variety of information retrieval applications.",
                    "sid": 177,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In future work, we plan to explore different heuristics to deal with word boundary problems and to incorporate other models of context representation, including both SLM approaches, such as word trigram models, and simple discourse structures.",
                    "sid": 178,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgements",
            "number": "",
            "sents": [
                {
                    "text": "We thank Natasa MilicFrayling and an anonymous reviewer for their excellent comments on an earlier version of this paper.",
                    "sid": 179,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Naturally, the authors alone are responsible for any errors or omissions in the current version.",
                    "sid": 180,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}