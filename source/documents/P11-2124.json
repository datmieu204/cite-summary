{
    "ID": "P11-2124",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "We experiment with extending a lattice parsing methodology for parsing Hebrew (Goldberg and Tsarfaty, 2008; Golderg et al., 2009) to make use of a stronger syntactic model: the PCFG-LA Berkeley Parser.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show that the methodology is very effective: using a small training set of about 5500 trees, we construct a parser which parses and segments unsegmented Hebrew text with an F-score of almost 80%, an error reduction of over 20% over the best previous result for this task.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This result indicates that lattice parsing with the Berkeley parser is an effective methodology for parsing over uncertain inputs.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Most work on parsing assumes that the lexical items in the yield of a parse tree are fully observed, and correspond to space delimited tokens, perhaps after a deterministic preprocessing step of tokenization.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While this is mostly the case for English, the situation is different in languages such as Chinese, in which word boundaries are not marked, and the Semitic languages of Hebrew and Arabic, in which various particles corresponding to function words are agglutinated as affixes to content bearing words, sharing the same space-delimited token.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the Hebrew token bcl1 can be interpreted as the single noun meaning \u201conion\u201d, or as a sequence of a preposition and a noun b-cl meaning \u201cin (the) shadow\u201d.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In such languages, the sequence of lexical 1 We adopt here the transliteration scheme of (Sima\u2019an et al.,.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2001) items corresponding to an input string is ambiguous, and cannot be determined using a deterministic procedure.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we focus on constituency parsing of Modern Hebrew (henceforth Hebrew) from raw unsegmented text.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A common method of approaching the discrepancy between input strings and space delimited tokens is using a pipeline process, in which the input string is pre-segmented prior to handing it to a parser.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The shortcoming of this method, as noted by (Tsarfaty, 2006), is that many segmentation decisions cannot be resolved based on local context alone.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rather, they may depend on long distance relations and interact closely with the syntactic structure of the sentence.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, segmentation decisions should be integrated into the parsing process and not performed as an independent preprocessing step.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Goldberg and Tsarfaty (2008) demonstrated the effectiveness of lattice parsing for jointly performing segmentation and parsing of Hebrew text.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They experimented with various manual refinements of unlexicalized, treebank-derived grammars, and showed that better grammars contribute to better segmentation accuracies.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Goldberg et al.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2009) showed that segmentation and parsing ac- curacies can be further improved by extending the lexical coverage of a lattice-parser using an external resource.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently, Green and Manning (2010) demonstrated the effectiveness of lattice-parsing for parsing Arabic.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, we report the results of experiments coupling lattice parsing together with the currently best grammar learning method: the Berkeley PCFG-LA parser (Petrov et al., 2006).",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "704 Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers, pages 704\u2013709, Portland, Oregon, June 1924, 2011.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2011 Association for Computational Linguistics",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "aspects of modern hebrew. ",
            "number": "2",
            "sents": [
                {
                    "text": "Some aspects that make Hebrew challenging from a language-processing perspective are: Affixation Common function words are prefixed to the following word.",
                    "sid": 22,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These include: m(\u201cfrom\u201d) f (\u201cwho\u201d/\u201cthat\u201d) h(\u201cthe\u201d) w(\u201cand\u201d) k(\u201clike\u201d) l(\u201cto\u201d) and b(\u201cin\u201d).",
                    "sid": 23,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several such elements may attach together, producing forms such as wfmhfmf (w-f-m-h- fmf \u201cand-that-from-the-sun\u201d).",
                    "sid": 24,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice that the last part of the token, the noun fmf (\u201csun\u201d), when appearing in isolation, can be also interpreted as the sequence f-mf (\u201cwho moved\u201d).",
                    "sid": 25,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The linear order of such segmental elements within a token is fixed (disallowing the reading w-f-m-h-f-mf in the previous example).",
                    "sid": 26,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the syntactic relations of these elements with respect to the rest of the sentence is rather free.",
                    "sid": 27,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relativizer f (\u201cthat\u201d) for example may attach to an arbitrarily long relative clause that goes beyond token boundaries.",
                    "sid": 28,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To further complicate matters, the definite article h(\u201cthe\u201d) is not realized in writing when following the particles b(\u201cin\u201d),k(\u201clike\u201d) and l(\u201cto\u201d).",
                    "sid": 29,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, the form bbit can be interpreted as either b-bit (\u201cin house\u201d) or b-h-bit (\u201cin the house\u201d).",
                    "sid": 30,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, pronominal elements may attach to nouns, verbs, adverbs, prepositions and others as suffixes (e.g. lqxn(lqxhn, \u201ctook- them\u201d), elihm(elihm,\u201con them\u201d)).",
                    "sid": 31,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These affixations result in highly ambiguous token segmentations.",
                    "sid": 32,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relatively free constituent order The ordering of constituents inside a phrase is relatively free.",
                    "sid": 33,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is most notably apparent in the verbal phrases and sentential levels.",
                    "sid": 34,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, while most sentences follow an SVO order, OVS and VSO configurations are also possible.",
                    "sid": 35,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verbal arguments can appear before or after the verb, and in many ordering.",
                    "sid": 36,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This results in long and flat VP and S structures and a fair amount of sparsity.",
                    "sid": 37,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rich templatic morphology Hebrew has a very productive morphological structure, which is based on a root+template system.",
                    "sid": 38,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The productive morphology results in many distinct word forms and a high out-of-vocabulary rate which makes it hard to reliably estimate lexical parameters from annotated corpora.",
                    "sid": 39,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The root+template system (combined with of an unknown word based on its prefix and suffix, as usually done in other languages.",
                    "sid": 40,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unvocalized writing system Most vowels are not marked in everyday Hebrew text, which results in a very high level of lexical and morphological ambiguity.",
                    "sid": 41,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some tokens can admit as many as 15 distinct readings.",
                    "sid": 42,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agreement Hebrew grammar forces morphological agreement between Adjectives and Nouns (which should agree on Gender and Number and definiteness), and between Subjects and Verbs (which should agree on Gender and Number).",
                    "sid": 43,
                    "ssid": 22,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "pcfg-la grammar estimation. ",
            "number": "3",
            "sents": [
                {
                    "text": "Klein and Manning (2003) demonstrated that linguistically informed splitting of non-terminal symbols in treebank-derived grammars can result in accurate grammars.",
                    "sid": 44,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their work triggered investigations in automatic grammar refinement and state- splitting (Matsuzaki et al., 2005; Prescher, 2005), which was then perfected by (Petrov et al., 2006; Petrov, 2009).",
                    "sid": 45,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model of (Petrov et al., 2006) and its publicly available implementation, the Berkeley parser2, works by starting with a bare-bones treebank derived grammar and automatically refining it in split-merge-smooth cycles.",
                    "sid": 46,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The learning works by iteratively (1) splitting each non-terminal category in two, (2) merging back non-effective splits and (3) smoothing the split non-terminals toward their shared ancestor.",
                    "sid": 47,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of the steps is followed by an EM-based parameter re-estimation.",
                    "sid": 48,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This process allows learning tree annotations which capture many latent syntactic interactions.",
                    "sid": 49,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At inference time, the latent annotations are (approximately) marginalized out, resulting in the (approximate) most probable unannotated tree according to the refined grammar.",
                    "sid": 50,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This parsing methodology is very robust, producing state of the art accuracies for English, as well as many other languages including German (Petrov and Klein, 2008), French (Candito et al., 2009) and Chinese (Huang and Harper, 2009) among others.",
                    "sid": 51,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The grammar learning process is applied to binarized parse trees, with 1st-order vertical and 0th- order horizontal markovization.",
                    "sid": 52,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that in the unvocalized writing system and rich affixation) makes it hard to guess the morphological analyses 2 http://code.google.com/p/berkeleyparser/ Figure 1: Lattice representation of the sentence bclm hneim.",
                    "sid": 53,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Double-circles denote token boundaries.",
                    "sid": 54,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice arcs correspond to different segments of the token, each lattice path encodes a possible reading of the sentence.",
                    "sid": 55,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Notice how the token bclm have analyses which include segments which are not directly present in the unsegmented form, such as the definite article h (13) and the pronominal suffix which is expanded to the sequence fl hm (\u201cof them\u201d, 24, 45).",
                    "sid": 56,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the initial grammar, each of the non-terminal symbols is effectively conditioned on its parent alone, and is independent of its sisters.",
                    "sid": 57,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is a very strong independence assumption.",
                    "sid": 58,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it allows the resulting refined grammar to encode its own set of dependencies between a node and its sisters, as well as ordering preferences in long, flat rules.",
                    "sid": 59,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our initial experiments on Hebrew confirm that moving to higher order horizontal markovization degrades parsing performance, while producing much larger grammars.",
                    "sid": 60,
                    "ssid": 17,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "lattice representation and parsing. ",
            "number": "4",
            "sents": [
                {
                    "text": "Following (Goldberg and Tsarfaty, 2008) we deal with the ambiguous affixation patterns in Hebrew by encoding the input sentence as a segmentation lattice.",
                    "sid": 61,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each token is encoded as a lattice representing its possible analyses, and the token-lattices are then concatenated to form the sentence-lattice.",
                    "sid": 62,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 presents the lattice for the two token sentence \u201cbclm hneim\u201d.",
                    "sid": 63,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each lattice arc correspond to a lexical item.",
                    "sid": 64,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice Parsing The CKY parsing algorithm can be extended to accept a lattice as its input (Chap- pelier et al., 1999).",
                    "sid": 65,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This works by indexing lexical items by their start and end states in the lattice instead of by their sentence position, and changing the initialization procedure of CKY to allow terminal and preterminal sybols of spans of sizes > 1.",
                    "sid": 66,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is then relatively straightforward to modify the parsing mechanism to support this change: not giving special treatments for spans of size 1, and distinguishing lexical items from non-terminals by a specified marking instead of by their position in the chart.",
                    "sid": 67,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We modified the PCFG-LA Berkeley parser to accept lattice input at inference time (training is performed as usual on fully observed treebank trees).",
                    "sid": 68,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice Construction We construct the token lattices using MILA, a lexicon-based morphological analyzer which provides a set of possible analyses for each token (Itai and Wintner, 2008).",
                    "sid": 69,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While being a high-coverage lexicon, its coverage is not perfect.",
                    "sid": 70,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the future, we consider using unknown handling techniques such as those proposed in (Adler et al., 2008).",
                    "sid": 71,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Still, the use of the lexicon for lattice construction rather than relying on forms seen in the treebank is essential to achieve parsing accuracy.",
                    "sid": 72,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical Probabilities Estimation Lexical p(t \u2192 w) probabilities are defined over individual segments rather than for complete tokens.",
                    "sid": 73,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is the role of the syntactic model to assign probabilities to contexts which are larger than a single segment.",
                    "sid": 74,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the default lexical probability estimation of the Berkeley parser.3 Goldberg et al.",
                    "sid": 75,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2009) suggest to estimate lexical probabilities for rare and unseen segments using emission probabilities of an HMM tagger trained using EM on large corpora.",
                    "sid": 76,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our preliminary experiments with this method with the Berkeley parser 3 Probabilities for robust segments (lexical items observed.",
                    "sid": 77,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "100 times or more in training) are based on the MLE estimates resulting from the EM procedure.",
                    "sid": 78,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other segments are assignedsmoothed probabilities which combine the p(w|t) MLE esti mate with unigram tag probabilities.",
                    "sid": 79,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Segments which were not seen in training are assigned a probability based on a single distribution of tags for rare words.",
                    "sid": 80,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Crucially, we restrict each segment to appear only with tags which are licensed by a morphological analyzer, as encoded in the lattice.",
                    "sid": 81,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "showed mixed results.",
                    "sid": 82,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing performance on the test set dropped slightly.When analyzing the parsing results on out-of-treebank text, we observed cases where this estimation method indeed fixed mistakes, and others where it hurt.",
                    "sid": 83,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are still uncertain if the slight drop in performance over the test set is due to overfitting of the treebank vocabulary, or the inadequacy of the method in general.",
                    "sid": 84,
                    "ssid": 24,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments and results. ",
            "number": "5",
            "sents": [
                {
                    "text": "Data In all the experiments we use Ver.2 of the Hebrew treebank (Guthmann et al., 2009), which was converted to use the tagset of the MILA morphological analyzer (Golderg et al., 2009).",
                    "sid": 85,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the same splits as in previous work, with a training set of 5240 sentences (4845724) and a test set of 483 sentences (1483).",
                    "sid": 86,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During development, we evaluated on a random subset of 100 sentences from the training set.",
                    "sid": 87,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unless otherwise noted, we used the basic non-terminal categories, without any extended information available in them.",
                    "sid": 88,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gold Segmentation and Tagging To assess the adequacy of the Berkeley parser for Hebrew, we performed baseline experiments in which either gold segmentation and tagging or just gold segmentation were available to the parser.",
                    "sid": 89,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The numbers are very high: an F-measure of about 88.8% for the gold segmentation and tagging, and about 82.8% for gold segmentation only.",
                    "sid": 90,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This shows the adequacy of the PCFG-LA methodology for parsing the Hebrew treebank, but also goes to show the highly ambiguous nature of the tagging.",
                    "sid": 91,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our baseline lattice parsing experiment (without the lexicon) results in an F-score of around 76%.4 Segmentation \u2192 Parsing pipeline As another baseline, we experimented with a pipeline system in which the input text is automatically segmented and tagged using a state-of-the-art HMM postagger (Goldberg et al., 2008).",
                    "sid": 92,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then ignore the produced tagging, and pass the resulting segmented text as input to the PCFG-LA parsing model as a deterministic input (here the lattice representation is used while tagging, but the parser sees a deterministic, 4 For all the joint segmentation and parsing experiments, we use a generalization of parseval that takes segmentation into account.",
                    "sid": 93,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See (Tsarfaty, 2006) for the exact details.",
                    "sid": 94,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "segmented input).5 In the pipeline setting, we either allow the parser to assign all possible POS-tags, or restrict it to POS-tags licensed by the lexicon.",
                    "sid": 95,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice Parsing Experiments Our initial lattice parsing experiments with the Berkeley parser were disappointing.",
                    "sid": 96,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lattice seemed too permissive, allowing the parser to chose weird analyses.",
                    "sid": 97,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Error analysis suggested the parser failed to distinguish among the various kinds of VPs: finite, non-finite and modals.",
                    "sid": 98,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once we annotate the treebank verbs into finite, non-finite and modals6, results improve a lot.",
                    "sid": 99,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Further improvement was gained by specifically marking the subject-NPs.7 The parser was not able to correctly learn these splits on its own, but once they were manually provided it did a very good job utilizing this information.8 Marking object NPs did not help on their own, and slightly degraded the performance when both subjects and objects were marked.",
                    "sid": 100,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It appears that the learning procedure managed to learn the structure of objects without our help.",
                    "sid": 101,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all the experiments, the use of the morphological analyzer in producing the lattice was crucial for parsing accuracy.",
                    "sid": 102,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results Our final configuration (marking verbal forms and subject-NPs, using the analyzer to construct the lattice and training the parser for 5 iterations) produces remarkable parsing accuracy when parsing from unsegmented text: an F-score of 79.9% (prec: 82.3 rec: 77.6) and seg+tagging F of 93.8%.",
                    "sid": 103,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pipeline systems with the same grammar achieve substantially lower F-scores of 75.2% (without the lexicon) and 77.3 (with the lexicon).",
                    "sid": 104,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For comparison, the previous best results for parsing Hebrew are 84.1%F assuming gold segmentation and tagging (Tsarfaty and Sima\u2019an, 2010)9, and 73.7%F starting from unsegmented text (Golderg et 5 The segmentation+tagging accuracy of the HMM tagger on the Treebank data is 91.3%F. morphological analyzer, but we removed it at first.",
                    "sid": 105,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the verb-type distinction is specified only on the pre-terminal level, and not on the phrase-level.",
                    "sid": 106,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Such markings were removed prior to evaluation..",
                    "sid": 107,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 Candito et al.",
                    "sid": 108,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2009) also report improvements in accuracy when providing the PCFG-LA parser with few manually- devised linguistically-motivated state-splits.",
                    "sid": 109,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 The 84.1 figure is for sentences of length \u2264 40, and thus.",
                    "sid": 110,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "not strictly comparable with all the other numbers in this paper, which are based on the entire test-set.",
                    "sid": 111,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sy st e m Or ac le O O V Ha nd lin g Pr ec Rec F1 Ts arf aty an d Si ma \u2019an 20 10 Go ldb erg et al. 20 09 G ol d Se g+ Ta g No ne \u2013 Le xic on - 84.1 7 3.",
                    "sid": 112,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 74.0 73.8 Se g \u2192 P C FG LA Pi pe lin e Se g \u2192 P C FG LA Pi pe lin e P C FG LA + La ttic e (J oi nt) No ne No ne No ne Tr ee ba nk Le xic on Le xic on 75 .6 74.8 75.2 79 .5 75.2 77.3 82 .3 77.6 79.9 Table 1: Parsing scores of the various systems al., 2009).",
                    "sid": 113,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The numbers are summarized in Table 1.",
                    "sid": 114,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the pipeline system already improves over the previous best results, the lattice-based joint-model improves results even further.",
                    "sid": 115,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, the PCFG- LA+Lattice parser improve results by 6 F-points absolute, an error reduction of about 20%.",
                    "sid": 116,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tagging accuracies are also remarkable, and constitute state- of-the-art tagging for Hebrew.",
                    "sid": 117,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The strengths of the system can be attributed to three factors: (1) performing segmentation, tagging and parsing jointly using lattice parsing, (2) relying on an external resource (lexicon / morphological analyzer) instead of on the Treebank to provide lexical coverage and (3) using a strong syntactic model.",
                    "sid": 118,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Running time The lattice representation effectively results in longer inputs to the parser.",
                    "sid": 119,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is informative to quantify the effect of the lattice representation on the parsing time, which is cubic in sentence length.",
                    "sid": 120,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pipeline parser parsed the 483 pre-segmented input sentences in 151 seconds (3.2 sentences/second) not including segmentation time, while the lattice parser took 175 seconds (2.7 sents/second) including lattice construction.",
                    "sid": 121,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing with the lattice representation is slower than in the pipeline setup, but not prohibitively so.",
                    "sid": 122,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Analysis and Limitations When analyzing the learned grammar, we see that it learned to distinguish short from long constituents, models conjunction parallelism fairly well, and picked up a lot of information regarding the structure of quantities, dates, named and other kinds of NPs.",
                    "sid": 123,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also learned to reasonably model definiteness, and that S elements have at most one Subject.",
                    "sid": 124,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the state- split model exhibits no notion of syntactic agreement on gender and number.",
                    "sid": 125,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is troubling, as we encountered a fair amount of parsing mistakes",
                    "sid": 126,
                    "ssid": 42,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusions and future work. ",
            "number": "6",
            "sents": [
                {
                    "text": "We demonstrated that the combination of lattice parsing with the PCFG-LA Berkeley parser is highly effective.",
                    "sid": 127,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lattice parsing allows much needed flexibility in providing input to a parser when the yield of the tree is not known in advance, and the grammar refinement and estimation techniques of the Berkeley parser provide a strong disambiguation component.",
                    "sid": 128,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we applied the Berkeley+Lattice parser to the challenging task of joint segmentation and parsing of Hebrew text.",
                    "sid": 129,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The result is the first constituency parser which can parse naturally occurring unsegmented Hebrew text with an acceptable accuracy (an F1 score of 80%).",
                    "sid": 130,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many other uses of lattice parsing are possible.",
                    "sid": 131,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These include joint segmentation and parsing of Chinese, empty element prediction (see (Cai et al., 2011) for a successful application), and a principled handling of multiword-expressions, idioms and named-entities.",
                    "sid": 132,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The code of the lattice extension to the Berkeley parser is publicly available.10 Despite its strong performance, we observed that the Berkeley parser did not learn morphological agreement patterns.",
                    "sid": 133,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agreement information could be very useful for disambiguating various constructions in Hebrew and other morphologically rich languages.",
                    "sid": 134,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We plan to address this point in future work.",
                    "sid": 135,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "",
            "sents": [
                {
                    "text": "We thank Slav Petrov for making available and answering questions about the code of his parser, Federico Sangati for pointing out some important details regarding the evaluation, and the three anonymous reviewers for their helpful comments.",
                    "sid": 136,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The work is supported by the Lynn and William Frankel Center for Computer Sciences, BenGurion University.",
                    "sid": 137,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "which would have been solved if the parser were to 10 http://www.cs.bgu.ac.il/\u223cyoavg/software/blatt/ use agreement information.",
                    "sid": 138,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}