{
    "ID": "P06-1006",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Syntactic knowledge is important for pronoun resolution.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traditionally, the syntactic information for pronoun resolution is represented in terms of features that have to be selected and defined heuristically.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the paper, we propose a kernel-based method that can automatically mine the syntactic information from the parse trees for pronoun resolution.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, we utilize the parse trees directly as a structured feature and apply kernel functions to this feature, as well as other normal features, to learn the resolution classifier.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this way, our approach avoids the efforts of decoding the parse trees into the set of flat syntactic features.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental results show that our approach can bring significant performance improvement and is reliably effective for the pronoun resolution task.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Pronoun resolution is the task of finding the correct antecedent for a given pronominal anaphor in a document.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Prior studies have suggested that syntactic knowledge plays an important role in pronoun resolution.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For a practical pronoun resolution system, the syntactic knowledge usually comes from the parse trees of the text.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The issue that arises is how to effectively incorporate the syntactic information embedded in the parse trees to help resolution.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One common solution seen in previous work is to define a set of features that represent particular syntactic knowledge, such as the grammatical role of the antecedent candidates, the governing relations between the candidate and the pronoun, and so on.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These features are calculated by mining the parse trees, and then could be used for resolution by using manually designed rules (Lappin and Leass, 1994; Kennedy and Boguraev, 1996; Mitkov, 1998), or using machine-learning methods (Aone and Bennett, 1995; Yang et al., 2004; Luo and Zitouni, 2005).",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, such a solution has its limitation.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntactic features have to be selected and defined manually, usually by linguistic intuition.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, what kinds of syntactic information are effective for pronoun resolution still remains an open question in this research community.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The heuristically selected feature set may be insufficient to represent all the information necessary for pronoun resolution contained in the parse trees.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we will explore how to utilize the syntactic parse trees to help learning-based pronoun resolution.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, we directly utilize the parse trees as a structured feature, and then use a kernel-based method to automatically mine the knowledge embedded in the parse trees.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The structured syntactic feature, together with other normal features, is incorporated in a trainable model based on Support Vector Machine (SVM) (Vapnik, 1995) to learn the decision classifier for resolution.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Indeed, using kernel methods to mine structural knowledge has shown success in some NLP applications like parsing (Collins and Duffy, 2002; Moschitti, 2004) and relation extraction (Zelenko et al., 2003; Zhao and Grishman, 2005).",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, to our knowledge, the application of such a technique to the pronoun resolution task still remains unexplored.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Compared with previous work, our approach has several advantages: (1) The approach utilizes the parse trees as a structured feature, which avoids the efforts of decoding the parse trees into a set of syntactic features in a heuristic manner.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2) The approach is able to put together the structured feature and the normal flat features in a trainable model, which allows different types of 41 Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 41\u201348, Sydney, July 2006.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2006 Association for Computational Linguistics information to be considered in combination for both learning and resolution.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(3) The approach is applicable for practical pronoun resolution as the syntactic information can be automatically obtained from machine-generated parse trees.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And our study shows that the approach works well under the commonly available parsers.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate our approach on the ACE data set.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental results over the different domains indicate that the structured syntactic feature incorporated with kernels can significantly improve the resolution performance (by 5%\u223c8% in the success rates), and is reliably effective for the pronoun resolution task.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remainder of the paper is organized as follows.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 2 gives some related work that utilizes the structured syntactic knowledge to do pronoun resolution.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 3 introduces the framework for the pronoun resolution, as well as the baseline feature space and the SVM classifier.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 4 presents in detail the structured feature and the kernel functions to incorporate such a feature in the resolution.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 5 shows the experimental results and has some discussion.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, Section 6 concludes the paper.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "2",
            "sents": [
                {
                    "text": "One of the early work on pronoun resolution relying on parse trees was proposed by Hobbs (1978).",
                    "sid": 35,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For a pronoun to be resolved, Hobbs\u2019 algorithm works by searching the parse trees of the current text.",
                    "sid": 36,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, the algorithm processes one sentence at a time, using a left-to-right breadth-first searching strategy.",
                    "sid": 37,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It first checks the current sentence where the pronoun occurs.",
                    "sid": 38,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first NP that satisfies constraints, like number and gender agreements, would be selected as the antecedent.",
                    "sid": 39,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the antecedent is not found in the current sentence, the algorithm would traverse the trees of previous sentences in the text.",
                    "sid": 40,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As the searching processing is completely done on the parse trees, the performance of the algorithm would rely heavily on the accuracy of the parsing results.",
                    "sid": 41,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lappin and Leass (1994) reported a pronoun resolution algorithm which uses the syntactic representation output by McCord\u2019s Slot Grammar parser.",
                    "sid": 42,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A set of salience measures (e.g. Subject, Object or Accusative emphasis) is derived from the syntactic structure.",
                    "sid": 43,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The candidate with the highest salience score would be selected as the antecedent.",
                    "sid": 44,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In their algorithm, the weights of Category: whether the candidate is a definite noun phrase, indefinite noun phrase, pronoun, named-entity or others.",
                    "sid": 45,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Reflexiveness: whether the pronominal anaphor is a reflexive pronoun.",
                    "sid": 46,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Type: whether the pronominal anaphor is a male-person pronoun (like he), female-person pronoun (like she), single gender-neuter pronoun (like it), or plural gender-neuter pronoun (like they) Subject: whether the candidate is a subject of a sentence, a subject of a clause, or not.",
                    "sid": 47,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Object: whether the candidate is an object of a verb, an object of a preposition, or not.",
                    "sid": 48,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Distance: the sentence distance between the candidate and the pronominal anaphor.",
                    "sid": 49,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Closeness: whether the candidate is the candidate closest to the pronominal anaphor.",
                    "sid": 50,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FirstNP: whether the candidate is the first noun phrase in the current sentence.",
                    "sid": 51,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parallelism: whether the candidate has an identical collocation pattern with the pronominal anaphor.",
                    "sid": 52,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1: Feature set for the baseline pronoun resolution system salience measures have to be assigned manually.",
                    "sid": 53,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Luo and Zitouni (2005) proposed a coreference resolution approach which also explores the information from the syntactic parse trees.",
                    "sid": 54,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Different from Lappin and Leass (1994)\u2019s algorithm, they employed a maximum entropy based model to automatically compute the importance (in terms of weights) of the features extracted from the trees.",
                    "sid": 55,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In their work, the selection of their features is mainly inspired by the government and binding theory, aiming to capture the c-command relationships between the pronoun and its antecedent candidate.",
                    "sid": 56,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By contrast, our approach simply utilizes the parse trees as a structured feature, and lets the learning algorithm discover all possible embedded information that is necessary for pronoun resolution.",
                    "sid": 57,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the resolution framework. ",
            "number": "3",
            "sents": [
                {
                    "text": "Our pronoun resolution system adopts the common learning-based framework similar to those by Soon et al.",
                    "sid": 58,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001) and Ng and Cardie (2002).",
                    "sid": 59,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the learning framework, a training or testing instance is formed by a pronoun and one of its antecedent candidate.",
                    "sid": 60,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During training, for each pronominal anaphor encountered, a positive instance is created by paring the anaphor and its closest antecedent.",
                    "sid": 61,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also a set of negative instances is formed by paring the anaphor with each of the non-coreferential candidates.",
                    "sid": 62,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on the training instances, a binary classifier is generated using a particular learning algorithm.",
                    "sid": 63,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During resolution, a pronominal anaphor to be resolved is paired in turn with each preceding antecedent candidate to form a testing instance.",
                    "sid": 64,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This instance is presented to the classifier which then returns a class label with a confidence value indicating the likelihood that the candidate is the antecedent.",
                    "sid": 65,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The candidate with the highest confidence value will be selected as the antecedent of the pronominal anaphor.",
                    "sid": 66,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Feature Space.",
                    "sid": 67,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As with many other learning-based approaches, the knowledge for the reference determination is represented as a set of features associated with the training or test instances.",
                    "sid": 68,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our baseline system, the features adopted include lexical property, morphologic type, distance, salience, parallelism, grammatical role and so on.",
                    "sid": 69,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Listed in Table 1, all these features have been proved effective for pronoun resolution in previous work.",
                    "sid": 70,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Support Vector Machine.",
                    "sid": 71,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In theory, any discriminative learning algorithm is applicable to learn the classifier for pronoun resolution.",
                    "sid": 72,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our study, we use Support Vector Machine (Vapnik, 1995) to allow the use of kernels to incorporate the structured feature.",
                    "sid": 73,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Suppose the training set S consists of labelled vectors {(xi, yi)}, where xi is the feature vector of a training instance and yi is its class label.",
                    "sid": 74,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classifier learned by SVM is f (x) = sgn() yiaix \u2217 xi + b) (1) i=1 where ai is the learned parameter for a support vector xi.",
                    "sid": 75,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An instance x is classified as positive (negative) if f (x) > 0 (f (x) < 0)1.",
                    "sid": 76,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One advantage of SVM is that we can use kernel methods to map a feature space to a particular high-dimension space, in case that the current problem could not be separated in a linear way.Thus the dot-product x1 \u2217 x2 is replaced by a ker nel function (or kernel) between two vectors, that is K (x1, x2).",
                    "sid": 77,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the learning with the normal features listed in Table 1, we can just employ the well-known polynomial or radial basis kernels that can be computed efficiently.",
                    "sid": 78,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the next section we 1 For our task, the result of f (x) is used as the confidence value of the candidate to be the antecedent of the pronoun described by x. will discuss how to use kernels to incorporate the more complex structured feature.",
                    "sid": 79,
                    "ssid": 22,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "incorporating structured syntactic. ",
            "number": "4",
            "sents": [
                {
                    "text": "Information 4.1 Main Idea.",
                    "sid": 80,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A parse tree that covers a pronoun and its antecedent candidate could provide us much syntactic information related to the pair.",
                    "sid": 81,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The commonly used syntactic knowledge for pronoun resolution, such as grammatical roles or the governing relations, can be directly described by the tree structure.",
                    "sid": 82,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other syntactic knowledge that may be helpful for resolution could also be implicitly represented in the tree.",
                    "sid": 83,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, by comparing the common substructures between two trees we can find out to what degree two trees contain similar syntactic information, which can be done using a convolution tree kernel.",
                    "sid": 84,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The value returned from the tree kernel reflects the similarity between two instances in syntax.",
                    "sid": 85,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such syntactic similarity can be further combined with other knowledge to compute the overall similarity between two instances, through a composite kernel.",
                    "sid": 86,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And thus a SVM classifier can be learned and then used for resolution.",
                    "sid": 87,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is just the main idea of our approach.",
                    "sid": 88,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Structured Syntactic Feature.",
                    "sid": 89,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Normally, parsing is done on the sentence level.",
                    "sid": 90,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in many cases a pronoun and an antecedent candidate do not occur in the same sentence.",
                    "sid": 91,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To present their syntactic properties and relations in a single tree structure, we construct a syntax tree for an entire text, by attaching the parse trees of all its sentences to an upper node.",
                    "sid": 92,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Having obtained the parse tree of a text, we shall consider how to select the appropriate portion of the tree as the structured feature for a given instance.",
                    "sid": 93,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As each instance is related to a pronoun and a candidate, the structured feature at least should be able to cover both of these two expressions.",
                    "sid": 94,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generally, the more substructure of the tree is included, the more syntactic information would be provided, but at the same time the more noisy information that comes from parsing errors would likely be introduced.",
                    "sid": 95,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our study, we examine three possible structured features that contain different substructures of the parse tree: Min-Expansion This feature records the minimal structure covering both the pronoun and Min-Expansion Simple-Expansion Full-Expansion Figure 1: structured-features for the instance i{\u201chim\u201d, \u201cthe man\u201d} the candidate in the parse tree.",
                    "sid": 96,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It only includes the nodes occurring in the shortest path connecting the pronoun and the candidate, via the nearest commonly commanding node.",
                    "sid": 97,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, considering the sentence \u201cThe man in the room saw him.\u201d, the struc tured feature for the instance i{\u201chim\u201d,\u201cthe man\u201d} is circled with dash lines as shown in the leftmost picture of Figure 1.",
                    "sid": 98,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Simple-Expansion Min-Expansion could, to some degree, describe the syntactic relationships between the candidate and pronoun.",
                    "sid": 99,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it is incapable of capturing the syntactic properties of the candidate or the pronoun, because the tree structure surrounding the expression is not taken into consideration.",
                    "sid": 100,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To incorporate such information, feature Simple-Expansion not only contains all the nodes in Min-Expansion, but also includes the first-level children of these nodes2.",
                    "sid": 101,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The middle of Figure 1 shows such a feature for i{\u201chim\u201d, \u201dthe man\u201d}.",
                    "sid": 102,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can see that the nodes \u201cPP\u201d (for \u201cin the room\u201d) and \u201cVB\u201d (for \u201csaw\u201d) are included in the feature, which provides clues that the candidate is modified by a prepositional phrase and the pronoun is the object of a verb.",
                    "sid": 103,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Full-Expansion This feature focusses on the whole tree structure between the candidate and pronoun.",
                    "sid": 104,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It not only includes all the and candidate pair.",
                    "sid": 105,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rightmost picture of Figure 1 shows the structure for feature Full- Expansion of i{\u201chim\u201d, \u201dthe man\u201d}.",
                    "sid": 106,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As illus trated, different from in Simple-Expansion, the subtree of \u201cPP\u201d (for \u201cin the room\u201d) is fully expanded and all its children nodes are included in Full-Expansion.",
                    "sid": 107,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that to distinguish from other words, we explicitly mark up in the structured feature the pronoun and the antecedent candidate under consideration, by appending a string tag \u201cANA\u201d and \u201cCANDI\u201d in their respective nodes (e.g.,\u201cNNCANDI\u201d for \u201cman\u201d and \u201cPRPANA\u201d for \u201chim\u201d as shown in Figure 1).",
                    "sid": 108,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.3 Structural Kernel and Composite Kernel.",
                    "sid": 109,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To calculate the similarity between two structured features, we use the convolution tree kernel that is defined by Collins and Duffy (2002) and Moschitti (2004).",
                    "sid": 110,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given two trees, the kernel will enumerate all their subtrees and use the number of common subtrees as the measure of the similarity between the trees.",
                    "sid": 111,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As has been proved, the convolution kernel can be efficiently computed in polynomial time.",
                    "sid": 112,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The above tree kernel only aims for the structured feature.",
                    "sid": 113,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also need a composite kernel to combine together the structured feature and the normal features described in Section 3.1.",
                    "sid": 114,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our study we define the composite kernel as follows: nodes in Simple-Expansion, but also the nodes (beneath the nearest commanding par Kc(x1, x2) = Kn(x1, x2) |Kn(x1, x2)| Kt(x1, x2) \u2217 (2) |Kt(x1, x2)| ent) that cover the words between the candidate and the pronoun3.",
                    "sid": 115,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such a feature keeps the most information related to the pronoun 2 If the pronoun and the candidate are not in the same sentence, we will not include the nodes denoting the sentences before the candidate or after the pronoun.",
                    "sid": 116,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 We will not expand the nodes denoting the sentences other than where the pronoun and the candidate occur.",
                    "sid": 117,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "where Kt is the convolution tree kernel defined for the structured feature, and Kn is the kernel applied on the normal features.",
                    "sid": 118,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both kernels are divided by their respective length4 for normalization.",
                    "sid": 119,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The new composite kernel Kc, defined as the 4 The length of a kernel K is defined as |K (x1 , x2 )| =.",
                    "sid": 120,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "/K (x1 , x1 ) \u2217 K (x2 , x2 ) multiplier of normalized Kt and Kn, will return a value close to 1 only if both the structured features and the normal features from the two vectors have high similarity under their respective kernels.",
                    "sid": 121,
                    "ssid": 42,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments and discussions. ",
            "number": "5",
            "sents": [
                {
                    "text": "5.1 Experimental Setup.",
                    "sid": 122,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our study we focussed on the third-person pronominal anaphora resolution.",
                    "sid": 123,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All the experiments were done on the ACE-2 V1.0 corpus (NIST, 2003), which contain two data sets, training and devtest, used for training and testing respectively.",
                    "sid": 124,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of these sets is further divided into three domains: newswire (NWire), newspaper (NPaper), and broadcast news (BNews).",
                    "sid": 125,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An input raw text was preprocessed automatically by a pipeline of NLP components, including sentence boundary detection, POS-tagging, Text Chunking and Named-Entity Recognition.",
                    "sid": 126,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The texts were parsed using the maximum-entropy- based Charniak parser (Charniak, 2000), based on which the structured features were computed automatically.",
                    "sid": 127,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For learning, the SVM-Light software (Joachims, 1999) was employed with the convolution tree kernel implemented by Moschitti (2004).",
                    "sid": 128,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All classifiers were trained with default learning parameters.",
                    "sid": 129,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance was evaluated based on the metric success, the ratio of the number of correctly resolved5 anaphor over the number of all anaphors.",
                    "sid": 130,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each anaphor, the NPs occurring within the current and previous two sentences were taken as the initial antecedent candidates.",
                    "sid": 131,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those with mismatched number and gender agreements were filtered from the candidate set.",
                    "sid": 132,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, pronouns or NEs that disagreed in person with the anaphor were removed in advance.",
                    "sid": 133,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For training, there were 1207, 1440, and 1260 pronouns with nonempty candidate set found pronouns in the three domains respectively, while for testing, the number was 313, 399 and 271.",
                    "sid": 134,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On average, a pronoun anaphor had 6\u223c9 antecedent candidates ahead.",
                    "sid": 135,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Totally, we got around 10k, 13k and 8k training instances for the three domains.",
                    "sid": 136,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.2 Baseline Systems.",
                    "sid": 137,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 lists the performance of different systems.",
                    "sid": 138,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first tested Hobbs\u2019 algorithm (Hobbs, 1978).",
                    "sid": 139,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 An anaphor was deemed correctly resolved if the found antecedent is in the same coreference chain of the anaphor.",
                    "sid": 140,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "NWire NPaper BNews Hobbs (1978) 66.1 66.4 72.7 NORM 74.4 77.4 74.2 NORM MaxEnt 72.8 77.9 75.3 NORM C5 71.9 75.9 71.6 S Min 76.4 81.0 76.8 S Simple 73.2 82.7 82.3 S Full 73.2 80.5 79.0 NORM+S Min 77.6 82.5 82.3 NORM+S Simple 79.2 82.7 82.3 NORM+S Full 81.5 83.2 81.5 Table 2: Results of the syntactic structured features Described in Section 2, the algorithm uses heuristic rules to search the parse tree for the antecedent, and will act as a good baseline to compare with the learned-based approach with the structured feature.",
                    "sid": 141,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in the first line of Table 2, Hobbs\u2019 algorithm obtains 66%\u223c72% success rates on the three domains.",
                    "sid": 142,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second block of Table 2 shows the baseline system (NORM) that uses only the normal features listed in Table 1.",
                    "sid": 143,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Throughout our experiments, we applied the polynomial kernel on the normal features to learn the SVM classifiers.",
                    "sid": 144,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the table we also compared the SVM-based results with those using other learning algorithms, i.e., Maximum Entropy (Maxent) and C5 decision tree, which are more commonly used in the anaphora resolution task.",
                    "sid": 145,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in the table, the system with normal features (NORM) obtains 74%\u223c77% success rates for the three domains.",
                    "sid": 146,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance is similar to other published results like those by Keller and Lapata (2003), who adopted a similar feature set and reported around 75% success rates on the ACE data set.",
                    "sid": 147,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The comparison between different learning algorithms indicates that SVM can work as well as or even better than Maxent (NORM MaxEnt) or C5 (NORM C5).",
                    "sid": 148,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.3 Systems with Structured Features.",
                    "sid": 149,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The last two blocks of Table 2 summarize the results using the three syntactic structured features, i.e, Min Expansion (S MIN), Simple Expansion (S SIMPLE) and Full Expansion (S FULL).",
                    "sid": 150,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Between them, the third block is for the systems using the individual structured feature alone.",
                    "sid": 151,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can see that all the three structured features per N W i r e N P a p e r B N e w s Se nt en ce Di st an ce (N u m be r of Pr on s) 0 1 2 (1 9 2) (102) (19) 0 1 2 (2 3 7) (147) (15) 0 1 2 (1 7 5) (82) (14) N O R M S S i m p l e N O R M + S S i m p le 8 0.",
                    "sid": 152,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 72.5 26.3 7 9.",
                    "sid": 153,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 70.6 21.1 8 5.",
                    "sid": 154,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 76.5 31.6 8 1.",
                    "sid": 155,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 75.5 33.3 8 7.",
                    "sid": 156,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 81.0 26.7 8 7.",
                    "sid": 157,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 79.6 40.0 8 0.",
                    "sid": 158,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 65.9 50.0 8 9.",
                    "sid": 159,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 70.7 57.1 8 8.",
                    "sid": 160,
                    "ssid": 39,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "74.4\t50.0",
            "number": "6",
            "sents": [
                {
                    "text": "Table 3: The resolution results for pronouns with antecedent in different sentences apart N W i r e N P a p e r B N e w s T y p e ( N u m be r of Pr o ns ) pe rs on neuter (1 7 1) (142) pe rs on neuter (2 5 0) (149) pe rs on neuter (1 5 3) (118) N O R M S S i m p l e N O R M + S S i m p le 8 1 . 9 65.5 8 1 . 9 62.7 8 7 . 1 69.7 8 0 . 0 73.2 8 3 . 2 81.9 8 3 . 6 81.2 7 4 . 5 73.7 8 2 . 4 82.2 8 6.",
                    "sid": 161,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 76.3 Table 4: The resolution results for different types of pronouns form better than the normal features for NPaper (up to 5.3% success) and BNews (up to 8.1% success), or equally well (\u00b11 \u223c 2% in success) for NWire.",
                    "sid": 162,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When used together with the normal features, as shown in the last block, the three structured features all outperform the baselines.",
                    "sid": 163,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Especially, the combinations of NORM+S SIMPLE and NORM+S FULL can achieve significantly6 better results than NORM, with the success rate increasing by (4.8%, 5.3% and 8.1%) and (7.1%, 5.8%, 7.2%) respectively.",
                    "sid": 164,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All these results prove that the structured syntactic feature is effective for pronoun resolution.",
                    "sid": 165,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We further compare the performance of the three different structured features.",
                    "sid": 166,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in Table 2, when used together with the normal features, Full Expansion gives the highest success rates in NWire and NPaper, but nevertheless the lowest in BNews.",
                    "sid": 167,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This should be because feature Full-Expansion captures a larger portion of the parse trees, and thus can provide more syntactic information than Min Expansion or Simple Expansion.",
                    "sid": 168,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, if the texts are less-formally structured as those in BNews, Full- Expansion would inevitably involve more noises and thus adversely affect the resolution performance.",
                    "sid": 169,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By contrast, feature Simple Expansion would achieve balance between the information and the noises to be introduced: from Table 2 we can find that compared with the other two features, Simple Expansion is capable of producing average results for all the three domains.",
                    "sid": 170,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And for this 6 p < 0.05 by a 2-tailed t test.",
                    "sid": 171,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "reason, our subsequent reports will focus on Simple Expansion, unless otherwise specified.",
                    "sid": 172,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As described, to compute the structured feature, parse trees for different sentences are connected to form a large tree for the text.",
                    "sid": 173,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be interesting to find how the structured feature works for pronouns whose antecedents reside in different sentences.",
                    "sid": 174,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this purpose we tested the success rates for the pronouns with the closest antecedent occurring in the same sentence, one-sentence apart, and two-sentence apart.",
                    "sid": 175,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 compares the learning systems with/without the structured feature present.",
                    "sid": 176,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the table, for all the systems, the success rates drop with the increase of the distances between the pronoun and the antecedent.",
                    "sid": 177,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in most cases, adding the structured feature would bring consistent improvement against the baselines regardless of the number of sentence distance.",
                    "sid": 178,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This observation suggests that the structured syntactic information is helpful for both intrasentential and inter- sentential pronoun resolution.",
                    "sid": 179,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We were also concerned about how the structured feature works for different types of pronouns.",
                    "sid": 180,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 lists the resolution results for two types of pronouns: person pronouns (i.e., \u201che\u201d, \u201cshe\u201d) and neuter-gender pronouns (i.e., \u201cit\u201d and \u201cthey\u201d).",
                    "sid": 181,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown, with the structured feature incorporated, the system NORM+S Simple can significantly boost the performance of the baseline (NORM), for both personal pronoun and neuter- gender pronoun resolution.",
                    "sid": 182,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0.8 0.8 0.8 0.75 0.75 0.75 0.7 0.7 0.7 0.65 NOR M S_Simpl e NORM+S_Simpl e 1 2 3 4 5 6 7 8 9 10 N u m b e r o f T r a i n i n g D o c u m e n t s 0.65 NORM S_Simple NORM+S_Simple 2 4 6 8 10 12 N u m b e r o f T r a i n i n g D o c u m e n t s 0.65 N O R M S _ S i m p l e N O R M + S _ S i m p l e 1 2 3 4 5 6 7 8 N u m b e r o f T r a i n i n g D o c u m e n t s NWire NPaper BNews Figure 2: Learning curves of systems with different features 5.4 Learning Curves.",
                    "sid": 183,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2 plots the learning curves for the systems with three feature sets, i.e, normal features (NORM), structured feature alone (S Simple), and combined features (NORM+S Simple).",
                    "sid": 184,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We trained each system with different number of instances from 1k, 2k, 3k, . . .",
                    "sid": 185,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", till the full size.",
                    "sid": 186,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each point in the figures was the average over two trails with instances selected forwards and backwards respectively.",
                    "sid": 187,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the figures we can find that (1) Used in combination (NORM+S Simple), the structured feature shows superiority over NORM, achieving results consistently better than the normal features (NORM) do in all the three domains.",
                    "sid": 188,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2) With training instances above 3k, the structured feature, used either in isolation (S Simple) or in combination (NORM+S Simple), leads to steady increase in the success rates and exhibit smoother learning curves than the normal features (NORM).",
                    "sid": 189,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These observations further prove the reliability of the structured feature in pronoun resolution.",
                    "sid": 190,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.5 Feature Analysis.",
                    "sid": 191,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our experiment we were also interested to compare the structured feature with the normal flat features extracted from the parse tree, like feature Subject and Object.",
                    "sid": 192,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this purpose we took out these two grammatical features from the normal feature set, and then trained the systems again.",
                    "sid": 193,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As shown in Table 5, the two grammatical- role features are important for the pronoun resolution: removing these features results in up to 5.7% (NWire) decrease in success.",
                    "sid": 194,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, when the structured feature is included, the loss in success reduces to 1.9% and 1.1% for NWire and BNews, and a slight improvement can even be achieved for NPaper.",
                    "sid": 195,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This indicates that the structured feature can effectively provide the syntactic information Table 5: Comparison of the structured feature and the flat features extracted from parse trees Feature S Simple NOR M+ S Simpl e Table 6: Results using different parsers important for pronoun resolution.",
                    "sid": 196,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also tested the flat syntactic feature set proposed in Luo and Zitouni (2005)\u2019s work.",
                    "sid": 197,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As described in Section 2, the feature set is inspired the binding theory, including those features like whether the candidate is c commanding the pronoun, and the counts of \u201cNP\u201d, \u201cVP\u201d, \u201cS\u201d nodes in the commanding path.",
                    "sid": 198,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The last line of Table 5 shows the results by adding these features into the normal feature set.",
                    "sid": 199,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In line with the reports in (Luo and Zitouni, 2005) we do observe the performance improvement against the baseline (NORM) for all the domains.",
                    "sid": 200,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the increase in the success rates (up to 1.3%) is not so large as by adding the structured feature (NORM+S Simple) instead.",
                    "sid": 201,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.6 Comparison with Different.",
                    "sid": 202,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsers As mentioned, the above reported results were based on Charniak (2000)\u2019s parser.",
                    "sid": 203,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be interesting to examine the influence of different parsers on the resolution performance.",
                    "sid": 204,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For this purpose, we also tried the parser by Collins (1999) (Mode II)7, and the results are shown in Table 6.",
                    "sid": 205,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can see that Charniak (2000)\u2019s parser leads to higher success rates for NPaper and BNews, while Collins (1999)\u2019s achieves better results for NWire.",
                    "sid": 206,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the difference between the results of the two parsers is not significant (less than 2% success) for the three domains, no matter whether the structured feature is used alone or in combination.",
                    "sid": 207,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Conclusion.",
                    "sid": 208,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The purpose of this paper is to explore how to make use of the structured syntactic knowledge to do pronoun resolution.",
                    "sid": 209,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traditionally, syntactic information from parse trees is represented as a set of flat features.",
                    "sid": 210,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the features are usually selected and defined by heuristics and may not necessarily capture all the syntactic information provided by the parse trees.",
                    "sid": 211,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the paper, we propose a kernel-based method to incorporate the information from parse trees.",
                    "sid": 212,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, we directly utilize the syntactic parse tree as a structured feature, and then apply kernels to such a feature, together with other normal features, to learn the decision classifier and do the resolution.",
                    "sid": 213,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experimental results on ACE data set show that the system with the structured feature included can achieve significant increase in the success rate by around 5%\u223c8%, for all the different domains.",
                    "sid": 214,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The deeper analysis on various factors like training size, feature set or parsers further proves that the structured feature incorporated with our kernel- based method is reliably effective for the pronoun resolution task.",
                    "sid": 215,
                    "ssid": 55,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}