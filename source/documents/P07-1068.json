{
    "ID": "P07-1068",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "This paper examines whether a learning- based coreference resolver can be improved using semantic class knowledge that is automatically acquired from a version of the Penn Treebank in which the noun phrases are labeled with their semantic classes.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Experiments on the ACE test data show that a resolver that employs such induced semantic class knowledge yields a statistically significant improvement of 2% in F-measure over one that exploits heuristically computed semantic class knowledge.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the induced knowledge improves the accuracy of common noun resolution by 26%.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "In the past decade, knowledge-lean approaches have significantly influenced research in noun phrase (NP) coreference resolution \u2014 the problem of determining which NPs refer to the same real-world entity in a document.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In knowledge-lean approaches, coreference resolvers employ only morpho-syntactic cues as knowledge sources in the resolution process (e.g., Mitkov (1998), Tetreault (2001)).",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While these approaches have been reasonably successful (see Mitkov (2002)), Kehler et al.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2004) speculate that deeper linguistic knowledge needs to be made available to resolvers in order to reach the next level of performance.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, semantics plays a crucially important role in the resolution of common NPs, allowing us to identify the coreference relation between two lexically dissimilar common nouns (e.g., talks 536 and negotiations) and to eliminate George W. Bush from the list of candidate antecedents of the city, for instance.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a result, researchers have re-adopted the once-popular knowledge-rich approach, investigating a variety of semantic knowledge sources for common noun resolution, such as the semantic relations between two NPs (e.g., Ji et al.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2005)), their semantic similarity as computed using WordNet (e.g., Poesio et al.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2004)) or Wikipedia (Ponzetto and Strube, 2006), and the contextual role played by an NP (see Bean and Riloff (2004)).",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another type of semantic knowledge that has been employed by coreference resolvers is the semantic class (SC) of an NP, which can be used to disallow coreference between semantically incompatible NPs.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, learning-based resolvers have not been able to benefit from having an SC agreement feature, presumably because the method used to compute the SC of an NP is too simplistic: while the SC of a proper name is computed fairly accurately using a named entity (NE) recognizer, many resolvers simply assign to a common noun the first (i.e., most frequent) WordNet sense as its SC (e.g., Soon et al.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001), Markert and Nissim (2005)).",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is not easy to measure the accuracy of this heuristic, but the fact that the SC agreement feature is not used by Soon et al.\u2019s decision tree coreference classifier seems to suggest that the SC values of the NPs are not computed accurately by this first-sense heuristic.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Motivated in part by this observation, we examine whether automatically induced semantic class knowledge can improve the performance of a learning-based coreference resolver, reporting evaluation results on the commonly-used ACE corefer Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 536\u2013543, Prague, Czech Republic, June 2007.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2007 Association for Computational Linguistics ence corpus.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our investigation proceeds as follows.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Train a classifier for labeling the SC of an NP.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In ACE, we are primarily concerned with classifying an NP as belonging to one of the ACE semantic classes.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, part of the ACE Phase 2 evaluation involves classifying an NP as PER SO N, O R G A N IZATIO N, G PE (a geographical-political region), FAC ILITY, LO C ATIO N, or OTH ER S. We adopt a corpus-based approach to SC determination, recasting the problem as a six-class classification task.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Derive two knowledge sources for coreference resolution from the induced SCs.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first knowledge source (KS) is semantic class agreement (SCA).",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Soon et al.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001), we represent SCA as a binary value that indicates whether the induced SCs of the two NPs involved are the same or not.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second KS is mention, which is represented as a binary value that indicates whether an NP belongs to one of the five ACE SCs mentioned above.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, the mention value of an NP can be readily derived from its induced SC: the value is N O if its SC is OTH ER S, and Y ES otherwise.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This KS could be useful for ACE coreference, since ACE is concerned with resolving only NPs that are mentions.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Incorporate the two knowledge sources in a coreference resolver.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, we investigate whether these two KSs can improve a learning-based baseline resolver that employs a fairly standard feature set.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since (1) the two KSs can each be represented in the resolver as a constraint (for filtering non-mentions or disallowing coreference between semantically incompatible NPs) or as a feature, and (2) they can be applied to the resolver in isolation or in combination, we have eight ways of incorporating these KSs into the baseline resolver.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our experiments on the ACE Phase 2 coreference corpus, we found that (1) our SC induction method yields a significant improvement of 2% in accuracy over Soon et al.\u2019s first-sense heuristic method as described above; (2) the coreference resolver that incorporates our induced SC knowledge by means of the two KSs mentioned above yields a significant improvement of 2% in F-measure over the resolver that exploits the SC knowledge computed by Soon et al.\u2019s method; (3) the mention KS, when used in the baseline resolver as a constraint, improves the resolver by approximately 57% in F- measure; and (4) SCA, when employed as a feature by the baseline resolver, improves the accuracy of common noun resolution by about 58%.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "2",
            "sents": [
                {
                    "text": "Mention detection.",
                    "sid": 33,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many ACE participants have also adopted a corpus-based approach to SC determination that is investigated as part of the mention detection (MD) task (e.g., Florian et al.",
                    "sid": 34,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2006)).",
                    "sid": 35,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Briefly, the goal of MD is to identify the boundary of a mention, its mention type (e.g., pronoun, name), and its semantic type (e.g., person, location).",
                    "sid": 36,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike them, (1) we do not perform the full MD task, as our goal is to investigate the role of SC knowledge in coreference resolution; and (2) we do not use the ACE training data for acquiring our SC classifier; instead, we use the BBN Entity Type Corpus (Weischedel and Brunstein, 2005), which consists of all the Penn Treebank Wall Street Journal articles with the ACE mentions manually identified and annotated with their SCs.",
                    "sid": 37,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This provides us with a training set that is approximately five times bigger than that of ACE.",
                    "sid": 38,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More importantly, the ACE participants do not evaluate the role of induced SC knowledge in coreference resolution: many of them evaluate coreference performance on perfect mentions (e.g., Luo et al.",
                    "sid": 39,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2004)); and for those that do report performance on automatically extracted mentions, they do not explain whether or how the induced SC information is used in their coreference algorithms.",
                    "sid": 40,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Joint probabilistic models of coreference.",
                    "sid": 41,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently, there has been a surge of interest in improving coreference resolution by jointly modeling coreference with a related task such as MD (e.g., Daume\u00b4 and Marcu (2005)).",
                    "sid": 42,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, joint models typically need to be trained on data that is simultaneously annotated with information required by all of the underlying models.",
                    "sid": 43,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, Daume\u00b4 and Marcu\u2019s model assumes as input a corpus annotated with both MD and coreference information.",
                    "sid": 44,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, we tackle coreference and SC induction separately (rather than jointly), since we train our SC determination model on the BBN Entity Type Corpus, where coreference information is absent.",
                    "sid": 45,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "semantic class induction. ",
            "number": "3",
            "sents": [
                {
                    "text": "This section describes how we train and evaluate a classifier for determining the SC of an NP.",
                    "sid": 46,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Training the Classifier.",
                    "sid": 47,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Training corpus.",
                    "sid": 48,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As mentioned before, we use the BBN Entity Type Corpus for training the SC classifier.",
                    "sid": 49,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This corpus was originally developed to support the ACE and AQUAINT programs and consists of annotations of 12 named entity types and nine nominal entity types.",
                    "sid": 50,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nevertheless, we will only make use of the annotations of the five ACE semantic types that are present in our ACE Phase 2 coreference corpus, namely, PER SO N, O R G A N IZATIO N, G PE, FAC ILITY, and LO C ATIO N. Training instance creation.",
                    "sid": 51,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We create one training instance for each proper or common NP (extracted using an NP chunker and an NE recognizer) in each training text.",
                    "sid": 52,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each instance is represented by a set of lexical, syntactic, and semantic features, as described below.",
                    "sid": 53,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the NP under consideration is annotated as one of the five ACE SCs in the corpus, then the classification of the associated training instance is simply the ACE SC value of the NP.",
                    "sid": 54,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Otherwise, the instance is labeled as OTH ER S. This results in 310063 instances in the training set.",
                    "sid": 55,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Features.",
                    "sid": 56,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We represent the training instance for a noun phrase, N Pi , using seven types of features: (1) WO R D: For each word w in N Pi , we create a WO R D feature whose value is equal to w. No features are created from stopwords, however.",
                    "sid": 57,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2) SU B J V ER B: If N Pi is involved in a subject- verb relation, we create a SU B J V ER B feature whose value is the verb participating in the relation.",
                    "sid": 58,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use Lin\u2019s (1998b) MINIPAR dependency parser to extract grammatical relations.",
                    "sid": 59,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our motivation here is to coarsely model subcategorization.",
                    "sid": 60,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(3) V ER B O B J: A V ER B O B J feature is created in AC E SC Ke yw or ds P E R S O N per son O R G A N I Z AT I O N soc ial gro up FA C I L I T Y est abl ish me nt, co nst ruc tio n, bui ldi ng, facil ity, wo rkp lac e G P E co unt ry, pro vin ce, go ver nm ent , to wn , city , ad mi nis trat ion , soc iety , isla nd, co m mu nit y L O C AT I O N dry lan d, reg ion , lan dm ass , bo dy of wat er, ge ogr ap hic al are a, ge olo gic al for ma tio n Table 1: List of keywords used in WordNet search for generating WN C LA SS features.",
                    "sid": 61,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(5) WN C LA SS: For each keyword w shown in the right column of Table 1, we determine whether the head noun of N Pi is a hyponym of w in WordNet, using only the first WordNet sense of N Pi .1 If so, we create a WN C LA SS feature with w as its value.",
                    "sid": 62,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These keywords are potentially useful features because some of them are subclasses of the ACE SCs shown in the left column of Table 1, while others appear to be correlated with these ACE SCs.2 (6) IN D U C ED C LA SS: Since the first-sense heuristic used in the previous feature may not be accurate in capturing the SC of an NP, we employ a corpus- based method for inducing SCs that is motivated by research in lexical semantics (e.g., Hearst (1992)).",
                    "sid": 63,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a large, unannotated corpus3 , we use Identi- Finder to label each NE with its NE type and MINI- PAR to extract all the appositive relations.",
                    "sid": 64,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An example extraction would be <Eastern Airlines, the carrier>, where the first entry is a proper noun labeled with either one of the seven MUC-style NE types4 or OTH ER S5 and the second entry is a common noun.",
                    "sid": 65,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then infer the SC of a common noun as follows: (1) we compute the probability that the common noun co-occurs with each of the 6 a similar fashion as SU B J V ER B if N Pi participates eight NE types based on the extracted appositive in a verb-object relation.",
                    "sid": 66,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Again, this represents our attempt to coarsely model subcategorization.",
                    "sid": 67,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(4) N E: We use BBN\u2019s IdentiFinder (Bikel et al., 1999), a MUC-style NE recognizer to determine the NE type of N Pi . If N Pi is determined to be a PER SO N or O R G A N IZATIO N, we create an N E feature whose value is simply its MUC NE type.",
                    "sid": 68,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, if N Pi is determined to be a LO C ATIO N, we create a feature with value G PE (because most of the MUC LO C A - TIO N NEs are ACE G PE NEs).",
                    "sid": 69,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Otherwise, no N E feature will be created (because we are not interested in the other MUC NE types).",
                    "sid": 70,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "relations, and (2) if the most likely NE type has a co-occurrence probability above a certain threshold (we set it to 0.7), we create a IN D U C ED C LA SS fea 1 This is motivated by Lin\u2019s (1998c) observation that a coreference resolver that employs only the first WordNet sense performs slightly better than one that employs more than one sense.",
                    "sid": 71,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 The keywords are obtained via our experimentation with.",
                    "sid": 72,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "WordNet and the ACE SCs of the NPs in the ACE training data.",
                    "sid": 73,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 We used (1) the BLLIP corpus (30M words), which consists of WSJ articles from 1987 to 1989, and (2) the Reuters Corpus (3.7GB data), which has 806,791 Reuters articles.",
                    "sid": 74,
                    "ssid": 29,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "person, organization, location, date, time, money, percent.. ",
            "number": "4",
            "sents": [
                {
                    "text": "6 For simplicity, OT H E R S is viewed as an NE type.",
                    "sid": 75,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "here.",
                    "sid": 76,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ture for N Pi whose value is the most likely NE type.",
                    "sid": 77,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(7) N EIG H B O R: Research in lexical semantics suggests that the SC of an NP can be inferred from its distributionally similar NPs (see Lin (1998a)).",
                    "sid": 78,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Motivated by this observation, we create for each of N Pi \u2019s ten most semantically similar NPs a N EIG H - B O R feature whose value is the surface string of the NP.",
                    "sid": 79,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To determine the ten nearest neighbors, we use the semantic similarity values provided by Lin\u2019s dependency-based thesaurus, which is constructed using a distributional approach combined with an information-theoretic definition of similarity.",
                    "sid": 80,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Learning algorithms.",
                    "sid": 81,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We experiment with four learners commonly employed in language learning: Decision List (DL): We use the DL learner as described in Collins and Singer (1999), motivated by its success in the related tasks of word sense disambiguation (Yarowsky, 1995) and NE classification (Collins and Singer, 1999).",
                    "sid": 82,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We apply add-one smoothing to smooth the class posteriors.",
                    "sid": 83,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1-Nearest Neighbor (1NN): We use the 1NN classifier as implemented in TiMBL (Daelemans et al., 2004), employing dot product as the similarity function (which defines similarity as the number of common feature-value pairs between two instances).",
                    "sid": 84,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All other parameters are set to their default values.",
                    "sid": 85,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maximum Entropy (ME): We employ Lin\u2019s ME implementation7 , using a Gaussian prior for smoothing and running the algorithm until convergence.",
                    "sid": 86,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Naive Bayes (NB): We use an in-house implementation of NB, using add-one smoothing to smooth the class priors and the class-conditional probabilities.",
                    "sid": 87,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, we train an SVM classifier for SC determination by combining the output of five classification methods: DL, 1NN, ME, NB, and Soon et al.\u2019s method as described in the introduction,8 with the goal of examining whether SC classification accuracy can be improved by combining the output of individual classifiers in a supervised manner.",
                    "sid": 88,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, we (1) use 80% of the instances generated from the BBN Entity Type Corpus to train the four classifiers; (2) apply the four classifiers and Soon et al.\u2019s method to independently make predic 7 See http://www.cs.ualberta.ca/\u223clindek/downloads.htm.",
                    "sid": 89,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 In our implementation of Soon\u2019s method, we label an in-.",
                    "sid": 90,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2: Distribution of SCs in the ACE corpus.",
                    "sid": 91,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tions for the remaining 20% of the instances; and (3) train an SVM classifier (using the LIBSVM package (Chang and Lin, 2001)) on these 20% of the instances, where each instance, i, is represented by a set of 31 binary features.",
                    "sid": 92,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, let Li = {li1 , li2 , li3 , li4 , li5 } be the set of predictions that we obtained for i in step (2).",
                    "sid": 93,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To represent i, we generate one feature from each nonempty subset of Li.",
                    "sid": 94,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Evaluating the Classifiers.",
                    "sid": 95,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For evaluation, we use the ACE Phase 2 coreference corpus, which comprises 422 training texts and 97 test texts.",
                    "sid": 96,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each text has its mentions annotated with their ACE SCs.",
                    "sid": 97,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We create our test instances from the ACE texts in the same way as the training instances described in Section 3.1.",
                    "sid": 98,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 shows the percentages of instances corresponding to each SC.",
                    "sid": 99,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 shows the accuracy of each classifier (see row 1) for the ACE training set (54641 NPs, with 16414 proper NPs and 38227 common NPs) and the ACE test set (13444 NPs, with 3713 proper NPs and 9731 common NPs), as well as their performance on the proper NPs (row 2) and the common NPs (row 3).",
                    "sid": 100,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We employ as our baseline system the Soon et al. method (see Footnote 8), whose accuracy is shown under the Soon column.",
                    "sid": 101,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As we can see, DL, 1NN, and SVM show a statistically significant improvement over the baseline for both data sets, whereas ME and NB perform significantly worse.9 Additional experiments are needed to determine the reason for ME and NB\u2019s poor performance.",
                    "sid": 102,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In an attempt to gain additional insight into the performance contribution of each type of features, we conduct feature ablation experiments using the DL classifier (DL is chosen simply because it is the best performer on the ACE training set).",
                    "sid": 103,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results are shown in Table 4, where each row shows the accuracy of the DL trained on all types of features except for the one shown in that row (All), as well as accuracies on the proper NPs (PN) and the common NPs (CN).",
                    "sid": 104,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For easy reference, the accuracy of the DL stance as OT H E R S if no N E or WN C L A S S feature is generated; otherwise its label is the value of the N E feature or the ACE SC that has the WN C L A S S features as its keywords (see Table 1).",
                    "sid": 105,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 We use Noreen\u2019s (1989) Approximate Randomization test.",
                    "sid": 106,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "for significance testing, with p set to .05 unless otherwise stated.",
                    "sid": 107,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 2 3 Table 3: SC classification accuracies of different methods for the ACE training set and test set.",
                    "sid": 108,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fe atu re Ty pe T r a i n i n g S e t P N CN All T e s t S e t P N CN All All fea tur es - WO R D - S U B J V E R B - V E R B O B J - N E - WN C L A S S - I N D U C E D C - N E I G H B O R 84.",
                    "sid": 109,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 85.4 85.0 84.",
                    "sid": 110,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 85.4 85.0 84.",
                    "sid": 111,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 85.4 85.0 84.",
                    "sid": 112,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 85.4 85.0 72.",
                    "sid": 113,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 85.3 81.6 84.",
                    "sid": 114,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 85.9 85.3 84.",
                    "sid": 115,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 85.6 85.1 82.",
                    "sid": 116,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 84.9 84.3 82.",
                    "sid": 117,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 83.3 82.9 82.",
                    "sid": 118,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 83.1 82.8 82.",
                    "sid": 119,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 83.3 82.9 82.",
                    "sid": 120,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 83.3 82.9 74.",
                    "sid": 121,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 83.2 80.7 81.",
                    "sid": 122,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 84.1 83.5 82.",
                    "sid": 123,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 83.6 83.2 80.",
                    "sid": 124,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 82.9 82.1 Table 4: Results for feature ablation experiments.",
                    "sid": 125,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 5: Accuracies of single-feature classifiers.",
                    "sid": 126,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "classifier trained on all types of features is shown in row 1 of the table.",
                    "sid": 127,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As we can see, accuracy drops significantly with the removal of N E and N EIG H B O R. As expected, removing N E precipitates a large drop in proper NP accuracy; somewhat surprisingly, removing N EIG H B O R also causes proper NP accuracy to drop significantly.",
                    "sid": 128,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To our knowledge, there are no prior results on using distributionally similar neighbors as features for supervised SC induction.",
                    "sid": 129,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note, however, that these results do not imply that the remaining feature types are not useful for SC classification; they simply suggest, for instance, that WO R D is not important in the presence of other feature types.",
                    "sid": 130,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To get a better idea of the utility of each feature type, we conduct another experiment in which we train seven classifiers, each of which employs exactly one type of features.",
                    "sid": 131,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The accuracies of these classifiers are shown in Table 5.",
                    "sid": 132,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As we can see, N EIG H B O R has the largest contribution.",
                    "sid": 133,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This again demonstrates the effectiveness of a distributional approach to semantic similarity.",
                    "sid": 134,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Its superior performance to WO R D, the second largest contributor, could be attributed to its ability to combat data sparseness.",
                    "sid": 135,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The N E feature, as expected, is crucial to the classification of proper NPs.",
                    "sid": 136,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Application to Coreference Resolution.",
                    "sid": 137,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can now derive from the induced SC information two KSs \u2014 semantic class agreement and mention \u2014 and incorporate them into our learning-based coreference resolver in eight different ways, as described in the introduction.",
                    "sid": 138,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section examines whether our coreference resolver can benefit from any of the eight ways of incorporating these KSs.",
                    "sid": 139,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Experimental Setup.",
                    "sid": 140,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in SC induction, we use the ACE Phase 2 coreference corpus for evaluation purposes, acquiring the coreference classifiers on the 422 training texts and evaluating their output on the 97 test texts.",
                    "sid": 141,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We report performance in terms of two metrics: (1) the F- measure score as computed by the commonly-used MUC scorer (Vilain et al., 1995), and (2) the accuracy on the anaphoric references, computed as the fraction of anaphoric references correctly resolved.",
                    "sid": 142,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Ponzetto and Strube (2006), we consider an anaphoric reference, N Pi , correctly resolved if N Pi and its closest antecedent are in the same coreference chain in the resulting partition.",
                    "sid": 143,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all of our experiments, we use NPs automatically extracted by an in-house NP chunker and IdentiFinder.",
                    "sid": 144,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 The Baseline Coreference System.",
                    "sid": 145,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our baseline coreference system uses the C4.5 decision tree learner (Quinlan, 1993) to acquire a classifier on the training texts for determining whether two NPs are coreferent.",
                    "sid": 146,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following previous work (e.g., Soon et al.",
                    "sid": 147,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001) and Ponzetto and Strube (2006)), we generate training instances as follows: a positive instance is created for each anaphoric NP, N Pj , and its closest antecedent, N Pi ; and a negative instance is created for N Pj paired with each of the intervening NPs, N Pi+1 , N Pi+2 , . . ., N Pj\u22121 . Each instance is represented by 33 lexical, grammatical, semantic, and positional features that have been employed by high- performing resolvers such as Ng and Cardie (2002) and Yang et al.",
                    "sid": 148,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2003), as described below.",
                    "sid": 149,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lexical features.",
                    "sid": 150,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nine features allow different types of string matching operations to be performed on the given pair of NPs, N Px and N Py 10, including (1) exact string match for pronouns, proper nouns, and non-pronominal NPs (both before and after determiners are removed); (2) substring match for proper nouns and non-pronominal NPs; and (3) head noun match.",
                    "sid": 151,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, one feature tests whether all the words that appear in one NP also appear in the other NP.",
                    "sid": 152,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, a nationality matching feature is used to match, for instance, British with Britain.",
                    "sid": 153,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Grammatical features.",
                    "sid": 154,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "22 features test the grammatical properties of one or both of the NPs.",
                    "sid": 155,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These include ten features that test whether each of the two NPs is a pronoun, a definite NP, an indefinite NP, a nested NP, and a clausal subject.",
                    "sid": 156,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A similar set of five features is used to test whether both NPs are pronouns, definite NPs, nested NPs, proper nouns, and clausal subjects.",
                    "sid": 157,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, five features determine whether the two NPs are compatible with respect to gender, number, animacy, and grammatical role.",
                    "sid": 158,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, two features test whether the two NPs are in apposition or participate in a predicate nominal construction (i.e., the IS-A relation).",
                    "sid": 159,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semantic features.",
                    "sid": 160,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Motivated by Soon et al.",
                    "sid": 161,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001), we have a semantic feature that tests whether one NP is a name alias or acronym of the other.",
                    "sid": 162,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Positional feature.",
                    "sid": 163,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have a feature that computes the distance between the two NPs in sentences.",
                    "sid": 164,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After training, the decision tree classifier is used to select an antecedent for each NP in a test text.",
                    "sid": 165,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Soon et al.",
                    "sid": 166,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001), we select as the antecedent of each NP, N Pj , the closest preceding NP that is classified as coreferent with N Pj . If no such NP exists, no antecedent is selected for N Pj . Row 1 of Table 6 and Table 7 shows the results of the baseline system in terms of F-measure (F) and accuracy in resolving 4599 anaphoric references (All), respectively.",
                    "sid": 167,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For further analysis, we also report the corresponding recall (R) and precision (P) in Table 6, as well as the accuracies of the system in resolving 1769 pronouns (PRO), 1675 proper NPs (PN), and 1155 common NPs (CN) in Table 7.",
                    "sid": 168,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As 10 We assume that N Px precedes N Py in the associated text..",
                    "sid": 169,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "we can see, the baseline achieves an F-measure of 57.0 and a resolution accuracy of 48.4.",
                    "sid": 170,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To get a better sense of how strong our baseline is, we re-implement the Soon et al.",
                    "sid": 171,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2001) coreference resolver.",
                    "sid": 172,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This simply amounts to replacing the 33 features in the baseline resolver with the 12 features employed by Soon et al.\u2019s system.",
                    "sid": 173,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Results of our Duplicated Soon et al. system are shown in row 2 of Tables 6 and 7.",
                    "sid": 174,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In comparison to our baseline, the Duplicated Soon et al. system performs worse according to both metrics, and although the drop in F-measure seems moderate, the performance difference is in fact highly significant (p=0.002).11 4.3 Coreference with Induced SC Knowledge.",
                    "sid": 175,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall from the introduction that our investigation of the role of induced SC knowledge in learning-based coreference resolution proceeds in three steps: Label the SC of each NP in each ACE document.",
                    "sid": 176,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a noun phrase, N Pi , is a proper or common NP, then its SC value is determined using an SC classifier that we acquired in Section 3.",
                    "sid": 177,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, if N Pi is a pronoun, then we will be conservative and posit its SC value as U N C O N STR A IN ED (i.e., it is semantically compatible with all other NPs).12 Derive two KSs from the induced SCs.",
                    "sid": 178,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall that our first KS, Mention, is defined on an NP; its value is Y ES if the induced SC of the NP is not OTH ER S, and N O otherwise.",
                    "sid": 179,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, our second KS, SCA, is defined on a pair of NPs; its value is Y ES if the two NPs have the same induced SC that is not OTH ER S, and N O otherwise.",
                    "sid": 180,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Incorporate the two KSs into the baseline resolver.",
                    "sid": 181,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall that there are eight ways of incorporating these two KSs into our resolver: they can each be represented as a constraint or as a feature, and they can be applied to the resolver in isolation and in combination.",
                    "sid": 182,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Constraints are applied during the antecedent selection step.",
                    "sid": 183,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, when employed as a constraint, the Mention KS disallows coreference between two NPs if at least one of them has a Mention value of N O, whereas the SCA KS disallows coreference if the SCA value of the two NPs involved is N O. When encoded as a feature for the resolver, the Mention feature for an NP pair has the 11 Again, we use Approximate Randomization with p=.05..",
                    "sid": 184,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "12 The only exception is pronouns whose SC value can be easily determined to be P E R S O N (e.g., he, him, his, himself).",
                    "sid": 185,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 2 3 4 5 6 7 8 9 10 Table 6: Coreference results obtained via the MUC scoring program for the ACE test set.",
                    "sid": 186,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 2 3 4 5 6 7 8 9 10 Table 7: Resolution accuracies for the ACE test set.",
                    "sid": 187,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "value Y ES if and only if the Mention value for both NPs is Y ES, whereas the SCA feature for an NP pair has its value taken from the SCA KS.",
                    "sid": 188,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, we can evaluate the impact of the two KSs on the performance of our baseline resolver.",
                    "sid": 189,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, rows 36 of Tables 6 and 7 show the F-measure and the resolution accuracy, respectively, when exactly one of the two KSs is employed by the baseline as either a constraint (C) or a feature (F), and rows 710 of the two tables show the results when both KSs are applied to the baseline.",
                    "sid": 190,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, each row of Table 6 contains four sets of results, each of which corresponds to a different method for determining the SC value of an NP.",
                    "sid": 191,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the first set is obtained by using Soon et al.\u2019s method as described in Footnote 8 to compute SC values, serving as sort of a baseline for our results using induced SC values.",
                    "sid": 192,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second and third sets are obtained based on the SC values computed by the DL and the SVM classifier, respectively.13 The last set corresponds to an oracle experiment in which the resolver has access to perfect SC information.",
                    "sid": 193,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rows 310 of Table 13 Results using other learners are not shown due to space limitations.",
                    "sid": 194,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "DL and SVM are chosen simply because they achieve the highest SC classification accuracies on the ACE training set.",
                    "sid": 195,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 can be interpreted in a similar manner.",
                    "sid": 196,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From Table 6, we can see that (1) in comparison to the baseline, F-measure increases significantly in the five cases where at least one of the KSs is employed as a constraint by the resolver, and such improvements stem mainly from significant gains in precision; (2) in these five cases, the resolvers that use SCs induced by DL and SVM achieve significantly higher F-measure scores than their counterparts that rely on Soon\u2019s method for SC determination; and (3) none of the resolvers appears to benefit from SCA information whenever mention is used as a constraint.",
                    "sid": 197,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, note that even with perfectly computed SC information, the performance of the baseline system does not improve when neither MD nor SCA is employed as a constraint.",
                    "sid": 198,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These results provide further evidence that the decision tree learner is not exploiting these two semantic KSs in an optimal manner, whether they are computed automatically or perfectly.",
                    "sid": 199,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, in machine learning for coreference resolution, it is important to determine not only what linguistic KSs to use, but also how to use them.",
                    "sid": 200,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the coreference results in Table 6 seem to suggest that SCA and mention should be employed as constraints, the resolution results in Table 7 sug gest that SCA is better encoded as a feature.",
                    "sid": 201,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, (1) in comparison to the baseline, the accuracy of common NP resolution improves by about 58% when SCA is encoded as a feature; and (2) whenever SCA is employed as a feature, the overall resolution accuracy is significantly higher for resolvers that use SCs induced by DL and SVM than those that rely on Soon\u2019s method for SC determination, with improvements in resolution observed on all three NP types.",
                    "sid": 202,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, these results provide suggestive evidence that both KSs are useful for learning-based coreference resolution.",
                    "sid": 203,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, mention should be employed as a constraint, whereas SCA should be used as a feature.",
                    "sid": 204,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Interestingly, this is consistent with the results that we obtained when the resolver has access to perfect SC information (see Table 6), where the highest F-measure is achieved by employing mention as a constraint and SCA as a feature.",
                    "sid": 205,
                    "ssid": 131,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusions. ",
            "number": "5",
            "sents": [
                {
                    "text": "We have shown that (1) both mention and SCA can be usefully employed to improve the performance of a learning-based coreference system, and (2) employing SC knowledge induced in a supervised manner enables a resolver to achieve better performance than employing SC knowledge computed by Soon et al.\u2019s simple method.",
                    "sid": 206,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, we found that the MUC scoring program is unable to reveal the usefulness of the SCA KS, which, when encoded as a feature, substantially improves the accuracy of common NP resolution.",
                    "sid": 207,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This underscores the importance of reporting both resolution accuracy and clustering-level accuracy when analyzing the performance of a coreference resolver.",
                    "sid": 208,
                    "ssid": 3,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}