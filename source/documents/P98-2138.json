{
    "ID": "P98-2138",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "For languages that have no explicit word bound\u00ad ary such as Thai, Chinese and Japanese, cor\u00ad recting words in text is harder than in English because of additional ambiguities in locating er\u00ad ror words.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The traditional method handles this by hypothesizing that every substrings in the input sentence could be error words and trying to correct all of them.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we pro\u00ad pose the idea of reducing the scope of spelling correction by focusing only on dubious areas in the input sentence.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Boundaries of these dubious areas could be obtained approximately by ap\u00ad plying word segmentation algorithm and finding word sequences with low probability.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To gener\u00ad ate the candidate correction words, we used a modified edit distance which reflects the charac\u00ad teristic of Thai OCR errors.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, a part-of\u00ad speech trigram model and Winnow algorithm are combined to determine the most probable correction.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Optical character recognition (OCR) is useful in a wide range of applications, such as office automation and information retrieval system.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, OCR in Thailand is still not widely used, partly because existing Thai OCRs are not quite satisfactory in terms of accuracy.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Re\u00ad cently, several research projects have focused on spelling correction for many types of errors in\u00ad cluding those from OCR {Kukich, 1992).",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nev\u00ad ertheless, the strategy is slightly different from language to language, since the characteristic of each language is different.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two characteristics of Thai which make the task of error correction different from those of other languages are: (1) there is no explicit word boundary, and {2) characters are written in three levels; i.e., the middle, the upper and the lower levels.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to solve the prob\u00ad lem of OCR error correction, the first task is usually to detect error strings in the input sen\u00ad tence.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For languages that have explicit word boundary such as English in which each word is separated from the others by white spaces, this task is comparatively simple.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the tok\u00ad enized string is not found in the dictionary, it could be an error string or an unknown word.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, for the languages that have no ex\u00ad plicit word boundary such as Chinese, Japanese and Thai, this task is much more complicated.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even without errors from OCR, it is difficult to determine word boundary in these languages.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The situation gets worse when noises are intro\u00ad duced in the text.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The existing approach for correcting the spelling error in the languages that have no word boundary assumes that all substrings in input sentence are error strings, and then tries to correct them (Nagata, 1996).",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is computationally expensive since a large portion of the input sentence is correct.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The other characteristic of Thai writing system is that we have many levels for placing Thai char\u00ad acters and several characters can occupy more than one level.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These characters are easily con\u00ad nected to other characters in the upper or lower level.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These connected characters cause diffi\u00ad culties in the process of character segmentation which then cause errors in Thai OCR.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other than the above problems specific to Thai, real-word error is another source of er\u00ad rors that is difficult to correct.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several previous works on spelling correction demonstrated that Figure 1: No explicit word delimiter in Thai upper level topHne middle level baseline lower level feature-based approaches are very effective for solving this problem.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, a hybrid method for Thai OCR error correction is proposed.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The method com\u00ad bines the part-of-speech (POS) trigram model with a feature-based model.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, the POS tri\u00ad gram model is employed to correct non-word as well as real-word errors.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this step, the num\u00ad ber of non-word errors are mostly reduced, but some real-word errors still remain because the POS trigram model cannot capture some use\u00ad ful features in discriminating candidate words.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A feature-based approach using Winnow algo\u00ad rithm is then applied to correct the remaining errors.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to overcome the expensive com\u00ad putation cost of the existing approach, we pro\u00ad pose the idea of reducing the scope of correc\u00ad tion by using word segmentation algorithm to find the approximate error strings from the in\u00ad put sentence.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though the word segmentation algorithm cannot give the accurate boundary of an error string, many of them can give clues of unknown strings which may be error strings.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can use this information to reduce the scope of correction from entire sentence to a more mi.r\u00ad row scope.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, to capture the characteristic of Thai OCR errors, we have defined the modi\u00ad fied edit distance and use it to enumerate plau\u00ad sible candidates which deviate from the word in question within k-edit distance.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "problems of thai ocr. ",
            "number": "2",
            "sents": [
                {
                    "text": "The problem of OCR error correction can be defined as : given the string of characters S = c1c2 \u2022\u2022\u2022 en produced by OCR, find the word sequence W = w1w2 ... wz that maximizes the probability P(WIS).",
                    "sid": 34,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Before describing the methods used to model P(WIS), below we list some main characteristics of Thai that poses dif\u00ad ficulties for correcting Thai OCR error.",
                    "sid": 35,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Words are written consecutively without word boundary delimiters such as white space characters.",
                    "sid": 36,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the phrase \" uluif\"l'\"j11u\" (Japan at present) in Figure 1, actually consists of three words: \" '\"\" (Japan), '\"lu\" (at), and \"if\"l'\"j11u\" (present).",
                    "sid": 37,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, Thai OCR error correction has to overcome word boundary ambiguity as well as select the most probable correction candidate at the same time.",
                    "sid": 38,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is similar to the problem of Connected Speech Recog\u00ad nition and is sometimes called Connected Text Recognition {Ingels, 1996).",
                    "sid": 39,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 There are 3 levels for placing Thai charac\u00ad ters and some characters can occupy more than one level.",
                    "sid": 40,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in Figure 2 \".W-:\" consists of characters in three levels,i.e., \", \u00b7 -:and w are in the top, the bot tom, the middle and both the middle and top levels, respectively.",
                    "sid": 41,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The character that occupies more than one level like w usually connects to other characters (.W) and causes error on the output of OCR, i.e., .W may be recognized as 'Y'l or 1.",
                    "sid": 42,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, to cor\u00ad rect characters produced by OCR, not only substitution errors but also deletion and in\u00ad sertion errors must be considered.",
                    "sid": 43,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addi\u00ad tion, in such a case, the candidates ranked by OCR output are unreliable and cannot be used to reduce search space.",
                    "sid": 44,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is because the connected characters tend to have very different features from the origi\u00ad nal separated ones.",
                    "sid": 45,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tone conson&nt \\r y{ upper level topli1e middle level baseline where P(ins(c)), P(del(v)) and P(cJv) are the probabilities that letter c is inserted, letter v is deleted and letter v is substituted with c, re\u00ad spectively.",
                    "sid": 46,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One method to do OCR error correction us\u00ad ing the above model is to hypothesize all sub\u00ad strings in the input sentence as words (Nagata, 1996).",
                    "sid": 47,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both words in the dictionary that ex\u00ad vowel?",
                    "sid": 48,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ilower level actly match with the substrings and those that approximatel y match are retrieved.",
                    "sid": 49,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To cope with unknown words, all other substrings not matched must also be considered.",
                    "sid": 50,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word Figure 2: Three levels for placing Thai charac\u00ad ters",
                    "sid": 51,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "our methods. ",
            "number": "3",
            "sents": [
                {
                    "text": "3.1 Trigram Model.",
                    "sid": 52,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To find W that maximizes P(WJS), we can use the POS trigram model as follows.",
                    "sid": 53,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "argmaxP(WJS) w lattice is then scanned to find theN-best word sequences as correction candidates.",
                    "sid": 54,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, this method is perfectly good, except in one as\u00ad pect: its time complexity.",
                    "sid": 55,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because it generates a large number of hypothesized words and has to find the best combination among them, it is very slow.",
                    "sid": 56,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Selective Trigram.",
                    "sid": 57,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Model To alleviate the above problem, we try to reduce argm P(W)P(SJW)/P(S) (1) = arg mP(W)P(SJW) (2) The probability P(W) is given by the lan\u00ad guage model and can be estimated by the tri\u00ad gram model as: P(W) = P(W,T) =IIP(tilti2, ti_t)P(wilti) (3) P(SJW) is the characteristics of specific OCR, and can be estimated by collecting sta\u00ad tistical information from original text and the text produced by OCR.",
                    "sid": 58,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume that given the original word sequence W composed of char\u00ad acters VI v2 \u2022\u2022\u2022 Vm, OCR produces the sequence as stringS(= cic2 \u2022\u2022\u2022 en) by repeatedly apply\u00ad ing the following operation: substitute a char\u00ad acter with another; insert a character; or delete a character.",
                    "sid": 59,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let Si be the i-prefix of S that is formed by first character to the i-character of S (= c1c2 \u2022\u2022\u2022 Ci), and similarly Wi is the j\u00ad prefix of W (= VI v2 \u2022..Vj ).",
                    "sid": 60,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using dynamic pro\u00ad gramming technique, we can calculate P(SJW) (= P(SnlWm)) by the following equation: P(SiJWi) = max(P(SiIJWi) * P(ins(q)), P(SilWi-d * P(del(vj)), P(SiIJWi_t) * P(ciJvj)) {4) the number of hypothesized words by generat\u00ad ing them only when needed.",
                    "sid": 61,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Having analyzed the OCR output, we found that a large por\u00ad tion of input sentence are correctly recognized and need no approximation.",
                    "sid": 62,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, instead of hypothesizing blindly through the whole sen\u00ad tence, if we limit our hypotheses to only dubious areas, we can save considerable amount of time.",
                    "sid": 63,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following is our algorithm for correcting OCR output.",
                    "sid": 64,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.",
                    "sid": 65,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Find dubious areas: Find all substrings.",
                    "sid": 66,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "in the input sentence that exactly match words in the dictionary.",
                    "sid": 67,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each substring may overlap with others.",
                    "sid": 68,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining parts of sentence which are not covered by any of these substrings are considered as dubious areas.",
                    "sid": 69,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 70,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Make hypotheses for nonwords and.",
                    "sid": 71,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "unknown words: (a) For each dubious string obtained from 1., the surrounding words are also con\u00ad sidered to form candidates for correc\u00ad tion by concatenating them with the dubious string.",
                    "sid": 72,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in \"in\u00ad form at j on\", j is an unknown string representing a dubious area, and in\u00ad form at and on are words.",
                    "sid": 73,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, the unknown word and its sur\u00ad rounding known words are combined routine with 1 edit distance to the string \" \"\" gives the set of candidates { \"\u00b7 IN, J.J.,, \"\u00b7,..N, ,..J.,, together, resulting in \"informatjon\" as a new unknown string.",
                    "sid": 74,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "{b) For each unknown string obtained form 2{a), apply the candidate genera\u00ad tion routine to generate approximately matched words within k-edit distance.",
                    "sid": 75,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The value of k is varied proportionally to the length of candidate word.",
                    "sid": 76,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "{c) All substrings except for ones that violate Thai spelling rules, i.e., lead by non-leading character, are hypoth\u00ad esized as unknown words.",
                    "sid": 77,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 78,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Find good word sequences: Find.",
                    "sid": 79,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the N-best word sequences according to equation (2).",
                    "sid": 80,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For unknown words, P{wiiUnknown word) is computed by us\u00ad ing the unknown word model in (Nagata, 1996).",
                    "sid": 81,
                    "ssid": 30,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "make hypotheses for real-word er\u00ad. ",
            "number": "4",
            "sents": [
                {
                    "text": "ror: For each word Wi in N-best word sequence where the local probabilities P(wi1,Wi, Wi+l, ti-l, ti, ti+l) are below a threshold, generate candidate words by ap\u00ad plying the process similar to step 2 except that the nonword in step 2 is replaced with the word Wi\u00b7 Find the word sequences whose probabilities computed by equation {2) are better than original ones.",
                    "sid": 82,
                    "ssid": 1,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "find the n-best word sequences:. ",
            "number": "5",
            "sents": [
                {
                    "text": "From all word sequences obtained from step 4, select theN-best ones.",
                    "sid": 83,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The candidate generation routine uses a mod\u00ad ification of the standard edit distance and em\u00ad ploys the error-tolerant finite-state recognition algorithm {Ofl.azer, 1996) to generate candidate words.",
                    "sid": 84,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The modified edit distance allows ar\u00ad bitrary number of insertion and/or deletion of upper level and lower level characters, but al\u00ad lows no insertion or deletion of the middle level characters.",
                    "sid": 85,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the middle level, it allows only k substitution.",
                    "sid": 86,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is to reflect the characteristic of Thai OCR which, 1.",
                    "sid": 87,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tends to merge several characters into one when the character which spans two levels are adjacent to characters in the upper and lower level, and 2.",
                    "sid": 88,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "rarely causes insertion and deletion errors in the middle level.",
                    "sid": 89,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, applying the candidate generation }.From our experiments, we found that the se lective trigram model can deal with nonword errors fairly well.",
                    "sid": 90,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the model is not enough to correct real-word errors as well as words with the same part of speech.",
                    "sid": 91,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is because the POS trigram model considers only coarse information of POS in a fixed restricted range of context, some useful information such as specific word collocation may be lost.",
                    "sid": 92,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using word N-gram could recover some word-level in\u00ad formation but requires an extremely large cor\u00ad pus to estimate all parameters accurately and consumes vast space resources to store the huge word N-gram table.",
                    "sid": 93,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the model losses generalized information at the level of POS.",
                    "sid": 94,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For English, a number of methods have been proposed to cope with real-word errors in spelling correction (Golding, 1995; Golding and Roth, 1996; Golding and Schabes, 1993; Tong and Evans, 1996).",
                    "sid": 95,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Among them, the feature\u00ad based methods were shown to be superior to other approaches.",
                    "sid": 96,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is because the methods can combine several kinds of features to deter\u00ad mine the appropriate word in a given context.",
                    "sid": 97,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For our task, we adopt a feature-based algo\u00ad rithm called Winnow.",
                    "sid": 98,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are two reasons why we select Winnow.",
                    "sid": 99,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, it has been shown to be the best performer in English context\u00ad sensitive spelling correction (Golding and Roth, 1996).",
                    "sid": 100,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, it was shown to be able to han\u00ad dle difficult disambiguation tasks in Thai {Mek\u00ad navin et al.1997).",
                    "sid": 101,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Below we describe Winnow algorithm that is used for correcting real-word error.",
                    "sid": 102,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Winnow Algorithm.",
                    "sid": 103,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3.1 The algorithm A Winnow algorithm used in our experiment is the algorithm described in (Blum, 1997).",
                    "sid": 104,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Win\u00ad now is a multiplicative weight updating and in\u00ad cremental algorithm {Littlestone, 1988; Golding and Roth, 1996).",
                    "sid": 105,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm is originally de\u00ad signed for learning two-class (positive and neg\u00ad ative class) problems, and can be extended to multiple-class problems as shown in Figure 3.",
                    "sid": 106,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Winnow can be viewed as a network of one target node connected to n nodes, called spe\u00ad cialists, each of which examines one feature and Let VI, \u2022\u2022\u2022 , Vm be the values of the target concept to be learned, and Xi be the prediction of the i-specialist.",
                    "sid": 107,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.",
                    "sid": 108,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initialize the weights WI, \u2022\u2022.",
                    "sid": 109,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", Wn of all the specialists to 1..",
                    "sid": 110,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 111,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For Each example x = {xi, ...",
                    "sid": 112,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", Xn} Do.",
                    "sid": 113,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "{a) Let V be the value of the target concept of the example.",
                    "sid": 114,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "{b) Output Vj = arg maxvjE{vi.\u00b7\u00b7\u00b7,vm} l:i:xi=Vj Wi {c) If the algorithm makes a mistake (vj =f:.",
                    "sid": 115,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "V), then: i. for each Xi equal to V, Wi is updated to Wi \u00b7a ii.",
                    "sid": 116,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "for each Xi equal to Vj, Wi is updated to Wi \u00b7(3 where, a> 1 and (3 < 1 are promotion parameter and demotion parameter, and are set to 3/2 and 1/2, respectively.",
                    "sid": 117,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3: The Winnow algorithm for learning multiple-class concept.",
                    "sid": 118,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "predicts Xi as the value of the target concept.",
                    "sid": 119,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The basic idea of the algorithm is that to ex\u00ad tract some useful unknown features, the algo\u00ad rithm asks for opinions from all specialists, each of whom has his own specialty on one feature, and then makes a global prediction based on a weighted majority vote over all those opinions as described in Step 2-{a) of Figure 3.",
                    "sid": 120,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our ex\u00ad periment, we have each specialist examine one or two attributes of an example.",
                    "sid": 121,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, a specialist may predict the value of the target concept by checking for the pairs \"(attribute!",
                    "sid": 122,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "= value!)",
                    "sid": 123,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "and (attribute2 = value2)\".",
                    "sid": 124,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These pairs are candidates of features we are trying to extract.",
                    "sid": 125,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A specialist only makes a prediction if its con\u00ad dition \"(attribute!= valuel)\" is true in case of one attribute, or both of its conditions \"(at\u00ad tribute!",
                    "sid": 126,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "= valuel) and (attibute2 = value2)\" are true in case of two attributes, and in that case it predicts the most popular outcome out of the last k times it had the chance to predict.",
                    "sid": 127,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A specialist may choose to abstain instead of giv\u00ad ing a prediction on any given example in case that it did not see the same value of an attribute in the example.",
                    "sid": 128,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, we may have each spe\u00ad cialist examines more than two attributes, but for the sake of simplification of preliminary ex\u00ad periment, let us assume that two attributes for each specialist are enough to learn the target concept.",
                    "sid": 129,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The global algorithm updates the weight Wi of any specialist based on the vote of that spe\u00ad cialist.",
                    "sid": 130,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The weight of any specialist is initialized to 1.",
                    "sid": 131,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In case that the global algorithm predicts incorrectly, the weight of the specialist that pre\u00ad dicts incorrectly is halved and the weight of the specialist that predicts correctly is multiplied by 3/2.",
                    "sid": 132,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This weight updating method is the same as the one used in {Blum, 1997).",
                    "sid": 133,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The advan\u00ad tage of Winnow, which made us decide to use for our task, is that it is not sensitive to extra irrelevant features {Littlestone, 1988).",
                    "sid": 134,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3.2 Constructing Confusion Set and Defining Features To employ Winnow in correcting OCR er\u00ad rors, we first define k-edit distance confusion set.",
                    "sid": 135,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A k-edit distance confusion set S = {c,WI, w2, ...",
                    "sid": 136,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", Wn} is composed of one centroid word c and words WI, w2, \u2022..",
                    "sid": 137,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": ",Wn generated by applying the candidate generation routine with maximum k modified edit distance to the cen\u00ad troid word.",
                    "sid": 138,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a word c is produced by OCR output or by the previous step, then it may be corrected as WI, w2, ...,wn or c itself.",
                    "sid": 139,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For ex\u00ad ample, suppose that the centroid word is know, then all possible words in 1-edit distance con\u00ad fusion set are {know, knob, knop, knot, knew, enow, snow, known, now}.",
                    "sid": 140,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Furthermore, words with probability lower than a threshold are ex\u00ad cluded from the set.",
                    "sid": 141,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, if a specific OCR has low probability of substituting t with w, \"knof' should be excluded from the set.",
                    "sid": 142,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following previous works (Golding, 1995; Meknavin et al., 1997), we have tried two types of features: context words and collocations.",
                    "sid": 143,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Context-word features is used to test for the presence of a particular word within +f- M words of the target word, and collocations test for a pattern of up to L contiguous words and/or part-of-speech tags around the target word.",
                    "sid": 144,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our experiment M and L is set to 10 and 2, respectively.",
                    "sid": 145,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Examples of features for discrimi\u00ad nating between snow and know include: {1) I {know, snow} {2) winter within +10 words where {1) is a collocation that tends to imply know, and {2) is a context-word that tends to imply snow.",
                    "sid": 146,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then the algorithm should extract the features (\"word within +10 words of the target word\" = \"winter\") as well as (\"one word before the target word\" = \"I\") as useful features by assigning them with high weights.",
                    "sid": 147,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3.3 Using the Network to Rank Sentences After networks of k-edit distance confusion sets are learned by Winnow, the networks are used to correct the N-best sentences received from POS trigram model.",
                    "sid": 148,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each sentence, every real word is evaluated by the network whose the centroid word is that real word.",
                    "sid": 149,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The network will then output the centroid word or any word in the confusion set according to the context.",
                    "sid": 150,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After the most probable word is determined, the confidence level of that word will be calculated.",
                    "sid": 151,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since every specialist has weight voting for the target word, we can consider the weight as con\u00ad fidence level of that specialist for the word.",
                    "sid": 152,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We define the confidence level of any word as all weights that vote for that word divided by all weights in the network.",
                    "sid": 153,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on the confidence levels of all words in the sentence, the average of them is taken as the confidence level of the sentence.",
                    "sid": 154,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The N-best sentences are then re\u00ad ranked according to the confidence level of the sentences.",
                    "sid": 155,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Experiments.",
                    "sid": 156,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have prepared the corpus containing about 9,000 sentences {140,000 words, 1,300,000 char\u00ad acters) for evaluating our methods.",
                    "sid": 157,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpus is separated into two parts; the first part con\u00ad taining about 80 % of the whole corpus is used as a training set for both the trigram model and Winnow, and the rest is used as a test set.",
                    "sid": 158,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on the prepared corpus, experiments were conducted to compare our methods.",
                    "sid": 159,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results T y p e E rr o r N on w or d Er ro r Real w or d Er ro r 18 .3 7 % 3.",
                    "sid": 160,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 0 % T o t a l 21 .9 7 % Table 1: The percentage of word error from OCR T y p e Tr ig ra m T ri gr a m + W i n n o w N on w or d E rr or R eal w or d E rr or Int ro du ce d Er ro r 8 2.",
                    "sid": 161,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 6 % 7 5.",
                    "sid": 162,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 1 % 1 . 4 2 % 9 0 . 2 7 % 8 7 . 6 0 % 1 . 5 6 % Table 2: The percentage of corrected word er\u00ad rors after applying Trigram and Winnow are shown in Table 1, and Table 2.",
                    "sid": 163,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 shows the percentage of word errors from the entire text.",
                    "sid": 164,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 shows the percent\u00ad age of corrected word errors after applying Tri\u00ad gram and Winnow.",
                    "sid": 165,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The result reveals that the trigram model can correct non-word and real\u00ad word, but introduced some new errors.",
                    "sid": 166,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By the trigram model, real-word errors are more diffi\u00ad cult to correct than non-word.",
                    "sid": 167,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Combining Win\u00ad now to the trigram model, both types of errors are further reduced, and improvement of real\u00ad word error correction is more acute.",
                    "sid": 168,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reason for better performance of Tri\u00ad gram+Winnow over Trigram alone is that the former can exploit more useful features, i.e., context words and collocation features, in cor\u00ad rection.",
                    "sid": 169,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the word \"1-h\" (to bring) is frequently recognized as \"J1\" (water) because the characters \" -:,, is misreplaced with a sin\u00ad gle character \" .,, by OCR.",
                    "sid": 170,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, Tri\u00ad gram cannot effectively recover the real-word error \"1-h\" to the correct word \".J1\".",
                    "sid": 171,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word \"1-h\" is effectively corrected by Winnow as the algorithm found the context words that indicate the occurence of \"J1\" such as the words \"T.:L'I1tJ\" {evaporate) and \"Vl'll\" {plant).",
                    "sid": 172,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that these context words cannot be used by Trigram to correct the real-word errors.",
                    "sid": 173,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Conclusion.",
                    "sid": 174,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have examined the application of the modi\u00ad fied edit distance, POS trigram model and Win\u00ad now algorithm to the task of Thai OCR error correction.",
                    "sid": 175,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The experimental result shows that our proposed method reduces both non-word er\u00ad rors and real-word errors effectively.",
                    "sid": 176,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In future work, we plan to test the method with much more data and to incorporate other sources of information to improve the quality of correc\u00ad tion.",
                    "sid": 177,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also interesting to examine how the method performs when applied to human\u00ad generated misspellings.",
                    "sid": 178,
                    "ssid": 96,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgement",
            "number": "",
            "sents": [
                {
                    "text": "We would like to thank Paisarn Charoenporn\u00ad sawat who helps us run experiment with Win\u00ad now.",
                    "sid": 179,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This work was partly supported by the Thai Government Research Fund.",
                    "sid": 180,
                    "ssid": 98,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}