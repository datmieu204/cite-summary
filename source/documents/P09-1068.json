{
    "ID": "P09-1068",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "We describe an unsupervised system for learning narrative schemas, coherent sequences or sets of events (arrested(POLICE,SUSPECT), convicted( JUDGE, SUSPECT)) whose arguments are filled with participant semantic roles defined over words (JUDGE = {judge, jury, court}, POLICE = {police, agent, authorities}).",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike most previous work inevent structure or semantic role learning, our system does not use supervised techniques, hand-built knowledge, or predefined classes of events or roles.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our unsupervised learning algorithm uses corefer- ring arguments in chains of verbs to learn both rich narrative event structure and argument roles.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By jointly addressing both tasks, we improve on previous results in narrative/frame learning and induce rich frame-specific semantic roles.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "be learned.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even unsupervised attempts to learn semantic roles have required a pre defined set of roles (Grenager and Manning, 2006) and often a hand-labeled seed corpus (Swier and Stevenson, 2004; He and Gildea, 2006).",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we describe our attempts to learn script-like information about the world, including both event structures and the roles of their participants, but without pre defined frames, roles, or tagged corpora.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consider the following Narrative Schema, to be defined more formally later.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The events on the left follow a set of participants through a series of connected events that constitute a narrative: Events Roles This paper describes a new approach to event semantics that jointly learns event relations and their A search B A arrest B B plead C A = Police B = Suspect C = Plea participants from unlabeled corpora.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The early years of natural language processing (NLP) took a \u201ctop-down\u201d approach to language D acquit B D convict B D sentence B D = Jury understanding, using representations like scripts (Schank and Abelson, 1977) (structured representations of events, their causal relationships, and their participants) and frames to drive interpretation of syntax and word use.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Knowledge structures such as these provided the interpreter rich information about many aspects of meaning.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problem with these rich knowledge structures is that the need for hand construction, specificity, and domain dependence prevents robust and flexible language understanding.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, modern work on understanding has focused on shallower representations like semantic roles, which express at least one aspect of the semantics of events and have proved amenable to supervised learning from corpora like PropBank (Palmer et al., 2005) and Framenet (Baker et al., 1998).",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, creating these supervised corpora is an expensive and difficult multi-year effort, requiring complex decisions about the exact set of roles to Being able to robustly learn sets of related events (left) and frame-specific role information about the argument types that fill them (right) could assist a variety of NLP applications, from question answering to machine translation.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our previous work (Chambers and Jurafsky, 2008) relied on the intuition that in a coherent text, any two events that are about the same participants are likely to be part of the same story or narrative.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The model learned simple aspects of narrative structure (\u2018narrative chains\u2019) by extracting events that share a single participant, the protagonist.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we extend this work to represent sets of situation-specific events not unlike scripts, caseframes (Bean and Riloff, 2004), and FrameNet frames (Baker et al., 1998).",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper shows that verbs in distinct narrative chains can be merged into an improved single narrative schema, while the shared arguments across verbs can provide rich information for inducing semantic roles.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "602 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 602\u2013610, Suntec, Singapore, 27 August 2009.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2009 ACL and AFNLP",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "background. ",
            "number": "2",
            "sents": [
                {
                    "text": "This paper addresses two areas of work in event semantics, narrative event chains and semantic role labeling.",
                    "sid": 21,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We begin by highlighting areas in both that can mutually inform each other through a narrative schema model.",
                    "sid": 22,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1 Narrative Event Chains.",
                    "sid": 23,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Narrative Event Chains are partially ordered sets of events that all involve the same shared participant, the protagonist (Chambers and Jurafsky, 2008).",
                    "sid": 24,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A chain contains a set of verbs representing events, and for each verb, the grammatical role filled by the shared protagonist.",
                    "sid": 25,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An event is a verb together with its constellation of arguments.",
                    "sid": 26,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An event slot is a tuple of an event and a particular argument slot (grammatical rela tion), represented as a pair (v, dl where v is a verband d \u2208 {subject, object, prep}.",
                    "sid": 27,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A chain is a tu ple (L, O) where L is a set of event slots and O is a partial (temporal) ordering.",
                    "sid": 28,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We will write event slots in shorthand as (X pleads) or (pleads X) for (pleads, subjectl and (pleads, objectl.",
                    "sid": 29,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Below is an example chain modeling criminal prosecution.",
                    "sid": 30,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "L = (X pleads), (X admits), (convicted X), (sentenced X) Our previous work, however, has two major limitations.",
                    "sid": 31,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, the model did not express any information about the protagonist, such as its type or role.",
                    "sid": 32,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Role information (such as knowing whether a filler is a location, a person, a particular class of people, or even an inanimate object) could crucially inform learning and inference.",
                    "sid": 33,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, the model only represents one participant (the protagonist).",
                    "sid": 34,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Representing the other entities involved in all event slots in the narrative could potentially provide valuable information.",
                    "sid": 35,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We discuss both of these extensions next.",
                    "sid": 36,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1.1 The Case for Arguments The Chambers and Jurafsky (2008) narrative chains do not specify what type of argument fills the role of protagonist.",
                    "sid": 37,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chain learning and clustering is based only on the frequency with which two verbs share arguments, ignoring any features of the arguments themselves.",
                    "sid": 38,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Take this example of an actual chain from an article in our training data.",
                    "sid": 39,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given this chain of five events, we want to choose other events most likely to occur in this scenario.",
                    "sid": 40,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "hunt use O = {(pleads, convicted), (convicted, sentenced), ...}",
                    "sid": 41,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A graphical view is often more intuitive: suspect accuse fly ? charge admits pleads convicted sentenced (X admits) (X pleads) (convicted X) (sentenced X) search One of the top scoring event slots is (fly X).",
                    "sid": 42,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Narrative chains incorrectly favor (fly X) because it is observed during training with all five event slots, although not frequently with any one of them.",
                    "sid": 43,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An In this example, the protagonist of the chain is the person being prosecuted and the other unspecified event slots remain unfilled and uncon- strained.",
                    "sid": 44,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chains in the Chambers and Jurafsky (2008) model are ordered; in this paper rather than address the ordering task we focus on event and argument induction, leaving ordering as future work.",
                    "sid": 45,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Chambers and Jurafsky (2008) model learns chains completely unsupervised, (albeit after parsing and resolving coreference in the text) by counting pairs of verbs that share corefer- ring arguments within documents and computing the pointwise mutual information (PMI) between these verb-argument pairs.",
                    "sid": 46,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm creates chains by clustering event slots using their PMI scores, and we showed this use of co-referring arguments improves event relatedness.",
                    "sid": 47,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "event slot like (charge X) is much more plausible, but is unfortunately scored lower by the model.",
                    "sid": 48,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Representing the types of the arguments can help solve this problem.",
                    "sid": 49,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Few types of arguments are shared between the chain and (fly X).",
                    "sid": 50,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, (charge X) shares many arguments with (accuse X), (search X) and (suspect X) (e.g., criminal and suspect).",
                    "sid": 51,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even more telling is that these arguments are jointly shared (the same or coreferent) across all three events.",
                    "sid": 52,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chains represent coherent scenarios, not just a set of independent pairs, so we want to model argument overlap across all pairs.",
                    "sid": 53,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1.2 The Case for Joint Chains The second problem with narrative chains is that they make judgments only between protagonist arguments, one slot per event.",
                    "sid": 54,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All entities and slots in the space of events should be jointly considered when making event relatedness decisions.",
                    "sid": 55,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As an illustration, consider the verb arrest.",
                    "sid": 56,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Which verb is more related, convict or capture?",
                    "sid": 57,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A narrative chain might only look at the objects of these verbs and choose the one with the highest score, usually choosing convict.",
                    "sid": 58,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But in this case the subjects offer additional information; the subject of arrest (police) is different from that of convict (judge).",
                    "sid": 59,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A more informed decision prefers capture because both the objects (suspect) and subjects (police) are identical.",
                    "sid": 60,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This joint reasoning is absent from the narrative chain model.",
                    "sid": 61,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.2 Semantic Role Labeling.",
                    "sid": 62,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task of semantic role learning and labeling is to identify classes of entities that fill predicate slots; semantic roles seem like they\u2019d be a good model for the kind of argument types we\u2019d like to learn for narratives.",
                    "sid": 63,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most work on semantic role labeling, however, is supervised, using Prop- bank (Palmer et al., 2005), FrameNet (Baker et al., 1998) or VerbNet (Kipper et al., 2000) as gold standard roles and training data.",
                    "sid": 64,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More recent learning work has applied bootstrapping approaches (Swier and Stevenson, 2004; He and Gildea, 2006), but these still rely on a hand labeled seed corpus as well as a predefined set of roles.",
                    "sid": 65,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Grenegar and Manning (2006) use the EM algorithm to learn PropBank roles from unlabeled data, and unlike bootstrapping, they don\u2019t need a labeled corpus from which to start.",
                    "sid": 66,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, they do require a predefined set of roles (arg0, arg1, etc.) to define the domain of their probabilistic model.",
                    "sid": 67,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Green and Dorr (2005) use WordNet\u2019s graph structure to cluster its verbs into FrameNet frames, using glosses to name potential slots.",
                    "sid": 68,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We differ in that we attempt to learn frame-like narrative structure from untagged newspaper text.",
                    "sid": 69,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most similar to us, Alishahi and Stevenson (2007) learn verb specific semantic profiles of arguments using WordNet classes to define the roles.",
                    "sid": 70,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We learn situation-specific classes of roles shared by multiple verbs.",
                    "sid": 71,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, two open goals in role learning include (1) unsupervised learning and (2) learning the roles themselves rather than relying on predefined role classes.",
                    "sid": 72,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As just described, Chambers and Jurafsky (2008) offers an unsupervised approach to event learning (goal 1), but lacks semantic role knowledge (goal 2).",
                    "sid": 73,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following sections describe a model that addresses both goals.",
                    "sid": 74,
                    "ssid": 54,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "narrative schemas. ",
            "number": "3",
            "sents": [
                {
                    "text": "The next sections introduce typed narrative chains and chain merging, extensions that allow us to jointly learn argument roles with event structure.",
                    "sid": 75,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Typed Narrative Chains.",
                    "sid": 76,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first step in describing a narrative schema is to extend the definition of a narrative chain to include argument types.",
                    "sid": 77,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now constrain the protagonist to be of a certain type or role.",
                    "sid": 78,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A Typed Narrative Chain is a partially ordered set of event slots that share an argument, but now the shared argument is a role defined by being a member of a set of types R. These types can be lexical units (such as observed head words), noun clusters, or other semantic representations.",
                    "sid": 79,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use head words in the examples below, but we also evaluate with argument clustering by mapping head words to member clusters created with the CBC clustering algorithm (Pantel and Lin, 2002).",
                    "sid": 80,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We define a typed narrative chain as a tuple (L, P, O) with L and O the set of event slots and partial ordering as before.",
                    "sid": 81,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let P be a set of argument types (head words) representing a single role.",
                    "sid": 82,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An example is given here: L = {(hunt X), (X use), (suspect X), (accuse X), (search X)} P = {person, government, company, criminal, ...}",
                    "sid": 83,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "O = {(use, hunt), (suspect, search), (suspect, accuse) ...",
                    "sid": 84,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "} 3.2 Learning Argument Types.",
                    "sid": 85,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As mentioned above, narrative chains are learned by parsing the text, resolving coreference, and extracting chains of events that share participants.",
                    "sid": 86,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our new model, argument types are learned simultaneously with narrative chains by finding salient words that represent coreferential arguments.",
                    "sid": 87,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We record counts of arguments that are observed with each pair of event slots, build the referential set for each word from its coreference chain, and then represent each observed argument by the most frequent head word in its referential set (ignoring pronouns and mapping entity mentions with person pronouns to a constant PERSON identifier).",
                    "sid": 88,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As an example, the following contains four worker mentions: But for a growing proportion of U.S. workers, the troubles really set in when they apply for unemployment benefits.",
                    "sid": 89,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many workers find their benefits challenged.",
                    "sid": 90,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "L = {X arrest, X charge, X raid, X seize, X confiscate, X detain, X deport } P = {police, agent, authority, government} Figure 1: A typed narrative chain.",
                    "sid": 91,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The four top Using this chain score, we finally extend chainsim to score a new event slot based on the argument that maximizes the entire chain\u2019s score: chainsim (C, (f, g)) = arguments are given.",
                    "sid": 92,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The ordering O is not shown.",
                    "sid": 93,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "n max(score(C, a) + Xsim((ei , di ) , (f, g) , a)) (4) The four bolded terms are coreferential and (hopefully) identified by coreference.",
                    "sid": 94,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our algorithm chooses the head word of each phrase and ignores the pronouns.",
                    "sid": 95,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It then chooses the most frequent head word as the most salient mention.",
                    "sid": 96,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, the most salient term is workers.",
                    "sid": 97,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If any pair of event slots share arguments from this set, we count workers.",
                    "sid": 98,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, the pair (X find) and (X apply) shares an argument (they and workers).",
                    "sid": 99,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pair ((X find),(X apply)) is counted once for narrative chain induction, and ((X find), (X apply), workers) once for argument induction.",
                    "sid": 100,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 shows the top occurring words across all event slot pairs in a criminal scenario chain.",
                    "sid": 101,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This chain will be part of a larger narrative schema, described in section 3.4.",
                    "sid": 102,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Event Slot Similarity with Arguments.",
                    "sid": 103,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now formalize event slot similarity with arguments.",
                    "sid": 104,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Narrative chains as defined in (Chambers and Jurafsky, 2008) score a new event slot (f, gl against a chain of size n by summing over the scores between all pairs: n chainsim(C, (f, g)) = X sim((ei , di ) , (f, g)) (1) i=1 where C is a narrative chain, f is a verb with grammatical argument g, and sim(e, et) is the pointwise mutual information pmi(e, et).",
                    "sid": 105,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Grow ing a chain by one adds the highest scoring event.",
                    "sid": 106,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extend this function to include argument types by defining similarity in the context of a specific argument a: sim((e, d) , \u02d9e , d \u00b8 , a) = pmi((e, d) , \u02d9e , d \u00b8) + \u03bb log f req((e, d) , \u02d9e , d \u00b8 , a) (2) where \u03bb is a constant weighting factor and f req(b, bt, a) is the corpus count of a filling the arguments of events b and bt.",
                    "sid": 107,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then score the entire chain for a particular argument: i=1 The argument is now directly influencing event slot similarity scores.",
                    "sid": 108,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We will use this definition in the next section to build Narrative Schemas.",
                    "sid": 109,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4 Narrative Schema: Multiple Chains.",
                    "sid": 110,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whereas a narrative chain is a set of event slots, a Narrative Schema is a set of typed narrative chains.",
                    "sid": 111,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A schema thus models all actors in a set of events.",
                    "sid": 112,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If (push X) is in one chain, (Y push) is in another.",
                    "sid": 113,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows us to model a document\u2019s entire narrative, not just one main actor.",
                    "sid": 114,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4.1 The Model A narrative schema is defined as a 2tuple N = (E, C ) with E a set of events (here defined as verbs) and C a set of typed chains over the event slots.",
                    "sid": 115,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We represent an event as a verb v and its grammatical argument positions Dv \u2286 {subject, object, prep}.",
                    "sid": 116,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, each event slot (v, dl for all d \u2208 Dv belongs to a chain c \u2208 C in the schema.",
                    "sid": 117,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Further, each c must be unique for each slot of a single verb.",
                    "sid": 118,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using the criminal prosecution domain as an example, a narrative schema in this domain is built as in figure 2.",
                    "sid": 119,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The three dotted boxes are graphical representations of the typed chains that are combined in this schema.",
                    "sid": 120,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first represents the event slots in which the criminal is involved, the second the police, and the third is a court or judge.",
                    "sid": 121,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although our representation uses a set of chains, it is equivalent to represent a schema as a constraint satisfactionproblem between (e, dl event slots.",
                    "sid": 122,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The next sec tion describes how to learn these schemas.",
                    "sid": 123,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4.2 Learning Narrative Schemas Previous work on narrative chains focused on re- latedness scores between pairs of verb arguments (event slots).",
                    "sid": 124,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The clustering step which built chains depended on these pairwise scores.",
                    "sid": 125,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Narrative schemas use a generalization of the entire verb with all of its arguments.",
                    "sid": 126,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A joint decision can be made such that a verb is added to a schema if both its subject and object are assigned to chains in the n\u22121 score(C, a) = X n X sim((ei , di ) , (ej , dj ) , a) (3) schema with high confidence.",
                    "sid": 127,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "i=1 j=i+1 For instance, it may be the case that (Y pull over) scores well with the \u2018police\u2019 chain in arrest charge police,agent arrest charge plead convict sentence criminal,suspect convict sentence judge,jury police, agent judge, jury arrest charge plead convict sentence criminal, suspect guilty, innocent Figure 2: Merging typed chains into a single unordered Narrative Schema.",
                    "sid": 128,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "figure 3.",
                    "sid": 129,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the object of (pull over A) is not present in any of the other chains.",
                    "sid": 130,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Police pull over cars, but this schema does not have a chain involving cars.",
                    "sid": 131,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, (Y search) scores well with the \u2018police\u2019 chain and (search X) scores well in the \u2018defendant\u2019 chain too.",
                    "sid": 132,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, we want to favor search instead of pull over because the schema is already modeling both arguments.",
                    "sid": 133,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This intuition leads us to our event relatedness function for the entire narrative schema N , not raid arrest charge seize confiscate detain deport defendant, nichols, smith, simpson police, agent, authorities, government license immigrant, reporter, cavalo, migrant, alien just one chain.",
                    "sid": 134,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of asking which event slot (v, dl is a best fit, we ask if v is best by considering all slots at once: narsim(N, v) = ) max(\u03b2, max chainsimt(c, (v, dl)) (5) c\u2208CN \u2208 v where CN is the set of chains in our narrative N . If (v, dl does not have strong enough similarity with any chain, it creates a new one with base score \u03b2.",
                    "sid": 135,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The \u03b2 parameter balances this decision of adding to an existing chain in N or creating a new one.",
                    "sid": 136,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4.3 Building Schemas We use equation 5 to build schemas from the set of events as opposed to the set of event slots that previous work on narrative chains used.",
                    "sid": 137,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Chambers and Jurafsky (2008), narrative chains add the best (e, dl based on the following: Figure 3: Graphical view of an unordered schema automatically built starting from the verb \u2018arrest\u2019.",
                    "sid": 138,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A \u03b2 value that encouraged splitting was used.",
                    "sid": 139,
                    "ssid": 65,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "sample narrative schemas. ",
            "number": "4",
            "sents": [
                {
                    "text": "Figures 3 and 4 show two criminal schemas learned completely automatically from the NYT portion of the Gigaword Corpus (Graff, 2002).",
                    "sid": 140,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We parse the text into dependency graphs and resolve coreferences.",
                    "sid": 141,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The figures result from learning over the event slot counts.",
                    "sid": 142,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, figure 5 shows six of the top 20 scoring narrative schemas learned by our system.",
                    "sid": 143,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We artificially required the clustering procedure to stop (and sometimes continue) at six events per schema.",
                    "sid": 144,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Six was chosen as the size to enable us to compare to FrameNet in the next section; the mean number of verbs in FrameNet frames is between five and six.",
                    "sid": 145,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A low max j:0<j<m chainsim(c, (vj , gj l) (6) \u03b2 was chosen to limit chain splitting.",
                    "sid": 146,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We built a new schema starting from each verb that occurs in where m is the number of seen event slots in the corpus and (vj , gj l is the jth such possible event slot.",
                    "sid": 147,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Schemas are now learned by adding events that maximize equation 5: more than 3000 and less than 50,000 documents in the NYT section.",
                    "sid": 148,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This amounted to approximately 1800 verbs from which we show the top 20.",
                    "sid": 149,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not surprisingly, most of the top schemas con-.",
                    "sid": 150,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "max j:0<j<|v| narsim(N, vj ) (7) cern business, politics, crime, or food.",
                    "sid": 151,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "frames and. ",
            "number": "5",
            "sents": [
                {
                    "text": "Roles where |v| is the number of observed verbs and vj is the jth such verb.",
                    "sid": 152,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verbs are incrementally added to a narrative schema by strength of similarity.",
                    "sid": 153,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most previous work on unsupervised semantic role labeling assumes that the set of possible A p r o d u c e B A \u2208 {company, inc, corp, microsoft, A s e l l B iraq, co, unit, maker, ...}",
                    "sid": 154,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A m a n u f a c t u r e B A * m a r k e t B B \u2208 {drug, product, system, test, A d i s t r i b u t e B software, funds, movie, ...}",
                    "sid": 155,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A d e v e l o p B B t r a d e C A \u2208 {} B f e ll C B \u2208 {dollar, share, index, mark, currency, A * q u o t e B stock, yield, price, pound, ...}",
                    "sid": 156,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "B f a ll C C \u2208 {friday, most, year, percent, thursday B s li p C monday, share, week, dollar, ...}",
                    "sid": 157,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "B ri s e C A b o i l B A s l i c e B A \u2208 { w a s h , h e a t , t h i n l y , o n i o n , n o t e } A p e e l B A s a u t e B B \u2208 { p o t a t o , o n i o n , m u s h r o o m , c l o v e , A c o o k B o r a n g e , g n o c c h i } A c h o p B A d et ai n B A \u2208 {police, agent, officer, authorities, A c o nf is c at e B troops, official, investigator, ...",
                    "sid": 158,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "} A s ei z e B A r a i d B B \u2208 {suspect, government, journalist, A s e ar c h B monday, member, citizen, client, ...",
                    "sid": 159,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "} A a rr e st B A * u p h ol d B A \u2208 { c o u rt , ju d g e, ju st ic e, p a n el , o s t e e n , A * c h al le n g e B circuit, nicolau, sporkin, majority, ...}",
                    "sid": 160,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A r ul e B A e nf or c e B B \u2208 {law, ban, rule, constitutionality, A * o v e rt u r n B conviction, ruling, lawmaker, tax, ...}",
                    "sid": 161,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A * s tr ik e d o w n B A o w n B A \u2208 {company, investor, trader, corp, A * b o rr o w B enron, inc, government, bank, itt, ...}",
                    "sid": 162,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A s el l B A b u y b a c k B B \u2208 { s h a r e , s t o c k , s t o c k s , b o n d , c o m p a n y , A b u y B security, team, funds, house, ...",
                    "sid": 163,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "} A *r e p u rc h a s e B Figure 5: Six of the top 20 scored Narrative Schemas.",
                    "sid": 164,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Events and arguments in italics were marked misaligned by FrameNet definitions.",
                    "sid": 165,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "* indicates verbs not in FrameNet.",
                    "sid": 166,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "- indicates verb senses not in FameNet.",
                    "sid": 167,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "deliberate deadlocked found convict acquit sentence defendant, nichols, smith, simpson jury, juror, court, judge, tribunal, senateof frame specific semantic roles called frame elements that can be arguments of the lexical units in the frame.",
                    "sid": 168,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FrameNet frames share commonali- ties with narrative schemas; both represent aspects of situations in the world, and both link semantically related words into frame-like sets in which each predicate draws its argument roles from a frame specific set.",
                    "sid": 169,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They differ in that schemas focus on events in a narrative, while frames focus on Figure 4: Graphical view of an unordered schema automatically built from the verb \u2018convict\u2019.",
                    "sid": 170,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each node shape is a chain in the schema.",
                    "sid": 171,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "classes is very small (i.e, PropBank roles ARG0 and ARG1) and is known in advance.",
                    "sid": 172,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By contrast, our approach induces sets of entities that appear in the argument positions of verbs in a narrative schema.",
                    "sid": 173,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our model thus does not assume the set of roles is known in advance, and it learns the roles at the same time as clustering verbs into frame-like schemas.",
                    "sid": 174,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting sets of entities (such as {police, agent, authorities, government} or {court, judge, justice}) can be viewed as a kind of schema-specific semantic role.",
                    "sid": 175,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How can this unsupervised method of learning roles be evaluated?",
                    "sid": 176,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Section 6 we evaluate the schemas together with their arguments in a cloze task.",
                    "sid": 177,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section we perform a more qualitative evalation by comparing our schema to FrameNet.",
                    "sid": 178,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FrameNet (Baker et al., 1998) is a database of frames, structures that characterize particular situations.",
                    "sid": 179,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A frame consists of a set of events (the verbs and nouns that describe them) and a set events that share core participants.",
                    "sid": 180,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Nonetheless, the fact that FrameNet defines frame-specific argument roles suggests that comparing our schemas and roles to FrameNet would be elucidating.",
                    "sid": 181,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We took the 20 learned narrative schemas described in the previous section and used FrameNet to perform qualitative evaluations on three aspects of schema: verb groupings, linking structure (the mapping of each argument role to syntactic subject or object), and the roles themselves (the set of entities that constitutes the schema roles).",
                    "sid": 182,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb groupings To compare a schema\u2019s event selection to a frame\u2019s lexical units, we first map the top 20 schemas to the FrameNet frames that have the largest overlap with each schema\u2019s six verbs.",
                    "sid": 183,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We were able to map 13 of our 20 narratives to FrameNet (for the remaining 7, no frame contained more than one of the six verbs).",
                    "sid": 184,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining 13 schemas contained 6 verbs each for a total of 78 verbs.",
                    "sid": 185,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "26 of these verbs, however, did not occur in FrameNet, either at all, or with the correct sense.",
                    "sid": 186,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of the remaining 52 verb mappings, 35 (67%) occurred in the closest FrameNet frame or in a frame one link away.",
                    "sid": 187,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "17 verbs (33%) occurred in a different frame than the one chosen.",
                    "sid": 188,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We examined the 33% of verbs that occurred in a different frame.",
                    "sid": 189,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most occurred in related frames, but did not have FrameNet links between them.",
                    "sid": 190,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, one schema includes the causal verb trade with unaccusative verbs of change like rise and fall.",
                    "sid": 191,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FrameNet separates these classes of verbs into distinct frames, distinguishing motion frames from caused-motion frames.",
                    "sid": 192,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even though trade and rise are in different FrameNet frames, they do in fact have the narrative relation that our system discovered.",
                    "sid": 193,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of the 17 misaligned events, we judged all but one to be correct in a narrative sense.",
                    "sid": 194,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus although not exactly aligned with FrameNet\u2019s notion of event clusters, our induction algorithm seems to do very well.",
                    "sid": 195,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Linking structure Next, we compare a schema\u2019s linking structure, the grammatical relation chosen for each verb event.",
                    "sid": 196,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We thus decide, e.g., if the object of the verb arrest (arrest B) plays the same role as the object of detain (detain B), or if the subject of detain (B detain) would have been more appropriate.",
                    "sid": 197,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated the clustering decisions of the 13 schemas (78 verbs) that mapped to frames.",
                    "sid": 198,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each chain in a schema, we identified the frame element that could correctly fill the most verb arguments in the chain.",
                    "sid": 199,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining arguments were considered incorrect.",
                    "sid": 200,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because we assumed all verbs to be transitive, there were 156 arguments (subjects and objects) in the 13 schema.",
                    "sid": 201,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of these 156 arguments, 151 were correctly clustered together, achieving 96.8% accuracy.",
                    "sid": 202,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The schema in figure 5 with events detain, seize, arrest, etc. shows some of these errors.",
                    "sid": 203,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The object of all of these verbs is an animate theme, but confiscate B and raid B are incorrect; people cannot be confiscated/raided.",
                    "sid": 204,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They should have been split into their own chain within the schema.",
                    "sid": 205,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Argument Roles Finally, we evaluate the learned sets of entities that fill the argument slots.",
                    "sid": 206,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As with the above linking evaluation, we first identify the best frame element for each argument.",
                    "sid": 207,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the events in the top left schema of figure 5 map to the Manufacturing frame.",
                    "sid": 208,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Argument B was identified as the Product frame element.",
                    "sid": 209,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then evaluate the top 10 arguments in the argument set, judging whether each is a reasonable filler of the role.",
                    "sid": 210,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our example, drug and product are correct Product arguments.",
                    "sid": 211,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An incorrect argument is test, as it was judged that a test is not a product.",
                    "sid": 212,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated all 20 schemas.",
                    "sid": 213,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The 13 mapped schemas used their assigned frames, and we created frame element definitions for the remaining 7 that were consistent with the syntactic positions.",
                    "sid": 214,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There were 400 possible arguments (20 schemas, 2 chains each), and 289 were judged correct for a precision of 72%.",
                    "sid": 215,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This number includes Person and Organization names as correct fillers.",
                    "sid": 216,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A more conservative metric removing these classes results in 259 (65%) correct.",
                    "sid": 217,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most of the errors appear to be from parsing mistakes.",
                    "sid": 218,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several resulted from confusing objects with adjuncts.",
                    "sid": 219,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Others misattached modifiers, such as including most as an argument.",
                    "sid": 220,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The cooking schema appears to have attached verbal arguments learned from instruction lists (wash, heat, boil).",
                    "sid": 221,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two schemas require situations as arguments, but the dependency graphs chose as arguments the subjects of the embedded clauses, resulting in 20 incorrect arguments in these schema.",
                    "sid": 222,
                    "ssid": 71,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "evaluation: cloze. ",
            "number": "6",
            "sents": [
                {
                    "text": "The previous section compared our learned knowledge to current work in event and role semantics.",
                    "sid": 223,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We now provide a more formal evaluation against untyped narrative chains.",
                    "sid": 224,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The two main contributions of schema are (1) adding typed arguments and (2) considering joint chains in one model.",
                    "sid": 225,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate each using the narrative cloze test as in (Chambers and Jurafsky, 2008).",
                    "sid": 226,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.1 Narrative Cloze.",
                    "sid": 227,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The cloze task (Taylor, 1953) evaluates human understanding of lexical units by removing a random word from a sentence and asking the subject to guess what is missing.",
                    "sid": 228,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The narrative cloze is a variation on this idea that removes an event slot from a known narrative chain.Performance is measured by the position of the missing event slot in a system\u2019s ranked guess list.",
                    "sid": 229,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This task is particularly attractive for narrative schemas (and chains) because it aligns with one of the original ideas behind Schankian scripts, namely that scripts help humans \u2018fill in the blanks\u2019 when language is underspecified.",
                    "sid": 230,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2 Training and Test Data.",
                    "sid": 231,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We count verb pairs and shared arguments over the NYT portion of the Gigaword Corpus (years 19942004), approximately one million articles.",
                    "sid": 232,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1350 1300 1250 1200 1150 1100 1050 1000 Narrati ve Cloze Test Chai n Typ ed Cha in Sch em a Type d Sche ma of 4).",
                    "sid": 233,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dotte d line \u2018Ch ain\u2019 and solid \u2018Sch ema\u2019 sho w perfo rman ce resul ts in figur e 6.",
                    "sid": 234,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Narr ative Sche mas have bette r rank ed scor es in all data sizes and follo w the previ ous expe rime nt in impr ovin g resul ts as more data is adde d even thou gh unty ped chain s trend upwa rd. We see a 3.3 % gain at 200 4.",
                    "sid": 235,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 . 5 T y p e d N a r r a t i v e S c h e m a The final eval uatio n com bine s sche mas with ar- gum ent type s to mea sure over all gain . We.",
                    "sid": 236,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "evaluate d with both head wor ds and CB C clust ers as argu ment repre sent ation s. Not only do type d chai ns and sche mas outp erfor m unty ped chai ns, 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 Training Data from 1994\u2212X Figure 6: Results with varying sizes of training data.",
                    "sid": 237,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We parse the text into typed dependency graphs with the Stanford Parser (de Marneffe et al., 2006), recording all verbs with subject, object, or prepositional typed dependencies.",
                    "sid": 238,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unlike in (Chambers and Jurafsky, 2008), we lemmatize verbs and argument head words.",
                    "sid": 239,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the OpenNLP1 coreference engine to resolve entity mentions.",
                    "sid": 240,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The test set is the same as in (Chambers and Jurafsky, 2008).",
                    "sid": 241,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "100 random news articles were selected from the 2001 NYT section of the Gigaword Corpus.",
                    "sid": 242,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Articles that did not contain a protagonist with five or more events were ignored, leaving a test set of 69 articles.",
                    "sid": 243,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used a smaller development set of size 17 to tune parameters.",
                    "sid": 244,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.3 Typed Chains.",
                    "sid": 245,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first evaluation compares untyped against typed narrative event chains.",
                    "sid": 246,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The typed model uses equation 4 for chain clustering.",
                    "sid": 247,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dotted line \u2018Chain\u2019 and solid \u2018Typed Chain\u2019 in figure 6 shows the average ranked position over the test set.",
                    "sid": 248,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The untyped chains plateau and begin to worsen as the amount of training data increases, but the typed model is able to improve for some time after.",
                    "sid": 249,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We see a 6.9% gain at 2004 when both lines trend upwards.",
                    "sid": 250,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.4 Narrative Schema.",
                    "sid": 251,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second evaluation compares the performance of the narrative schema model against single narrative chains.",
                    "sid": 252,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We ignore argument types and use untyped chains in both (using equation 1 instead 1 http://opennlp.sourceforge.net/ combining the two gives a further performance boost.",
                    "sid": 253,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Clustered arguments improve the results further, helping with sparse argument counts (\u2018Typed Schema\u2019 in figure 6 uses CBC arguments).",
                    "sid": 254,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, using all the data (by year 2004) shows a 10.1% improvement over untyped narrative chains.",
                    "sid": 255,
                    "ssid": 33,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "discussion. ",
            "number": "7",
            "sents": [
                {
                    "text": "Our significant improvement in the cloze evaluation shows that even though narrative cloze does not evaluate argument types, jointly modeling the arguments with events improves event clustering.",
                    "sid": 256,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Likewise, the FrameNet comparison suggests that modeling related events helps argument learning.",
                    "sid": 257,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tasks mutually inform each other.",
                    "sid": 258,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our argument learning algorithm not only performs unsupervised induction of situation-specific role classes, but the resulting roles and linking structures may also offer the possibility of (unsupervised) FrameNet-style semantic role labeling.",
                    "sid": 259,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finding the best argument representation is an important future direction.",
                    "sid": 260,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance of our noun clusters in figure 6 showed that while the other approaches leveled off, clusters continually improved with more data.",
                    "sid": 261,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The exact balance between lexical units, clusters, or more general (traditional) semantic roles remains to be solved, and may be application specific.",
                    "sid": 262,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We hope in the future to show that a range of NLU applications can benefit from the rich inferential structures that narrative schemas provide.",
                    "sid": 263,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgments",
            "number": "",
            "sents": [
                {
                    "text": "This work is funded in part by NSF (IIS0811974).",
                    "sid": 264,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We thank the reviewers and the Stanford NLP Group for helpful suggestions.",
                    "sid": 265,
                    "ssid": 10,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}