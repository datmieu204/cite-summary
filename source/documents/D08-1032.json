{
    "ID": "D08-1032",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Complex questions that require inferencingand synthesizing information from multipledocuments can be seen as a kind of topic-oriented, informative multi-document summarization.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we have experimentedwith one empirical and two unsupervisedstatistical machine learning techniques: k-means and Expectation Maximization (EM),for computing relative importance of the sentences.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the performance of these approaches depends entirely on the feature setused and the weighting of these features.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Weextracted different kinds of features (i.e. lexical, lexical semantic, cosine similarity, basic element, tree kernel based syntactic andshallow-semantic) for each of the documentsentences in order to measure its importanceand relevancy to the user query.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used alocal search technique to learn the weights ofthe features.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For all our methods of generatingsummaries, we have shown the effects of syntactic and shallow-semantic features over thebag of words (BOW) features.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "After having made substantial headway in factoidand list questions, researchers have turned their attention to more complex information needs that cannot be answered by simply extracting named entities (persons, organizations, locations, dates, etc.)from documents.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the question: \u201cDescribe the aftereffects of cyclone SidrNov 2007 inBangladesh\u201d requires inferencing and synthesizinginformation from multiple documents.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information synthesis in NLP can be seen as a kind of topic-oriented, informative multi-document summarization, where the goal is to produce a single text asa compressed version of a set of documents with aminimum loss of relevant information.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we experimented with one empirical and two well-known unsupervised statistical machine learning techniques: k-means and EMand evaluated their performance in generating topic-oriented summaries.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the performance ofthese approaches depends entirely on the feature setused and the weighting of these features.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extracted different kinds of features (i.e. lexical, lexical semantic, cosine similarity, basic element, treekernel based syntactic and shallow-semantic) foreach of the document sentences in order to measureits importance and relevancy to the user query.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wehave used a gradient descent local search techniqueto learn the weights of the features.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traditionally,information extraction techniques are based on theBOW approach augmented by language modeling.But when the task requires the use of more complex semantics, the approaches based on only BOWare often inadequate to perform fine-level textualanalysis.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some improvements on BOW are givenby the use of dependency trees and syntactic parsetrees (Hirao et al., 2004), (Punyakanok et al., 2004),(Zhang and Lee, 2003), but these, too are not adequate when dealing with complex questions whoseanswers are expressed by long and articulated sentences or even paragraphs.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Shallow semantic representations, bearing a more compact information,could prevent the sparseness of deep structural approaches and the weakness of BOW models (Moschitti et al., 2007).",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Attempting an application of 304 syntactic and semantic information to complex QAhence seems natural, as pinpointing the answer to aquestion relies on a deep understanding of the semantics of both.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In more complex tasks such ascomputing the relatedness between the query sentences and the document sentences in order to generate query-focused summaries (or answers to complex questions), to our knowledge no study uses treekernel functions to encode syntactic/semantic information.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For all our methods of generating summaries (i.e. empirical, k-means and EM), we haveshown the effects of syntactic and shallow-semanticfeatures over the BOW features.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper is organized as follows: Section 2 focuses on the related work, Section 3 describes howthe features are extracted, Section 4 discusses thescoring approaches, Section 5 discusses how we remove the redundant sentences before adding themto the summary, Section 6 describes our experimental study.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We conclude and give future directions inSection 7.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "2",
            "sents": [
                {
                    "text": "Researchers all over the world working on query-based summarization are trying different directions to see which methods provide the best results.",
                    "sid": 22,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The LexRank method addressed in (Erkanand Radev, 2004) was very successful in genericmulti-document summarization.",
                    "sid": 23,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A topic-sensitiveLexRank is proposed in (Otterbacher et al., 2005).As in LexRank, the set of sentences in a documentcluster is represented as a graph, where nodes aresentences and links between the nodes are inducedby a similarity relation between the sentences.",
                    "sid": 24,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thenthe system ranked the sentences according to a random walk model defined in terms of both the inter-sentence similarities and the similarities of the sentences to the topic description or question.",
                    "sid": 25,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The summarization methods based on lexicalchain first extract the nouns, compound nouns andnamed entities as candidate words (Li et al., 2007).Then using WordNet, the systems find the semanticsimilarity between the nouns and compound nouns.After that, lexical chains are built in two steps: 1)Building single document strong chains while dis-ambiguating the senses of the words and, 2) building multi-chain by merging the strongest chains of the single documents into one chain.",
                    "sid": 26,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The systemsrank sentences using a formula that involves a) thelexical chain, b) keywords from query and c) namedentities.",
                    "sid": 27,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Harabagiu et al., 2006) introduce a new paradigmfor processing complex questions that relies on acombination of (a) question decompositions; (b) factoid QA techniques; and (c) Multi-Document Sum-marization (MDS) techniques.",
                    "sid": 28,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The question decomposition procedure operates on a Marcov chain, byfollowing a random walk with mixture model on abipartite graph of relations established between concepts related to the topic of a complex question andsubquestions derived from topic-relevant passagesthat manifest these relations.",
                    "sid": 29,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Decomposed questionsare then submitted to a state-of-the-art QA systemin order to retrieve a set of passages that can later bemerged into a comprehensive answer by a MDS system.",
                    "sid": 30,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They show that question decompositions usingthis method can significantly enhance the relevanceand comprehensiveness of summary-length answersto complex questions.",
                    "sid": 31,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are approaches that are based on probabilistic models (Pingali et al., 2007) (Toutanova et al.,2007).",
                    "sid": 32,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Pingali et al., 2007) rank the sentences basedon a mixture model where each component of themodel is a statistical model: Score(s) = a\u00d7QIScore(s)+(1-a)\u00d7QFocus(s,Q) Where, Score(s) is the score for sentence s. Query-independent score (QIScore) and query-dependent score(QFocus) are calculated based on probabilistic models.(Toutanova et al., 2007) learns a log-linear sentence ranking model by maximizing three metrics of sentence goodness: (a) ROUGE oracle, (b) Pyramid-derived, and (c)Model Frequency.",
                    "sid": 33,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The scoring function is learned by fitting weights for a set of feature functions of sentencesin the document set and is trained to optimize a sentencepair-wise ranking criterion.",
                    "sid": 34,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The scoring function is further adapted to apply to summaries rather than sentencesand to take into account redundancy among sentences.",
                    "sid": 35,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are approaches in \u201cRecognizing Textual Entail-ment\u201d, \u201cSentence Alignment\u201d and \u201cQuestion Answering\u201dthat use syntactic and/or semantic information in order tomeasure the similarity between two textual units.",
                    "sid": 36,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(MacCartney et al., 2006) use typed dependency graphs (sameas dependency trees) to represent the text and the hypothesis.",
                    "sid": 37,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then they try to find a good partial alignment between the typed dependency graphs representing the hypothesis and the text in a search space of O((m + 1)n) 305 where hypothesis graph contains n nodes and a text graphcontains m nodes.",
                    "sid": 38,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Hirao et al., 2004) represent the sentences using Dependency Tree Path (DTP) to incorporatesyntactic information.",
                    "sid": 39,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They apply String SubsequenceKernel (SSK) to measure the similarity between the DTPsof two sentences.",
                    "sid": 40,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also introduce Extended StringSubsequence Kernel (ESK) to incorporate semantics inDTPs.",
                    "sid": 41,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Kouylekov and Magnini, 2005) use the tree editdistance algorithms on the dependency trees of the textand the hypothesis to recognize the textual entailment.According to this approach, a text T entails a hypothesisH if there exists a sequence of transformations (i.e. deletion, insertion and substitution) applied to T such thatwe can obtain H with an overall cost below a certainthreshold.",
                    "sid": 42,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Punyakanok et al., 2004) represent the question and the sentence containing answer with their dependency trees.",
                    "sid": 43,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They add semantic information (i.e. namedentity, synonyms and other related words) in the dependency trees.",
                    "sid": 44,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They apply the approximate tree matchingin order to decide how similar any given pair of trees are.They also use the edit distance as the matching criteria inthe approximate tree matching.",
                    "sid": 45,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All these methods showthe improvement over the BOW scoring methods.",
                    "sid": 46,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our Basic Element (BE)-based feature used the dependency tree to extract the BEs (i.e. head-modifier-relation)and ranked the BEs based on their log-likelihood ratios.For syntactic feature, we extracted the syntactic trees forthe sentence as well as for the query using the Charniakparser and measured the similarity between the two treesusing the tree kernel function.",
                    "sid": 47,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the ASSERT semantic role labeler system to parse the sentence as wellas the query semantically and used the shallow semantic tree kernel to measure the similarity between the twoshallow-semantic trees.",
                    "sid": 48,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 Feature ExtractionThe sentences in the document collection are analyzedin various levels and each of the document-sentences isrepresented as a vector of feature-values.",
                    "sid": 49,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The featurescan be divided into several categories:.",
                    "sid": 50,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "N-gram overlap measures the overlapping word sequences between the candidate sentence and the querysentence.",
                    "sid": 51,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With the view to measure the N-gram(N=1,2,3,4) overlap scores, a query pool and a sentencepool are created.",
                    "sid": 52,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to create the query (or sentence)pool, we took the query (or document) sentence and created a set of related sentences by replacing its importantwords1 by their first-sense synonyms.",
                    "sid": 53,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example given 1hence forth important words are the nouns, verbs, adverbsand adjectives a stemmed document-sentence: \u201cJohn write a poem\u201d, thesentence pool contains: \u201cJohn compose a poem\u201d, \u201cJohnwrite a verse form\u201d along with the given sentence.",
                    "sid": 54,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wemeasured the recall based n-gram scores for a sentence Pusing the following formula: n-gramScore(P) = maxi(maxj N-gram(si, qj)) N-gram(S,Q) =?",
                    "sid": 55,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "gramn?SCountmatch(gramn)?",
                    "sid": 56,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "gramn?SCount(gramn) Where, n stands for the length of the n-gram (n =1, 2, 3, 4) and Countmatch (gramn) is the numberof n-grams co-occurring in the query and the candidate sentence, qj is the jth sentence in the querypool and si is the ith sentence in the sentence poolof sentence P . 3.1.2 LCS, WLCS and Skip-Bigram A sequence W = [w1, w2, ..., wn] is a subsequence of another sequence X = [x1, x2, ..., xm], ifthere exists a strict increasing sequence [i1, i2, ..., ik]of indices of X such that for all j =1, 2, ..., k we have xij = wj . Given two sequences,S1 and S2, the Longest Common Subsequence(LCS) of S1 and S2 is a common subsequence withmaximum length.",
                    "sid": 57,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The longer the LCS of two sentences is, the more similar the two sentences are.",
                    "sid": 58,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The basic LCS has a problem that it does not differentiate LCSes of different spatial relations withintheir embedding sequences (Lin, 2004).",
                    "sid": 59,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To improvethe basic LCS method, we can remember the lengthof consecutive matches encountered so far to a regular two dimensional dynamic program table computing LCS.",
                    "sid": 60,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We call this weighted LCS (WLCS)and use k to indicate the length of the current consecutive matches ending at words xi and yj . Giventwo sentences X and Y, the WLCS score of X andY can be computed using the similar dynamic programming procedure as stated in (Lin, 2004).",
                    "sid": 61,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wecomputed the LCS and WLCS-based F-measure following (Lin, 2004) using both the query pool and thesentence pool as in the previous section.",
                    "sid": 62,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Skip-bigram is any pair of words in their sentenceorder, allowing for arbitrary gaps.",
                    "sid": 63,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Skip-bigram measures the overlap of skip-bigrams between a candidate sentence and a query sentence.",
                    "sid": 64,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following (Lin,2004), we computed the skip bi-gram score usingboth the sentence pool and the query pool.",
                    "sid": 65,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "306 3.1.3 Head and Head Related-words Overlap The number of head words common in betweentwo sentences can indicate how much they are relevant to each other.",
                    "sid": 66,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to extract the headsfrom the sentence (or query), the sentence (or query)is parsed by Minipar 2 and from the dependencytree we extract the heads which we call exact headwords.",
                    "sid": 67,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the head word of the sentence:\u201cJohn eats rice\u201d is \u201ceat\u201d.",
                    "sid": 68,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We take the synonyms, hyponyms and hyper-nyms3 of both the query-head words and thesentence-head words and form a set of words whichwe call head-related words.",
                    "sid": 69,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We measured the exacthead score and the head-related score as follows: ExactHeadScore = ?w1?HeadSet Countmatch(w1)?w1?HeadSet Count(w1) HeadRelatedScore = ?w1?HeadRelSet Countmatch(w1)?w1?HeadRelSet Count(w1) Where HeadSet is the set of head words in the sentence and Countmatch is the number of matchesbetween the HeadSet of the query and the sentence.",
                    "sid": 70,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "HeadRelSet is the set of synonyms, hyponyms and hypernyms of head words in the sentence and Countmatch is the number of matchesbetween the head-related words of the query and thesentence.",
                    "sid": 71,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We form a set of words which we call QueryRelatedWords by taking the important words from thequery, their first-sense synonyms, the nouns\u2019 hypernyms/hyponyms and important words from thenouns\u2019 gloss definitions.",
                    "sid": 72,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Synonym overlap measure is the overlap between the list of synonyms of the important wordsextracted from the candidate sentence and theQueryRelatedWords.",
                    "sid": 73,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hypernym/hyponym overlapmeasure is the overlap between the list of hypernymsand hyponyms of the nouns extracted from the sentence and the QueryRelatedWords, and gloss overlapmeasure is the overlap between the list of importantwords that are extracted from the gloss definitionsof the nouns of the sentence and the QueryRelated-Words.2http://www.cs.ualberta.ca/ lindek/minipar.htm3hypernym and hyponym levels are restricted to 2 and 3 re spectively 3.3 Statistical Similarity Measures.",
                    "sid": 74,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Statistical similarity measures are based on thecooccurance of similar words in a corpus.",
                    "sid": 75,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wehave used two statistical similarity measures:1.",
                    "sid": 76,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency-based similarity measure and 2.Proximity-based similarity measure.",
                    "sid": 77,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency-based similarity measure uses thedependency relations among words in order to measure the similarity.",
                    "sid": 78,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It extracts the dependency triplesthen uses statistical approach to measure the similarity.",
                    "sid": 79,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proximity-based similarity measure is computedbased on the linear proximity relationship betweenwords only.",
                    "sid": 80,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It uses the information theoretic definition of similarity to measure the similarity.",
                    "sid": 81,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the data provided by Dr. Dekang Lin4.Using the data, one can retrieve most similar wordsfor a given word.",
                    "sid": 82,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The similar words are grouped intoclusters.",
                    "sid": 83,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that, for a word there can be more thanone cluster.",
                    "sid": 84,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each cluster represents the sense of theword and its similar words for that sense.",
                    "sid": 85,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each query word, we extract all of its clusters from the data.",
                    "sid": 86,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, in order to determine theright cluster for a query word, we measure the overlap score between the QueryRelatedWords and theclusters of words.",
                    "sid": 87,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The hypothesis is that, the clusterthat has more words common with the QueryRelatedWords is the right cluster.",
                    "sid": 88,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We chose the cluster fora word which has the highest overlap score.",
                    "sid": 89,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once we get the clusters for the query words, wemeasured the overlap between the cluster words andthe sentence words as follows: Measure = ?w1?SenWords Countmatch(w1)?w1?SenWords Count(w1) Where, SenWords is the set of important words extracted from the sentence and Countmatch is the numberof matches between the sentence words and the clustersof similar words of the query words.",
                    "sid": 90,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A similarity graph is produced for the sentences in the document collection.",
                    "sid": 91,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the graph, each node represents asentence.",
                    "sid": 92,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The edges between the nodes measure the cosine similarity between the respective pair of sentences.The degree of a given node is an indication of how muchimportant the sentence is. Once the similarity graph is. 4http://www.cs.ualberta.ca/ lindek/downloads.htm 307 constructed, the sentences are then ranked according totheir eigenvector centrality.",
                    "sid": 93,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To apply LexRank to query-focused context, a topic-sensitive version of LexRank isproposed in (Otterbacher et al., 2005).",
                    "sid": 94,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We followed asimilar approach in order to calculate this feature.",
                    "sid": 95,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thescore of a sentence is determined by a mixture model ofthe relevance of the sentence to the query and the similarity of the sentence to other high-scoring sentences.",
                    "sid": 96,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task like query-based summarizationthat requires the use of more complex syntactic and semantics, the approaches with only BOW are often inadequate to perform fine-level textual analysis.",
                    "sid": 97,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extractedthree features that incorporate syntactic/semantic information..",
                    "sid": 98,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The triples encode some syntactic/semantic information and one can quite easily decide whether any twounits match or not- considerably more easily than withlonger units (Zhou et al., 2005).",
                    "sid": 99,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the BE packagedistributed by ISI5 to extract the BEs for the sentences.",
                    "sid": 100,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once we get the BEs for a sentence, we computed theLikelihood Ratio (LR) for each BE following (Zhou etal., 2005).",
                    "sid": 101,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sorting BEs according to their LR scores produced a BE-ranked list.",
                    "sid": 102,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our goal is to generate a summary that will answer the user questions.",
                    "sid": 103,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rankedlist of BEs in this way contains important BEs at the topwhich may or may not be relevant to the user questions.We filter those BEs by checking whether they contain anyword which is a query word or a QueryRelatedWords (defined in Section 3.2).",
                    "sid": 104,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The score of a sentence is the sumof its BE scores divided by the number of BEs in the sentence.3.5.2 Syntactic FeatureEncoding syntactic structure is easier and straight for ward.",
                    "sid": 105,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a sentence (or query), we first parse it intoa syntactic tree using a syntactic parser (i.e. Charniakparser) and then we calculate the similarity between thetwo trees using the tree kernel defined in (Collins andDuffy, 2001).",
                    "sid": 106,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Shallow semantic representations, bearing amore compact information, could prevent the sparsenessof deep structural approaches and the weakness of BOWmodels (Moschitti et al., 2007).",
                    "sid": 107,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initiatives such as PropBank (PB) (Kingsbury andPalmer, 2002) have made possible the design of accurateautomatic Semantic Role Labeling (SRL) systems likeASSERT (Hacioglu et al., 2003).",
                    "sid": 108,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, considerthe PB annotation: [ARG0 all][TARGET use][ARG1 the frenchfranc][ARG2 as their currency] Such annotation can be used to design a shallow semantic representation that can be matched against othersemantically similar sentences, e.g. [ARG0 the Vatican][TARGET use][ARG1 the Italianlira][ARG2 as their currency] In order to calculate the semantic similarity betweenthe sentences, we first represent the annotated sentenceusing the tree structures like Figure 1 which we call Semantic Tree (ST).",
                    "sid": 109,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the semantic tree, arguments are replaced with the most important word-often referred to asthe semantic head.",
                    "sid": 110,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The sentences may contain one or more subordinateclauses.",
                    "sid": 111,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example the sentence, \u201cthe Vatican, locatedwholly within Italy uses the Italian lira as their currency.\u201dgives the STs as in Figure 2.",
                    "sid": 112,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As we can see in Figure 2(A), when an argument node corresponds to an entire subordinate clause, we label its leaf with ST, e.g.the leaf of ARG0.",
                    "sid": 113,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such ST node is actually the root ofthe subordinate clause in Figure 2(B).",
                    "sid": 114,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If taken separately,such STs do not express the whole meaning of the sentence, hence it is more accurate to define a single structure encoding the dependency between the two predicatesas in Figure 2(C).",
                    "sid": 115,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We refer to this kind of nested STs asSTNs.",
                    "sid": 116,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that, the tree kernel (TK) function defined in(Collins and Duffy, 2001) computes the number of common subtrees between two trees.",
                    "sid": 117,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such subtrees are subject to the constraint that their nodes are taken with allor none of the children they have in the original tree.",
                    "sid": 118,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "308 Figure 2: Two STs composing a STN Though, this definition of subtrees makes the TK function appropriate for syntactic trees but at the same timemakes it not well suited for the semantic trees (ST) defined above.",
                    "sid": 119,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, although the two STs of Figure 1 share most of the subtrees rooted in the ST node,the kernel defined above computes only one match (STARG0 TARGET ARG1 ARG2) which is not useful.",
                    "sid": 120,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The critical aspect of the TK function is that the productions of two evaluated nodes have to be identical toallow the match of further descendants.",
                    "sid": 121,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means thatcommon substructures cannot be composed by a nodewith only some of its children as an effective ST representation would require.",
                    "sid": 122,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Moschitti et al., 2007) solve thisproblem by designing the Shallow Semantic Tree Kernel(SSTK) which allows to match portions of a ST. We followed the similar approach to compute the SSTK.",
                    "sid": 123,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4 Ranking SentencesIn this section, we describe the scoring techniques in detail..",
                    "sid": 124,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Learning Feature-weights: A Local SearchStrategy.",
                    "sid": 125,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to fine-tune the weights of the features, we useda local search technique with simulated annealing to findthe global maximum.",
                    "sid": 126,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Initially, we set all the feature-weights, w1, \u00b7 \u00b7 \u00b7 , wn, as equal values (i.e. 0.5) (see Algorithm 1).",
                    "sid": 127,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on the current weights we score thesentences and generate summaries accordingly.",
                    "sid": 128,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluate the summaries using the automatic evaluation toolROUGE (Lin, 2004) (described in Section 6) and theROUGE value works as the feedback to our learningloop.",
                    "sid": 129,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our learning system tries to maximize the ROUGEscore in every step by changing the weights individuallyby a specific step size (i.e. 0.01).",
                    "sid": 130,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That means, to learnweight wi, we change the value of wi keeping all otherweight values (wj?j 6=i) stagnant.",
                    "sid": 131,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each weight wi,the algorithm achieves the local maximum of ROUGEvalue.",
                    "sid": 132,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to find the global maximum we ran this algorithm multiple times with different random choicesof initial values (i.e. simulated annealing).",
                    "sid": 133,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Input: Stepsize l, Weight Initial Value vOutput: A vector ~w of learned weightsInitialize the weight values wi to v.for i?",
                    "sid": 134,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 to n do rg1 = rg2 = prev = 0while (true) do scoreSentences(~w)generateSummaries()rg2 = evaluateROUGE()if rg1 = rg2 then prev = wiwi+ = lrg1 = rg2 elsebreak endend endreturn ~w Algorithm 1: Tuning weights using Local Searchtechnique Once we have learned the feature-weights, our empirical method computes the final scores for the sentencesusing the formula: scorei = ~xi.",
                    "sid": 135,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "~w (1) Where, ~xi is the feature vector for i-th sentence, ~w isthe weight vector and scorei is the score of i-th sentence.",
                    "sid": 136,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 K-means LearningWe start with a set of initial cluster centers and go throughseveral iterations of assigning each object to the clusterwhose center is closest.",
                    "sid": 137,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After all objects have been assigned, we recompute the center of each cluster as thecentroid or mean (\u00b5) of its members.",
                    "sid": 138,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once we have learned the means of the clusters usingthe k-means algorithm, our next task is to rank the sentences according to a probability model.",
                    "sid": 139,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have usedBayesian model in order to do so.",
                    "sid": 140,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bayes\u2019 law says: P (qk|~x,T) = p(~x|qk,T)P (qk|T)?Kk=1 p(~x|qk,T)p(qk|T) (2) where qk is a class, ~x is a feature vector representing a sentence and T is the parameter set of allclass models.",
                    "sid": 141,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We set the weights of the clusters asequiprobable (i.e. P (qk|T) = 1/K).",
                    "sid": 142,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We calculated 309 p(x|qk,T) using the gaussian probability distribution.",
                    "sid": 143,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The gaussian probability density function (pdf)for the d-dimensional random variable ~x is given by: p(\u00b5,S)(~x) =e-12 (~x-\u00b5)TS-1(~x-\u00b5)v 2pidv det(S)(3) where \u00b5, the mean vector and S, the covariancematrix are the parameters of the gaussian distribution.",
                    "sid": 144,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We get the means (\u00b5) from the k-means algorithm and we calculate the covariance matrix usingthe unbiased covariance estimation: S\u02c6 =1 N - 1N?i=1 (xj - \u00b5j)(xi - \u00b5i)T (4) 4.3 EM LearningEM is an iterative two step procedure:1.",
                    "sid": 145,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Expectation-step and 2.",
                    "sid": 146,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maximization-step.In the expectation step, we compute expected valuesfor the hidden variables hi,j which are cluster membership probabilities.",
                    "sid": 147,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given the current parameters,we compute how likely an object belongs to anyof the clusters.",
                    "sid": 148,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The maximization step computesthe most likely parameters of the model given thecluster membership probabilities.",
                    "sid": 149,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The data-pointsare considered to be generated by a mixture modelof k-gaussians of the form:.",
                    "sid": 150,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P (~x) =k?i=1 P (C = i)P (~x|\u00b5i,Si) (5) Where the total likelihood of model T with kcomponents given the observed data points, X =x1, \u00b7 \u00b7 \u00b7 , xn is: L(T|X) =n?i=1 k?j=1 P (C = j)P (xi|Tj) =n?i=1 k?j=1 wjP (xi|\u00b5j ,Sj) ?n?i=1 logk?j=1 wjP (xi|\u00b5j ,Sj) where P is the probability density function (i.e.eq 3).",
                    "sid": 151,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u00b5j and Sj are the mean and covariance matrix of component j, respectively.",
                    "sid": 152,
                    "ssid": 131,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each component contributes a proportion, wj , of the total population,such that: ?Kj=1wj = 1.",
                    "sid": 153,
                    "ssid": 132,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, a significant problem with the EM algorithm is that it converges to a local maximumof the likelihood function and hence the quality ofthe result depends on the initialization.",
                    "sid": 154,
                    "ssid": 133,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In orderto get good results from using random starting values, we can run the EM algorithm several timesand choose the initial configuration for which weget the maximum log likelihood among all configurations.",
                    "sid": 155,
                    "ssid": 134,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Choosing the best one among severalruns is very computer intensive process.",
                    "sid": 156,
                    "ssid": 135,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So, to improve the outcome of the EM algorithm on gaussian mixture models it is necessary to find a bettermethod of estimating initial means for the components.",
                    "sid": 157,
                    "ssid": 136,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To achieve this aim we explored the widelyused \u201ck-means\u201d algorithm as a cluster (means) finding method.",
                    "sid": 158,
                    "ssid": 137,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That means, the means found by k-means clustering above will be utilized as the initialmeans for EM and we calculate the initial covariance matrices using the unbiased covariance estimation procedure (eq:4).",
                    "sid": 159,
                    "ssid": 138,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Once the sentences are clustered by EM algorithm, we filter out the sentences which arenot query-relevant by checking their probabilities,P (qr|xi,T) where, qr denotes the cluster \u201cquery-relevant\u201d.",
                    "sid": 160,
                    "ssid": 139,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If for a sentence xi, P (qr|xi,T) > 0.5then xi is considered to be query-relevant.",
                    "sid": 161,
                    "ssid": 140,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our next task is to rank the query-relevant sentences in order to include them in the summary.",
                    "sid": 162,
                    "ssid": 141,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thiscan be done easily by multiplying the feature vector~xi with the weight vector ~w that we learned by thelocal search technique (eq:1).",
                    "sid": 163,
                    "ssid": 142,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Redundancy Checking.",
                    "sid": 164,
                    "ssid": 143,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When many of the competing sentences are includedin the summary, the issue of information overlap between parts of the output comes up, and a mechanism for addressing redundancy is needed.",
                    "sid": 165,
                    "ssid": 144,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Therefore, our summarization systems employ a final levelof analysis: before being added to the final output,the sentences deemed to be important are comparedto each other and only those that are not too similar to other candidates are included in the final answer or summary.",
                    "sid": 166,
                    "ssid": 145,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following (Zhou et al., 2005), wemodeled this by BE overlap between an intermediate summary and a to-be-added candidate summary 310 sentence.",
                    "sid": 167,
                    "ssid": 146,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We call this overlap ratio R, where R isbetween 0 and 1 inclusively.",
                    "sid": 168,
                    "ssid": 147,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Setting R = 0.7 meansthat a candidate summary sentence, s, can be addedto an intermediate summary, S, if the sentence has aBE overlap ratio less than or equal to 0.7.",
                    "sid": 169,
                    "ssid": 148,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 Experimental Evaluation.",
                    "sid": 170,
                    "ssid": 149,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.1 Evaluation Setup.",
                    "sid": 171,
                    "ssid": 150,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the main task of Document UnderstandingConference (DUC) 2007 for evaluation.",
                    "sid": 172,
                    "ssid": 151,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The taskwas: \u201cGiven a complex question (topic description)and a collection of relevant documents, the task is tosynthesize a fluent, well-organized 250-word summary of the documents that answers the question(s)in the topic.\u201d NIST assessors developed topics of interest tothem and choose a set of 25 documents relevant(document cluster) to each topic.",
                    "sid": 173,
                    "ssid": 152,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each topic and itsdocument cluster were given to 4 different NIST assessors.",
                    "sid": 174,
                    "ssid": 153,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The assessor created a 250-word summaryof the document cluster that satisfies the informationneed expressed in the topic statement.",
                    "sid": 175,
                    "ssid": 154,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These multiple \u201creference summaries\u201d are used in the evaluationof summary content.",
                    "sid": 176,
                    "ssid": 155,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We carried out automatic evaluation of our summaries using ROUGE (Lin, 2004) toolkit, whichhas been widely adopted by DUC for automaticsummarization evaluation.",
                    "sid": 177,
                    "ssid": 156,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It measures summaryquality by counting overlapping units such as then-grams (ROUGE-N), word sequences (ROUGE-Land ROUGE-W) and word pairs (ROUGES andROUGESU) between the candidate summary andthe reference summary.",
                    "sid": 178,
                    "ssid": 157,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ROUGE parameters wereset as the same as DUC 2007 evaluation setup.",
                    "sid": 179,
                    "ssid": 158,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One purpose of our experiments is to study theimpact of different features for complex questionanswering task.",
                    "sid": 180,
                    "ssid": 159,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To accomplish this, we generatedsummaries for the topics of DUC 2007 by each ofour seven systems defined as below: The LEX system generates summaries based ononly lexical features: n-gram (n=1,2,3,4), LCS,WLCS, skip bi-gram, head, head synonym.",
                    "sid": 181,
                    "ssid": 160,
                    "kind_of_tag": "s"
                },
                {
                    "text": "TheLSEM system considers only lexical semanticfeatures: synonym, hypernym/hyponym, gloss,dependency-based and proximity-based similarity.The COS system generates summary based on thegraph-based method.",
                    "sid": 182,
                    "ssid": 161,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The SYS1 system considers all the features except the BE, syntactic and semantic features.",
                    "sid": 183,
                    "ssid": 162,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The SYS2 system considers all the features except the syntactic and semantic features.",
                    "sid": 184,
                    "ssid": 163,
                    "kind_of_tag": "s"
                },
                {
                    "text": "TheSYS3 considers all the features except the semanticand the ALL6 system generates summaries takingall the features into account.",
                    "sid": 185,
                    "ssid": 164,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.2 Evaluation Results.",
                    "sid": 186,
                    "ssid": 165,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 17 to Table 3, Table 4 to Table 6 and Table 7 toTable 9 show the evaluation measures for k-means,EM and empirical approaches respectively.",
                    "sid": 187,
                    "ssid": 166,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As Table 1 shows, in k-means, SYS2 gets 021%, SYS3gets 432% and ALL gets 336% improvement inROUGE2 scores over the SYS1 system.",
                    "sid": 188,
                    "ssid": 167,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We get bestROUGE-W (Table 2) scores for SYS2 (i.e. including BE) but SYS3 and ALL do not perform well inthis case.",
                    "sid": 189,
                    "ssid": 168,
                    "kind_of_tag": "s"
                },
                {
                    "text": "SYS2 improves the ROUGE-W F-score by1% over SYS1.",
                    "sid": 190,
                    "ssid": 169,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We do not get any improvement inROUGESU (Table 3) scores when we include anykind of syntactic/semantic structures.",
                    "sid": 191,
                    "ssid": 170,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The case is different for EM and empirical approaches.",
                    "sid": 192,
                    "ssid": 171,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, in every case we get a significantamount of improvement when we include the syntactic and/or semantic features.",
                    "sid": 193,
                    "ssid": 172,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For EM (Table 4 toTable 6), the ratio of improvement in F-scores overSYS1 is: 13% for SYS2, 315% for SYS3 and 224% for ALL.",
                    "sid": 194,
                    "ssid": 173,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our empirical approach (Table 7to Table 9), SYS2, SYS3 and ALL improve the F-scores by 311%, 715% and 819% over SYS1 respectively.",
                    "sid": 195,
                    "ssid": 174,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These results clearly indicate the positiveimpact of the syntactic/semantic features for complex question answering task.",
                    "sid": 196,
                    "ssid": 175,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.074 0.077 0.086 0.075 0.075 0.078 0.077 P 0.081 0.084 0.093 0.081 0.098 0.107 0.110 F 0.078 0.080 0.089 0.078 0.085 0.090 0.090 Table 1: ROUGE-2 measures in k-means learningTable 10 shows the F-scores of the ROUGE measures for one baseline system, the best system inDUC 2007 and our three scoring techniques considering all features.",
                    "sid": 197,
                    "ssid": 176,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The baseline system gener 6SYS2, SYS3 and ALL systems show the impact of BE,syntactic and semantic features respectively 7R stands for Recall, P stands for Precision and F stands forF-score 311 Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.098 0.097 0.101 0.099 0.101 0.097 0.097P 0.195 0.194 0.200 0.237 0.233 0.241 0.237F 0.130 0.129 0.134 0.140 0.141 0.139 0.138 Table 2: ROUGE-W measures in k-means learning Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.131 0.127 0.139 0.136 0.135 0.135 0.135P 0.155 0.152 0.162 0.176 0.171 0.174 0.174F 0.142 0.139 0.150 0.153 0.151 0.152 0.152 Table 3: ROUGESU in k-means learning Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.089 0.080 0.087 0.085 0.085 0.089 0.091P 0.096 0.087 0.094 0.092 0.095 0.116 0.138F 0.092 0.083 0.090 0.088 0.090 0.101 0.109 Table 4: ROUGE-2 measures in EM learning Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.103 0.096 0.101 0.102 0.101 0.102 0.101P 0.205 0.193 0.200 0.203 0.218 0.222 0.223F 0.137 0.128 0.134 0.136 0.138 0.139 0.139 Table 5: ROUGE-W measures in EM learning Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.146 0.128 0.138 0.143 0.144 0.145 0.144P 0.171 0.153 0.162 0.168 0.177 0.186 0.185F 0.157 0.140 0.149 0.154 0.159 0.163 0.162 Table 6: ROUGESU measures in EM learning Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.086 0.080 0.087 0.087 0.090 0.095 0.099P 0.093 0.087 0.094 0.094 0.112 0.115 0.116F 0.089 0.083 0.090 0.090 0.100 0.104 0.107 Table 7: ROUGE-2 in empirical approach Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.102 0.096 0.101 0.102 0.102 0.104 0.105P 0.203 0.193 0.200 0.204 0.239 0.246 0.247F 0.135 0.128 0.134 0.137 0.143 0.147 0.148 Table 8: ROUGE-W in empirical approach Score LEX LSEM COS SYS1 SYS2 SYS3 ALL R 0.144 0.129 0.138 0.145 0.146 0.149 0.150P 0.169 0.153 0.162 0.171 0.182 0.195 0.197F 0.155 0.140 0.150 0.157 0.162 0.169 0.170 Table 9: ROUGESU in empirical approach ates summaries by returning all the leading sentences (up to 250 words) in the <TEXT > field ofthe most recent document(s).",
                    "sid": 198,
                    "ssid": 177,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It shows that the empirical approach outperforms the other two learningtechniques and EM performs better than k-means algorithm.",
                    "sid": 199,
                    "ssid": 178,
                    "kind_of_tag": "s"
                },
                {
                    "text": "EM improves the F-scores over k-meansby 0.722.5%.",
                    "sid": 200,
                    "ssid": 179,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Empirical approach improves the F-scores over k-means and EM by 5.920.2% and 3.56.5% respectively.",
                    "sid": 201,
                    "ssid": 180,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Comparing with the DUC 2007participants our systems achieve top scores and forsome ROUGE measures there is no statistically significant difference between our system and the bestDUC 2007 system.",
                    "sid": 202,
                    "ssid": 181,
                    "kind_of_tag": "s"
                },
                {
                    "text": "System ROUGE-1 ROUGE-2 ROUGE-W ROUGESU Baseline 0.335 0.065 0.114 0.113 Best 0.438 0.122 0.153 0.174 k-means 0.390 0.090 0.138 0.152 EM 0.399 0.109 0.139 0.162 Empirical 0.413 0.107 0.148 0.170 Table 10: F-measures for different systems 7 Conclusion and Future Work.",
                    "sid": 203,
                    "ssid": 182,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experiments show the following: (a) our approaches achieve promising results, (b) empiricalapproach outperforms the other two learning andEM performs better than the k-means algorithm forthis particular task, and (c) our systems achieve better results when we include BE, syntactic and semantic features.",
                    "sid": 204,
                    "ssid": 183,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In future, we have the plan to decompose the complex questions into several simple questions beforemeasuring the similarity between the document sentence and the query sentence.",
                    "sid": 205,
                    "ssid": 184,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expect that by decomposing complex questions into the sets of sub-questions that they entail, systems can improve theaverage quality of answers returned and achieve better coverage for the question as a whole.",
                    "sid": 206,
                    "ssid": 185,
                    "kind_of_tag": "s"
                },
                {
                    "text": "312",
                    "sid": 207,
                    "ssid": 186,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}