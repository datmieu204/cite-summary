{
    "ID": "W03-0432",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "We present a named entity recognition and classification system that uses only probabilistic character-level features.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classifications by multiple orthographic tries are combined in a hidden Markov model framework to incorporate both internal and contextual evidence.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As part of the system, we perform a preprocessing stage in which capitalisation is restored to sentence-initial and all-caps words with high accuracy.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We report f-values of 86.65 and 79.78 for English, and 50.62 and 54.43 for the German datasets.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Language independent NER requires the development of a metalinguistic model that is sufficiently broad to accommodate all languages, yet can be trained to exploit the specific features of the target language.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our aim in this paper is to investigate the combination of a character- level model, orthographic tries, with a sentence-level hidden Markov model.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The local model uses affix information from a word and its surrounds to classify each word independently, and relies on the sentence-level model to determine a correct state sequence.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Capitalisation is an often-used discriminator for NER, but can be misleading in sentence-initial or all-caps text.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We choose to use a model that makes no assumptions about the capitalisation scheme, or indeed the character set, of the target language.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We solve the problem of misleading case in a novel way by removing the effects of sentence-initial or all-caps capitalisation.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This results in a simpler language model and easier recognition of named entities while remaining strongly language independent.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "probabilistic classification using. ",
            "number": "2",
            "sents": [
                {
                    "text": "Orthographic Tries Tries are an efficient data structure for capturing statistical differences between strings in different categories.",
                    "sid": 12,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In an orthographic trie, a path from the root through n nodes represents a string a1 a2 . . .",
                    "sid": 13,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an . The nth node in the path stores the occurrences (frequency) of the string a1 a2 . . .",
                    "sid": 14,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an in each word category.",
                    "sid": 15,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These frequencies can be used to calculate probability estimatesP (c | a1 a2 . . .",
                    "sid": 16,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an ) for each category c. Tries have previ ously been used in both supervised (Patrick et al., 2002) and unsupervised (Cucerzan and Yarowsky, 1999) named entity recognition.",
                    "sid": 17,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each node in an orthographic trie stores the cumulative frequency information for each category in which a given string of characters occurs.",
                    "sid": 18,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A heterogeneous node represents a string that occurs in more than one category, while a homogeneous node represents a string that occurs in only one category.",
                    "sid": 19,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a string a1 a2 . . .",
                    "sid": 20,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an occurs in only one category, all longer strings a1 a2 . . .",
                    "sid": 21,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an . . .",
                    "sid": 22,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an+k are also of the same category.",
                    "sid": 23,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This redundancy can be exploited when constructing a trie.",
                    "sid": 24,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We build minimum- depth MD-tries which have the condition that all nodes are heterogeneous, and all leaves are homogeneous.",
                    "sid": 25,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MD- tries are only as large as is necessary to capture the differences between categories, and can be built efficiently to large depths.",
                    "sid": 26,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MD-tries have been shown to give better performance than a standard trie with the same number of nodes (Whitelaw and Patrick, 2002).",
                    "sid": 27,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a string a1 a2 . . .",
                    "sid": 28,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an and a category c an orthographic trie yields a set of relative probabilities P (c | a1 ), P (c | a1 a2 ), . . ., P (c | a1 a2 . . .",
                    "sid": 29,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an ).",
                    "sid": 30,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The probability that a string indicates a particular class is estimated along the whole trie path, which helps to smooth scores for rare strings.",
                    "sid": 31,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The contribution of each level in the trie is governed by a linear weighting function of the form n P (c | a1 a2 . . .",
                    "sid": 32,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "an ) = ) \u03bbi P (c | a1 a2 . . .",
                    "sid": 33,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ai ) i=1 n where \u03bbi \u2208 [0, 1] and ) \u03bbi = 1 i=1 Tries are highly language independent.",
                    "sid": 34,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They make no assumptions about character set, or the relative importance of different parts of a word or its context.",
                    "sid": 35,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Tries use a progressive back-off and smoothing model that is well suited to the classification of previously unseen words.",
                    "sid": 36,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While each trie looks only at a single context, multiple tries can be used together to capture both word-internal and external contextual evidence of class membership.",
                    "sid": 37,
                    "ssid": 26,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "restoring case information. ",
            "number": "3",
            "sents": [
                {
                    "text": "In European languages, named entities are often distinguished through their use of capitalisation.",
                    "sid": 38,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, capitalisation commonly plays another role, that of marking the first word in a sentence.",
                    "sid": 39,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, some sentences such as newspaper headlines are written in all- capitals for emphasis.",
                    "sid": 40,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In these environments, the case information that has traditionally been so useful to NER systems is lost.",
                    "sid": 41,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Previous work in NER has been aware of this problem of dealing with words without accurate case information, and various workarounds have been exploited.",
                    "sid": 42,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most commonly, feature-based classifiers use a set of capitalisation features and a sentence-initial feature (Bikel et al., 1997).",
                    "sid": 43,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chieu and Ng used global information such as the occurrence of the same word with other capitalisation in the same document (Chieu and Ng, 2002a), and have also used a mixed-case classifier to teach a \u201cweaker\u201d classifier that did not use case information at all (Chieu and Ng, 2002b).",
                    "sid": 44,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose a different solution to the problem of case- less words.",
                    "sid": 45,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rather than noting their lack of case and treating them separately, we propose to restore the correct capitalisation as a preprocessing step, allowing all words to be treated in the same manner.",
                    "sid": 46,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If this process of case restoration is sufficiently accurate, capitalisation should be more correctly associated with entities, resulting in better recognition performance.",
                    "sid": 47,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Restoring case information is not equivalent to distinguishing common nouns from proper nouns.",
                    "sid": 48,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is particularly evident in German, where all types of nouns are written with an initial capital letter.",
                    "sid": 49,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The purpose of case restoration is simply to reveal the underlying capitalisation model of the language, allowing machine learners to learn more accurately from orthography.",
                    "sid": 50,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose two methods, each of which requires a corpus with accurate case information.",
                    "sid": 51,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such a corpus is easily obtained; any unannotated corpus can be used once Table 1: Case restoration performance using an MDtrie, English.",
                    "sid": 52,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "sentence-initial words and allcaps sentences have been excluded.",
                    "sid": 53,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For both languages, the training corpus consisted of the raw data, training and test data combined.",
                    "sid": 54,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first method for case restoration is to replace a caseless word with its most frequent form.",
                    "sid": 55,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Word capitalisation frequencies can easily be computed for corpora of any size.",
                    "sid": 56,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The major weakness of this technique is that each word is classified individually without regard for its context.",
                    "sid": 57,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, \u201cnew\u201d will always be written in lowercase, even when it is part of a valid capitalised phrase such as \u201cNew York\u201d.",
                    "sid": 58,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second method uses an MDtrie which, if allowed to extend over word boundaries, can effectively capture the cases where a word has multiple possible forms.",
                    "sid": 59,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since an MDtrie is only built as deep as is required to capture differences between categories, most paths will still be quite shallow.",
                    "sid": 60,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in other word categorisation tasks, tries can robustly deal with unseen words by performing classification on the longest matchable prefix.",
                    "sid": 61,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To test these recapitalisation methods, the raw, training, and development sets were used as the training set.",
                    "sid": 62,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the second test set, only words with known case information were used for testing, resulting in corpora of 30484 and 39639 words for English and German respectively.",
                    "sid": 63,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each word was classified as either lowercase (\u201cnew\u201d), initial-caps (\u201cNew\u201d), all-caps(\u201cU.S.\u201d), or inner- caps (\u201cex-English\u201d).",
                    "sid": 64,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On this test set, the word-frequency method and the trie-based method achieved accuracies of 93.9% and 95.7% respectively for English, and 95.4% and 96.3% in German.",
                    "sid": 65,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 shows the trie performance for English in more detail.",
                    "sid": 66,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In practice, it is usually possible to train on the same corpus as is being re- capitalised.",
                    "sid": 67,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This will give more accurate information for those words which appear in both known-case and unknown-case positions, and should yield higher accuracy.",
                    "sid": 68,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This process of restoring case information is language independent and requires only an unannotated corpus in the target language.",
                    "sid": 69,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is a pre-processing step that can be ignored for languages where case information is either not present or is not lost.",
                    "sid": 70,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "NER Table 2: Recognition performance.",
                    "sid": 71,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "classification process. ",
            "number": "4",
            "sents": [
                {
                    "text": "The training data was converted to use the IOB2 phrase model (Tjong Kim Sang and Veenstra, 1999).",
                    "sid": 72,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This phrase model was found to be more appropriate to the nature of NE phrases in both languages, in that the first word in the phrase may behave differently to consecutive words.",
                    "sid": 73,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "MD-Tries were trained on the prefix and suffix of the current word, and the left and right surrounding contexts.",
                    "sid": 74,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each trie Tx produces an independent probability estimate, PTx (c | context).",
                    "sid": 75,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These probabilities are com bined to produce a single estimate n P (c | context) = n PT (c | context) i=0 These probabilities are then used directly as observation probabilities in a hidden Markov model (HMM) framework.",
                    "sid": 76,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An HMM uses probability matrices \u03a0, A, and B for the initial state, state transitions, and symbol emissions respectively (Manning and Schu\u00a8 tze, 1999).",
                    "sid": 77,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We derive \u03a0 and A from the training set.",
                    "sid": 78,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rather than explicitly defining B, trie-based probability estimates are used directly within the standard Viterbi algorithm, which exploits dynamic programming to efficiently search the entire space of state assignments.",
                    "sid": 79,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Illegal assignments, such as an I-PER without a preceding B-PER, cannot arise due to the restrictions of the transition matrix.",
                    "sid": 80,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The datasets for both languages contained extra information including chunk and part-of-speech information, as well as lemmas for the German data.",
                    "sid": 81,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While these are rich sources of data, and may help especially in the recognition phase, our aim was to investigate the feasibility of a purely orthographic approach, and as such no extra information was used.",
                    "sid": 82,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "results. ",
            "number": "5",
            "sents": [
                {
                    "text": "Table 2 shows how the system performs in terms of recognition.",
                    "sid": 83,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a large discrepancy between recognition performance for English and German.",
                    "sid": 84,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For German, it appears that there is insufficient morphological information in a word and its immediate context to reliably discriminate between NEs and common nouns.",
                    "sid": 85,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision is markedly higher than recall across all tests.",
                    "sid": 86,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most common error in English was the misclassification Table 3: Accuracy on seen and unseen tokens.",
                    "sid": 87,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4: Improvement in f-score through restoring case.",
                    "sid": 88,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "of a single-term entity as a nonentity, while multi-word entities were more successfully identified.",
                    "sid": 89,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 shows the overall performance difference between words present in the tagged training corpus and those that only occurred in the test set.",
                    "sid": 90,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For previously seen words, both recognition and classification perform well, aided by the variable depth of MD-tries.",
                    "sid": 91,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The progressive back-off model of tries is quite effective in classifying new tokens, achieving up to 85% accuracy in classification unseen entities.",
                    "sid": 92,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is interesting to note that, given a successful recognition phase, German NEs are more successfully classified than English NEs.",
                    "sid": 93,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The effects of heuristically restoring case information can be seen in Table 4.",
                    "sid": 94,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The contribution of recapitalisation is limited by the proportion of entities in caseless positions.",
                    "sid": 95,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both the word-based method and the trie-based method produced improvements.",
                    "sid": 96,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The higher accuracy of the trie-based approach gives better overall performance.",
                    "sid": 97,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The final results for each language and dataset are given in Table 5.",
                    "sid": 98,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both English datasets have the same performance profile: results for the PER and LOC categories were markedly better than the MISC and ORG categories.",
                    "sid": 99,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since seen and unseen performance remained quite stable, the lower results for the second test set can be explained by a higher percentage of previously unseen words.",
                    "sid": 100,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While MISC is traditionally the worst-performing category, the lowest results were for ORG.",
                    "sid": 101,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This pattern of performance was different to that for German, in which MISC was consistently identified less well than the other categories.",
                    "sid": 102,
                    "ssid": 20,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "6",
            "sents": [
                {
                    "text": "We have presented a very simple system that uses only internal and contextual character-level evidence.",
                    "sid": 103,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This highly language-independent model performs well on both seen and unseen tokens despite using only the su pervised training data.",
                    "sid": 104,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The incorporation of trie-based estimates into an HMM framework allows the optimal tag sequence to be found for each sentence.",
                    "sid": 105,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have also shown that case information can be restored with high accuracy using simple machine learning techniques, and that this restoration is beneficial to named entity recognition.",
                    "sid": 106,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We would expect most NER systems to benefit from this recapitalisation process, especially in fields without accurate case information, such as transcribed text or allcaps newswire.",
                    "sid": 107,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Trie-based classification yields probability estimates that are highly suitable for use as features in a further machine learning process.",
                    "sid": 108,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach has the advantage of being highly language-independent, and requiring fewer features than traditional orthographic feature representations.",
                    "sid": 109,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}