{
    "ID": "C08-1107",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Most work on unsupervised entailment rule acquisition focused on rules between templates with two variables, ignoring unary rules - entailment rules between templates with a single variable.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we investigate two approaches for unsupervised learning of such rules and compare the proposed methods with a binary rule learning method.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results show that the learned unary rule-sets outperform the binary rule-set.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, a novel directional similarity measure for learning entailment, termed Balanced-Inclusion, is the best performing measure.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "In many NLP applications, such as Question Answering (QA) and Information Extraction (IE), it is crucial to recognize whether a specific target meaning is inferred from a text.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, a QA system has to deduce that \u201cSCO sued IBM\u201d is inferred from \u201cSCO won a lawsuit against IBM\u201d to answer \u201cWhom did SCO sue?\u201d.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This type of reasoning has been identified as a core semantic inference paradigm by the generic Textual Entail- ment framework (Giampiccolo et al., 2007).",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An important type of knowledge needed for such inference is entailment rules.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An entailment rule specifies a directional inference relation between two templates, text patterns with variables, such as \u2018X win lawsuit against Y \u2192 X sue Y \u2019.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Applying this rule by matching \u2018X win lawsuit against Y \u2019 in the above text allows a QA system to Qc 2008.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Licensed under the Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported license (http://creativecommons.org/licenses/by-nc-sa/3.0/).",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some rights reserved.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "infer \u2018X sue Y \u2019 and identify \u201cIBM\u201d, Y \u2019s instantiation, as the answer for the above question.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Entail- ment rules capture linguistic and world-knowledge inferences and are used as an important building block within different applications, e.g.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Romano et al., 2006).",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason for the limited performance of generic semantic inference systems is the lack of broad-scale knowledge-bases of entailment rules (in analog to lexical resources such as WordNet).",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised learning of broad coverage rule-sets is an arduous task.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This sparked intensive research on unsupervised acquisition of entailment rules (and similarly paraphrases) e.g.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Lin and Pantel, 2001; Szpektor et al., 2004; Sekine, 2005).",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most unsupervised entailment rule acquisition methods learn binary rules, rules between templates with two variables, ignoring unary rules, rules between unary templates (templates with only one variable).",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, a predicate quite often appears in the text with just a single variable (e.g. intransitive verbs or passives), where infer ence requires unary rules, e.g. \u2018X take a nap \u2192 X sleep\u2019 (further motivations in Section 3.1).",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we focus on unsupervised learning of unary entailment rules.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two learning approaches are proposed.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our main approach, rules are learned by measuring how similar the variable instantiations of two templates in a corpus are.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition to adapting state-of-the-art similarity measures for unary rule learning, we propose a new measure, termed Balanced-Inclusion, which balances the notion of directionality in entailment with the common notion of symmetric semantic similarity.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a second approach, unary rules are derived from binary rules learned by state-of-the- art binary rule learning methods.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We tested the various unsupervised unary rule 849 Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 849\u2013856 Manchester, August 2008 learning methods, as well as a binary rule learning method, on a test set derived from a standard IE benchmark.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This provides the first comparison between the performance of unary and binary rule- sets.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several results rise from our evaluation: (a) while most work on unsupervised learning ignored unary rules, all tested unary methods outperformed the binary method; (b) it is better to learn unary rules directly than to derive them from a binary rule-base; (c) our proposed Balanced-Inclusion measure outperformed all other tested methods in terms of F1 measure.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Moreover, only Balanced- Inclusion improved F1 score over a baseline inference that does not use entailment rules at all .",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "background. ",
            "number": "2",
            "sents": [
                {
                    "text": "This section reviews relevant distributional similarity measures, both symmetric and directional, which were applied for either lexical similarity or unsupervised entailment rule learning.",
                    "sid": 31,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Distributional similarity measures follow the Distributional Hypothesis, which states that words that occur in the same contexts tend to have similar meanings (Harris, 1954).",
                    "sid": 32,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Various measures were proposed in the literature for assessing such similarity between two words, u and v. Given a word q, its set of features Fq and feature weights wq (f ) for f \u2208 Fq , a common symmetric similarity measure is Lin similarity (Lin, 1998a): Binary rule learning algorithms adopted such lexical similarity approaches for learning rules between templates, where the features of each template are its variable instantiations in a corpus, such as {X =\u2018SCO\u2019, Y =\u2018IBM\u2019} for the example in Section 1.",
                    "sid": 33,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some works focused on learning rules from comparable corpora, containing comparable documents such as different news articles from the same date on the same topic (Barzilay and Lee, 2003; Ibrahim et al., 2003).",
                    "sid": 34,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such corpora are highly informative for identifying variations of the same meaning, since, typically, when variable instantiations are shared across comparable documents the same predicates are described.",
                    "sid": 35,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it is hard to collect broad-scale comparable corpora, as the majority of texts are non-comparable.",
                    "sid": 36,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A complementary approach is learning from the abundant regular, non-comparable, corpora.",
                    "sid": 37,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Yet, in such corpora it is harder to recognize variations of the same predicate.",
                    "sid": 38,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The DIRT algorithm (Lin and Pantel, 2001) learns non directional binary rules for templates that are paths in a dependency parse-tree between two noun variables X and Y . The similarity between two templates t and tl is the geometric average: Linx(t, tl) \u00b7 Liny (t, tl) where Linx is the Lin similarity between X \u2019s in- stantiations of t and X \u2019s instantiations of tl in a corpus (equivalently for Liny ).",
                    "sid": 39,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some works Lin(u, v) = f \u2208Fu \u2229Fv [wu(f ) + wv (f )] take the combination of the two variable instantia f \u2208Fu wu(f ) + f \u2208Fv wv (f ) tions in each template occurrence as a single complex feature, e.g. {X -Y =\u2018SCOIBM\u2019}, and com where the weight of each feature is the pointwise mutual information (pmi) between the word and the feature: wq (f ) = log[ P r(f |q) ].",
                    "sid": 40,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Weeds and Weir (2003) proposed to measure the symmetric similarity between two words by averaging two directional (asymmetric) scores: the coverage of each word\u2019s features by the other.",
                    "sid": 41,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The coverage of u by v is measured by: pare between these complex features of t and tl (Ravichandran and Hovy, 2002; Szpektor et al., 2004; Sekine, 2005).",
                    "sid": 42,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Directional Measures Most rule learning methods apply a symmetric similarity measure between two templates, viewing them as paraphrasing each other.",
                    "sid": 43,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, entailment is in general a direc tional relation.",
                    "sid": 44,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, \u2018X acquire Y \u2192 X own Y \u2019 and \u2018countersuit against X \u2192 lawsuit C over(u, v) = f \u2208Fu \u2229Fv wu(f ) against X \u2019.",
                    "sid": 45,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "f \u2208Fu wu(f ) The average can be arithmetic or harmonic: W eedsA(u, v) = 1 [C over(u, v) + C over(v, u)] 2 \u00b7 C over(u, v) \u00b7 C over(v, u) (Weeds and Weir, 2003) propose a directional measure for learning hyponymy between twowords, \u2018l \u2192 r\u2019, by giving more weight to the cov erage of the features of l by r (with \u03b1 > 1 ): W eedsD(l, r) = \u03b1C over(l, r)+(1\u2212\u03b1)C over(r, l) W eedsH (u, v) = C over(u, v) + C over(v, u) When \u03b1=1, this measure degenerates into Weeds et al. also used pmi for feature weights.",
                    "sid": 46,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "C over(l, r), termed P recision(l, r).",
                    "sid": 47,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With P recision(l, r) we obtain a \u201csoft\u201d version of the inclusion hypothesis presented in (Geffet and Dagan, 2005), which expects l to entail r if the \u201cimportant\u201d features of l appear also in r. Similarly, the LEDIR algorithm (Bhagat et al., 2007) identifies the entailment direction between two binary templates, l and r, which participate in a relation learned by (the symmetric) DIRT, by measuring the proportion of instantiations of l that are covered by the instantiations of r. As far as we know, only (Shinyama et al., 2002) and (Pekar, 2006) learn rules between unary templates.",
                    "sid": 48,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, (Shinyama et al., 2002) relies on comparable corpora for identifying paraphrases and simply takes any two templates from comparable sentences that share a named entity instantiation to be paraphrases.",
                    "sid": 49,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such approach is not feasible for non-comparable corpora where statistical measurement is required.",
                    "sid": 50,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Pekar, 2006) learns rules only between templates related by local discourse (information from different documents is ignored).",
                    "sid": 51,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, their template structure is limited to only verbs and their direct syntactic arguments, which may yield incorrect rules, e.g. for light verbs (see Section 5.2).",
                    "sid": 52,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To overcome this limitation, we use a more expressive template structure.",
                    "sid": 53,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "learning unary entailment rules. ",
            "number": "3",
            "sents": [
                {
                    "text": "3.1 Motivations.",
                    "sid": 54,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most unsupervised rule learning algorithms focused on learning binary entailment rules.",
                    "sid": 55,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, using binary rules for inference is not enough.",
                    "sid": 56,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, a predicate that can have multiple arguments may still occur with only one of its arguments.",
                    "sid": 57,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in \u201cThe acquisition of TCA was successful\u201d, \u2018TCA\u2019 is the only argument of \u2018acquisition\u2019.",
                    "sid": 58,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, some predicate expressions are unary by nature.",
                    "sid": 59,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, modifiers, such as \u2018the elected X \u2019, or intransitive verbs.",
                    "sid": 60,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, it appears more tractable to learn all variations for each argument of a predicate separately than to learn them for combinations of argument pairs.",
                    "sid": 61,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For these reasons, it seems that unary rule learning should be addressed in addition to binary rule learning.",
                    "sid": 62,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are further motivated by the fact that some (mostly supervised) works in IE found learning unary templates useful for recognizing relevant named entities (Riloff, 1996; Sudo et al., 2003; Shinyama and Sekine, 2006), though they did not attempt to learn generic knowledge bases of entail ment rules.",
                    "sid": 63,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper investigates acquisition of unary entailment rules from regular non-comparable corpora.",
                    "sid": 64,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first describe the structure of unary templates and then explore two conceivable approaches for learning unary rules.",
                    "sid": 65,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first approach directly assesses the relation between two given templates based on the similarity of their in- stantiations in the corpus.",
                    "sid": 66,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second approach, which was also mentioned in (Iftene and BalahurDobrescu, 2007), derives unary rules from learned binary rules.",
                    "sid": 67,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Unary Template Structure.",
                    "sid": 68,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To learn unary rules we first need to define their structure.",
                    "sid": 69,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper we work at the syntactic representation level.",
                    "sid": 70,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Texts are represented by dependency parse trees (using the Minipar parser (Lin, 1998b)) and templates by parse sub-trees.",
                    "sid": 71,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a dependency parse tree, any sub-tree can be a candidate template, setting some of its nodes as variables (Sudo et al., 2003).",
                    "sid": 72,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the number of possible templates is exponential in the size of the sentence.",
                    "sid": 73,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the binary rule learning literature, the main solution for exhaustively learning all rules between any pair of templates in a given corpus is to restrict the structure of templates.",
                    "sid": 74,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Typically, a template is restricted to be a path in a parse tree between two variable nodes (Lin and Pantel, 2001; Ibrahim et al., 2003).",
                    "sid": 75,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following this approach, we chose the structure of unary templates to be paths as well, where one end of the path is the template\u2019s variable.",
                    "sid": 76,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, paths with one variable have more expressive power than paths between two variables, since the combination of two unary paths may generate a binary template that is not a path.",
                    "sid": 77,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the combination of \u2018X call indictable\u2019 and \u2018call Y indictable\u2019 is the template \u2018X call Y indictable\u2019, which is not a path between X and Y . For every noun node v in a parsed sentence, we generate templates with v as a variable as follows: 1.",
                    "sid": 78,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Traverse the path from v towards the root of.",
                    "sid": 79,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the parse tree.",
                    "sid": 80,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Whenever a candidate predicate is encountered (any noun, adjective or verb) the path from that node to v is taken as a template.",
                    "sid": 81,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We stop when the first verb or clause boundary (e.g. a relative clause) is encountered, which typically represent the syntactic boundary of a specific predicate.",
                    "sid": 82,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 83,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To enable templates with control verbs and.",
                    "sid": 84,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "light verbs, e.g. \u2018X help preventing\u2019, \u2018X make noise\u2019, whenever a verb is encountered we generate templates that are paths between v and the verb\u2019s modifiers, either objects, prepositional complements or infinite or gerund verb forms (paths ending at stop words, e.g. pronouns, are not generated).",
                    "sid": 85,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 86,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To capture noun modifiers that act as predi-.",
                    "sid": 87,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "cates, e.g. \u2018the losing X \u2019, we extract template paths between v and each of its modifiers, nouns or adjectives, that are derived from a verb.",
                    "sid": 88,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We use the Catvar database to identify verb derivations (Habash and Dorr, 2003).",
                    "sid": 89,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As an example for the procedure, the templates extracted from the sentence \u201cThe losing party played it safe\u201d with \u2018party\u2019 as the variable are: \u2018losing X \u2019, \u2018X play\u2019 and \u2018X play safe\u2019.",
                    "sid": 90,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Direct Learning of Unary Rules.",
                    "sid": 91,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We applied the lexical similarity measures presented in Section 2 for unary rule learning.",
                    "sid": 92,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each argument instantiation of template t in the corpus is taken as a feature f , and the pmi between t and f is used for the feature\u2019s weight.",
                    "sid": 93,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We first adapted DIRT for unary templates (unary-DIRT, applying Lin-similarity to the single feature vector), as well as its output filtering by LEDIR.",
                    "sid": 94,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The various Weeds measures were also applied1: symmetric arithmetic average, symmetric harmonic average, weighted arithmetic average and Precision.",
                    "sid": 95,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After initial analysis, we found that given a right hand side template r, symmetric measures such as Lin (in DIRT) generally tend to prefer (score higher) relations (l, r) in which l and r are related but do not necessarily participate in an entailment or equivalence relation, e.g. the wrong rule \u2018kill X \u2194 injure X \u2019.",
                    "sid": 96,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, directional measures such as Weeds Precision tend to prefer directional rules in which the entailing template is infrequent.",
                    "sid": 97,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If an infrequent template has common instantiations with another template, the coverage of its features is typically high, whether or not an entailment relation exists between the two templates.",
                    "sid": 98,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This behavior generates high-score incorrect rules.",
                    "sid": 99,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Based on this analysis, we propose a new measure that balances the two behaviors, termed Balanced-Inclusion (BInc).",
                    "sid": 100,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "BInc identifies entailing templates based on a directional measure but penalizes infrequent templates using a symmetric measure: BI nc(l, r) = Lin(l, r) \u00b7 P recision(l, r) 3.4 Deriving Unary Rules From Binary Rules.",
                    "sid": 101,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An alternative way to learn unary rules is to first learn binary entailment rules and then derive unary rules from them.",
                    "sid": 102,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We derive unary rules from a given binary rule-base in two steps.",
                    "sid": 103,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, for each binary rule, we generate all possible unary rules that are part of that rule (each unary template is extracted following the same procedure described in Section 3.2).",
                    "sid": 104,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, from \u2018X find solu tion to Y \u2192 X solve Y \u2019 we generate the unary rules \u2018X find \u2192 X solve\u2019, \u2018X find solution \u2192 Xsolve\u2019, \u2018solution to Y \u2192 solve Y \u2019 and \u2018find solu tion to Y \u2192 solve Y \u2019.",
                    "sid": 105,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The score of each generated rule is set to be the score of the original binary rule.",
                    "sid": 106,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The same unary rule can be derived from different binary rules.",
                    "sid": 107,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, \u2018hire Y \u2192 employ Y \u2019 is derived both from \u2018X hire Y \u2192 X employ Y \u2019 and \u2018hire Y for Z \u2192 employ Y for Z \u2019, having a different score from each original binary rule.",
                    "sid": 108,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second step of the algorithm aggregates the different scores yielded for each derived rule to produce the final rule score.",
                    "sid": 109,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Three aggregation functions were tested: sum (Derived-Sum), average (Derived-Avg) and maximum (Derived-Max).",
                    "sid": 110,
                    "ssid": 57,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experimental setup. ",
            "number": "4",
            "sents": [
                {
                    "text": "We want to evaluate learned unary and binary rule bases by their utility for NLP applications through assessing the validity of inferences that are performed in practice using the rule base.",
                    "sid": 111,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To perform such experiments, we need a test- set of seed templates, which correspond to a set of target predicates, and a corpus annotated with all argument mentions of each predicate.",
                    "sid": 112,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The evaluation assesses the correctness of all argument extractions, which are obtained by matching in the corpus either the seed templates or templates that entail them according to the rule-base (the latter corresponds to rule-application).",
                    "sid": 113,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following (Szpektor et al., 2008), we found the ACE 2005 event training set2 useful for this purpose.",
                    "sid": 114,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This standard IE dataset includes 33 types of event predicates such as Injure, Sue and Divorce.",
                    "sid": 115,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 We applied the best performing parameter values pre-.",
                    "sid": 116,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "sented in (Bhagat et al., 2007) and (Weeds and Weir, 2003).",
                    "sid": 117,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 http://projects.ldc.upenn.edu/ace/ All event mentions are annotated in the corpus, including the instantiated arguments of the predicate.",
                    "sid": 118,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ACE guidelines specify for each event its possible arguments, each associated with a semantic role.",
                    "sid": 119,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, some of the Injure event arguments are Agent, Victim and Time.",
                    "sid": 120,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To utilize the ACE dataset for evaluating entail- ment rule applications, we manually represented each ACE event predicate by unary seed templates.",
                    "sid": 121,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the seed templates for Injure are \u2018A injure\u2019, \u2018injure V \u2019 and \u2018injure in T \u2019.",
                    "sid": 122,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We mapped each event role annotation to the corresponding seed template variable, e.g. \u2018Agent\u2019 to A and \u2018Victim\u2019 to V in the above example.",
                    "sid": 123,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Templates are matched using a syntactic matcher that handles simple morpho-syntactic phenomena, as in (Szpektor and Dagan, 2007).",
                    "sid": 124,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A rule application is considered correct if the matched argument is annotated by the corresponding ACE role.",
                    "sid": 125,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For testing binary rule-bases, we automatically generated binary seed templates from any two unary seeds that share the same predicate.",
                    "sid": 126,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, for Injure the binary seeds \u2018A injure V \u2019, \u2018A injure in T \u2019 and \u2018injure V in T \u2019 were automatically generated from the above unary seeds.",
                    "sid": 127,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We performed two adaptations to the ACE dataset to fit it better to our evaluation needs.",
                    "sid": 128,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, our evaluation aims at assessing the correctness of inferring a specific target semantic meaning, which is denoted by a specific predicate, using rules.",
                    "sid": 129,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, four events that correspond ambiguously to multiple distinct predicates were ignored.",
                    "sid": 130,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the Transfer-Money event refers to both donating and lending money, and thus annotations of this event cannot be mapped to a specific seed template.",
                    "sid": 131,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also omitted 3 events with less than 10 mentions, and were left with 26 events (6380 argument mentions).",
                    "sid": 132,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Additionally, we regard all entailing mentions under the textual entailment definition as correct.",
                    "sid": 133,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, event mentions are annotated as correct in ACE only if they explicitly describe the target event.",
                    "sid": 134,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, a Divorce mention does entail a preceding marriage event but it does not explicitly describe it, and thus it is not annotated as a Marry event.",
                    "sid": 135,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To better utilize the ACE dataset, we considered for a target event the annotations of other events that entail it as being correct as well.",
                    "sid": 136,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We note that each argument was considered sep person, but did not consider the place and time of the divorce act to be those of the marriage .",
                    "sid": 137,
                    "ssid": 27,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "results and analysis. ",
            "number": "5",
            "sents": [
                {
                    "text": "We implemented the unary rule learning algorithms described in Section 3 and the binary DIRT algorithm (Lin and Pantel, 2001).",
                    "sid": 138,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We executed each method over the Reuters RCV1 corpus3, learning for each template r in the corpus the top 100 rules in which r is entailed by another template l, \u2018l \u2192 r\u2019.",
                    "sid": 139,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All rules were learned in canonical form (Szpektor and Dagan, 2007).",
                    "sid": 140,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rule-base learned by binary DIRT was taken as the input for deriving unary rules from binary rules.",
                    "sid": 141,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The performance of each acquired rule-base was measured for each ACE event.",
                    "sid": 142,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We measured the percentage of correct argument mentions extracted out of all correct argument mentions annotated for the event (recall) and out of all argument mentions extracted for the event (precision).",
                    "sid": 143,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also measured F1, their harmonic average, and report macro average Recall, Precision and F1 over the 26 event types.",
                    "sid": 144,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No threshold setting mechanism is suggested in the literature for the scores of the different algorithms, especially since rules for different right hand side templates have different score ranges.",
                    "sid": 145,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, we follow common evaluation practice (Lin and Pantel, 2001; Geffet and Dagan, 2005) and test each learned rule-set by taking the top K rules for each seed template, where K ranges from 0 to 100.",
                    "sid": 146,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When K =0, no rules are used and mentions are extracted only by direct matching of seed templates.",
                    "sid": 147,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our rule application setting provides a rather simplistic IE system (for example, no named entity recognition or approximate template matching).",
                    "sid": 148,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is thus useful for comparing different rule-bases, though the absolute extraction figures do not reflect the full potential of the rules.",
                    "sid": 149,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Secion 5.2 we analyze the full-system\u2019s errors to isolate the rules\u2019 contribution to overall system performance.",
                    "sid": 150,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.1 Results.",
                    "sid": 151,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this section we focus on the best performing variations of each algorithm type: binary DIRT, unary DIRT, unary Weeds Harmonic, BInc and Derived-Avg.",
                    "sid": 152,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We omitted the results of methods that were clearly inferior to others: (a) W eedsA, W eedsD and W eeds-P recision did not increase arately.",
                    "sid": 153,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, we marked a mention of a divorced person as entailing the marriage of that 3 http://about.reuters.com/researchandstandards/corpus/ Recall over not using rules because rules with infrequent templates scored highest and arithmetic averaging could not balance well these high scores; (b) out of the methods for deriving unary rules from binary rule-bases, Derived-Avg performed best; (c) filtering with (the directional) LEDIR did not improve the performance of unary DIRT.",
                    "sid": 154,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 presents Recall, Precision and F1 of the methods for different cutoff points.",
                    "sid": 155,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we observe that even when matching only the seed templates (K =0), unary seeds outperform the binary seeds in terms of both Precision and Recall.",
                    "sid": 156,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This surprising behavior is consistent through all rule cutoff points: all unary learning algorithms perform better than binary DIRT in all parameters.",
                    "sid": 157,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The inferior behavior of binary DIRT is analyzed in Section 5.2.",
                    "sid": 158,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The graphs show that symmetric unary approaches substantially increase recall, but dramatically decrease precision already at the top 10 rules.",
                    "sid": 159,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a result, F1 only decreases for these methods.",
                    "sid": 160,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lin similarity (DIRT) and Weeds-Harmonic show similar behaviors.",
                    "sid": 161,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They consistently outperform Derived-Avg.",
                    "sid": 162,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One reason for this is that incorrect unary rules may be derived even from correct binary rules.",
                    "sid": 163,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, from \u2018X gain seat on Y \u2192 elect X to Y \u2019 the incorrect unary rule \u2018X gain \u2192 elect X \u2019 is also generated.",
                    "sid": 164,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This problem is less frequent when unary rules are directly scored based on their corpus statistics.",
                    "sid": 165,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The directional measure of BInc yields a more accurate rule-base, as can be seen by the much slower precision reduction rate compared to the other algorithms.",
                    "sid": 166,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a result, it is the only algorithm that improves over the F1 baseline of K =0, with the best cutoff point at K =20.",
                    "sid": 167,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "BInc\u2019s recall increases moderately compared to other unary learning approaches, but it is still substantially better than not using rules (a relative recall increase of 50% already at K =10).",
                    "sid": 168,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We found that many of the correct mentions missed by BInc but identified by other methods are due to occasional extractions of incorrect frequent rules, such as partial templates (see Section 5.2).",
                    "sid": 169,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is reflected in the very low precision of the other methods.",
                    "sid": 170,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, some correct rules were only learned by BInc, e.g. \u2018countersuit against X \u2192 X sue\u2019 and \u2018X take wife \u2192 X marry\u2019.",
                    "sid": 171,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When only one argument is annotated for a specific event mention (28% of ACE predicate mentions, which account for 15% of all annotated ar Figure 1: Average Precision, Recall and F1 at different top K rule cutoff points.",
                    "sid": 172,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "guments), binary rules either miss that mention, or extract both the correct argument and another incorrect one.",
                    "sid": 173,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To neutralize this bias, we also tested the various methods only on event mentions annotated with two or more arguments and obtained similar results to those presented for all mentions.",
                    "sid": 174,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This further emphasizes the general advantage of using unary rules over binary rules.",
                    "sid": 175,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.2 Analysis.",
                    "sid": 176,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Binary-DIRT We analyzed incorrect rules both for binary-DIRT and BInc by randomly sampling, for each algorithm, 200 rules that extracted incorrect mentions.",
                    "sid": 177,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We manually classified each rule \u2018l \u2192 r\u2019 as either: (a) Correct - the rule is valid insome contexts of the event but extracted some in correct mentions; (b) Partial Template - l is only a part of a correct template that entails r. For exam ple, learning \u2018X decide \u2192 X meet\u2019 instead of \u2018X decide to meet \u2192 X meet\u2019; (e) Incorrect - other incorrect rules, e.g. \u2018charge X \u2192 convict X \u2019.Table 1 summarizes the analysis and demon strates two problems of binary-DIRT.",
                    "sid": 178,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, relative to BInc, it tends to learn incorrect rules for high frequency templates, and therefore extracted many more incorrect mentions for the same number of incorrect rules.",
                    "sid": 179,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Second, a large percentage of incorrect mentions extracted are due to partial templates at the rule left-hand-side.",
                    "sid": 180,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Such rules are leaned because many binary templates have a more complex structure than paths between arguments.",
                    "sid": 181,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As explained in Section 3.2 the unary template structure we use is more expressive, enabling to learn the correct rules.",
                    "sid": 182,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, BInc learned\u2018take Y into custody \u2192 arrest Y \u2019 while binary DIRT learned \u2018X take Y \u2192 X arrest Y \u2019.",
                    "sid": 183,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "System Level Analysis We manually analyzed the reasons for false positives (incorrect extractions) and false negatives (missed extractions) of BInc, at its best performing cutoff point (K =20), by sampling 200 extractions of each type.",
                    "sid": 184,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the false positives analysis (Table 2) we see that 39% of the errors are due to incorrect rules.",
                    "sid": 185,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The main reasons for learning such rules are those discussed in Section 3.3: (a) related templates that are not entailing; (b) infrequent templates.",
                    "sid": 186,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All learning methods suffer from these issues.",
                    "sid": 187,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As was shown by our results, BInc provides a first step towards reducing these problems.",
                    "sid": 188,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Yet, these issues require further research.",
                    "sid": 189,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Apart from incorrectly learned rules, incorrect template matching (e.g. due to parse errors) and context mismatch contribute together 46% of the errors.",
                    "sid": 190,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Context mismatches occur when the entailing template is matched in inappropriate contexts.",
                    "sid": 191,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, \u2018slam X \u2192 attack X \u2019 should not be applied when X is a ball, only when it is a person.",
                    "sid": 192,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rule-set net effect on system precision is better estimated by removing these errors and fixing the annotation errors, which yields 72% precision.",
                    "sid": 193,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bi na ry DI RT Bal anc ed Inc lus ion Co rre ct 1 6 (70) 3 8 (91) Par tial Te mp lat e 2 7 (2665) 6 (81) Inc orr ect 15 7 (2584) 15 6 (787) Tot al 20 0 (5319) 20 0 (959) Table 1: Rule type distribution of a sample of 200 rules that extracted incorrect mentions.",
                    "sid": 194,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corresponding numbers of incorrect mentions extracted by the sampled rules is shown in parentheses.",
                    "sid": 195,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "R e a s o n % me nti on s In co rr ec t R ul e le ar n e d C o nt ex t m is m at c h M at c h er ro r A n n ot at io n pr o bl e m 3 9 . 0 2 7 . 0 1 9 . 0 1 5 . 0 Table 2: Distribution of reasons for false positives (incorrect argument extractions) by BInc at K =20.",
                    "sid": 196,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "R e a s o n % me nti on s Rul e not lea rn ed Ma tch err or Dis cou rse an aly sis ne ed ed Arg um ent is pre dic ativ e 6 1 . 5 2 5 . 0 1 2 . 0 1.5 Table 3: Distribution of reasons for false negatives (missed argument mentions) by BInc at K =20.",
                    "sid": 197,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 presents the analysis of false negatives.",
                    "sid": 198,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, we note that 12% of the arguments cannot be extracted by rules alone, due to necessary discourse analysis.",
                    "sid": 199,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, a recall upper bound for entailment rules is 88%.",
                    "sid": 200,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many missed extractions are due to rules that were not learned (61.5%).",
                    "sid": 201,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, 25% of the mentions were missed because of incorrect syntactic matching of correctly learned rules.",
                    "sid": 202,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By assuming correct matches in these cases we isolate the recall of the rule-set (along with the seeds), which yields 39% recall.",
                    "sid": 203,
                    "ssid": 66,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusions. ",
            "number": "6",
            "sents": [
                {
                    "text": "We presented two approaches for unsupervised acquisition of unary entailment rules from regular (non-comparable) corpora.",
                    "sid": 204,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first approach, rules are directly learned based on distributional similarity measures.",
                    "sid": 205,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second approach derives unary rules from a given rule-base of binary rules.",
                    "sid": 206,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Under the first approach we proposed a novel directional measure for scoring entailment rules, termed Balanced-Inclusion.",
                    "sid": 207,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We tested the different approaches utilizing a standard IE test-set and compared them to binary rule learning.",
                    "sid": 208,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our results suggest the advantage of learning unary rules: (a) unary rule-bases perform better than binary rules; (b) it is better to directly learn unary rules than to derive them from binary rule-bases.",
                    "sid": 209,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In addition, the Balanced-Inclusion measure outperformed all other tested methods.",
                    "sid": 210,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In future work, we plan to explore additional unary template structures and similarity scores, and to improve rule application utilizing context matching methods such as (Szpektor et al., 2008).",
                    "sid": 211,
                    "ssid": 8,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgements",
            "number": "",
            "sents": [
                {
                    "text": "This work was partially supported by ISF grant 1095/05, the IST Programme of the European Community under the PASCAL Network of Excellence IST2002-506778 and the NEGEV project (www.negev-initiative.org).",
                    "sid": 212,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}