{
    "ID": "Pfram_w06",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "The vast majority of text freely available on the Internet is not available in a form that computers can understand.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There have been numerous approaches to automatically extract information from human- readable sources.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most successful attempts rely on vast training sets of data.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Others have succeeded in extracting restricted subsets of the available information.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These approaches have limited use and require domain knowledge to be coded into the application.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current thesis proposes a novel framework for Information Extraction.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From large sets of documents, the system develops statistical models of the data the user wishes to query which generally avoid the limitations and complexity of most Information Extractions systems.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framework uses a semi-supervised approach to minimize human input.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also eliminates the need for external Named Entity Recognition systems by relying on freely available databases.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The final result is a query-answering system which extracts information from large corpora with a high degree of accuracy.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Keywords : Information Extraction, Natural Language Processing, Support Vector Machine, Machine Learning, Information Retrieval, unstructured text Chapter 1",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "The amount of information available on the World Wide Web was estimated in 2003 at 167 terabytes [27].",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This number is triple what was available in 2000, when a previous study was performed.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The annual amount of email generated in 2003 worldwide was 667,585 terabytes.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is obviously a vast amount of text information available in digital form.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are many documents that are about the same topic on the Internet, and therefore contain very similar information using different wordings.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their information can be compared to verify the correctness of the source.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The redundancy is an asset that can be exploited.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the amount of text being produced is continually increasing, so is the amount of computing power available to process it.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The large majority of these computers are dedicated to indexing for a human to search through.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Further, there is a growing awareness of the richness of the text information available.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thousands of people contribute to Wikipedia, a free encyclopedia, creating millions of entries.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a strong desire to make this information available not only to the 1.4 billion Internet users [12], but to make it available for entry into databases, question-answering systems, and Artificial Intelligence efforts.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The efforts to make the large amount of textual information available in a structured, machine-usable form have been largely successful.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, these efforts, in general, have focused on domain-dependant approaches which do not transfer well to the problem in the large.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Presented here is a framework on which a semi-supervised Information Extraction system can be built.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framework itself is relatively dynamic and flexible.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It can be easily adapted by the end user to a wide variety of domains with minimal effort.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A system built on this framework will extract highly structured data from large, unstructured text sources as typically found on the World Wide Web.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current research borrows from work in the literature in a number of ways.",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, the current work relies on and takes advantage of the redundancy of the information contained in large text databases.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Textual sources can be aggregated into large databases.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The accuracy of the algorithm increases with the size of the database.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This idea is used in Etzioni et al. [15, 16] and Agichtein and Gravano [1].",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, the current work approaches the problem from a typical point of view.",
                    "sid": 35,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of modeling the task as a textual understanding problem, the system models the problem as one of statistical correlation.",
                    "sid": 36,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In essence, the system attempts to correlate syntactical and lexical features with semantic meaning.",
                    "sid": 37,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The semantic meaning is inputed by the user in the form of a query.",
                    "sid": 38,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore a query-answering system as opposed to a free-form extraction engine.",
                    "sid": 39,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, a semi-supervised algorithm is used to reduce human input.",
                    "sid": 40,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several papers [1, 3, 14, 33] use a bootstrapping algorithm which trains a system with a minimal set of seed values instead of the vast number of training examples needed in a supervised learning method.",
                    "sid": 41,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although the current research owes a great debt to prior work, the system presented here diverges in three important ways.",
                    "sid": 42,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, the current work does not depend on any one domain (as do the majority of previous research; see Etzioni et al. [15] and Brin [3] for exceptions).",
                    "sid": 43,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Extending the system to work in new contexts is trivially simple and requires minimal domain expertise.",
                    "sid": 44,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system is also not dependant on a particular representation of the sentence nor on the choice of classifier.",
                    "sid": 45,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most prior work relies heavily on these two choices.",
                    "sid": 46,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, most systems that generate statistical models throw out features that correlate with undesirable information [1, 6, 23, 33, 36, 37].",
                    "sid": 47,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, those features can help filter out information.",
                    "sid": 48,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current system uses patterns that correlate well with desirable data and patterns that correlate with undesirable data to classify unknown values into the appropriate category.",
                    "sid": 49,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lastly, the system does not depend on sophisticated, statistical Named Entity Recognition systems (see Section 1.4).",
                    "sid": 50,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current Named Entity Recognition systems have limited domains or require large, tagged training sets to extend their domain.",
                    "sid": 51,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current system uses a simplified, lexical Named Entity Extraction step that is simple to extend or modify.",
                    "sid": 52,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a growing need to give programmatic access to the vast amount of information provided in unstructured text on the Internet.",
                    "sid": 53,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current work grows out of lessons learned from prior research, while pursuing a novel approach to the task.",
                    "sid": 54,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system described in this paper is a practical query- answering system that can extract information from large document sets in a domain-independent way.",
                    "sid": 55,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A demonstration system is developed that can accurately extract a variety of different kinds of information from Wikipedia.",
                    "sid": 56,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.1 Information Extraction.",
                    "sid": 57,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section will review the field of Information Extraction, its goals, and its relationship to other fields.",
                    "sid": 58,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By the end of this chapter, the reader should have a feeling for the problems Information Extraction attempts to solve and the potential issues that arise.",
                    "sid": 59,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is helpful to rely on a metaphor to explain the concept of Information Extraction.",
                    "sid": 60,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In describing the problem and challenge of Information Extraction, this text will rely on the metaphor of reading and understanding a completely foreign language.",
                    "sid": 61,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reader might imagine text in a language as alien to him or her as possible, such as Icelandic or Mandarin.",
                    "sid": 62,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When given a sentence in Icelandic, a person unfamiliar with the language would have a difficult time trying to understand it.",
                    "sid": 63,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The text is written in an unfamiliar script, with words and grammar that are incomprehensible.",
                    "sid": 64,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One could imagine the difficulty the person would have to identify all of the place names in the sentence.",
                    "sid": 65,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is a typical task asked of Information Extraction systems.",
                    "sid": 66,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The challenge of Information Extraction is to create an automated system that can identify specific information that is contained in that sentence or texts like it.",
                    "sid": 67,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The definition found in Moens [30] describes the field more precisely.",
                    "sid": 68,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Information extraction is the identification, and consequent or concurrent classification and structuring into semantic classes, of specific information found in unstructured data sources, such as natural language text, making the information more suitable for information processing tasks.",
                    "sid": 69,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Information Extraction seeks to use computers to automatically apply structure to unstructured information.",
                    "sid": 70,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the case of the current research, the unstructured information used is textual.",
                    "sid": 71,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other possible sources are audio, image, and video files [30].",
                    "sid": 72,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The definition of the goal is left purposefully general.",
                    "sid": 73,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any kind of structural information can be applied to the unstructured source.",
                    "sid": 74,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not only is Information Extraction applied to extract content from text, it is also applied to extract meta-data such as authoring information (who wrote it, etc).",
                    "sid": 75,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some typical examples of the kinds of structure applied to text are: \u2022 Names of people, places, and organizations \u2022 Relationship between two people \u2022 Geographic relationships (X is near Y) \u2022 Dates of an event The distinguishing characteristic between structured and unstructured data is that unstructured text is computationally opaque [30].",
                    "sid": 76,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, a computer cannot immediately interpret and make use of the data, as one could with a database or XML file.",
                    "sid": 77,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Information Extraction creates structured information which can be added to a database or queried in a structured way.",
                    "sid": 78,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.2 Data Mining.",
                    "sid": 79,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Data mining is often used in Information Extraction tasks.",
                    "sid": 80,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Data mining seeks to find patterns and relationships in data [38].",
                    "sid": 81,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The methods developed in data mining include classifiers and statistical modeling techniques.",
                    "sid": 82,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Information Extraction tasks often (but not always) include a data mining step.",
                    "sid": 83,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unstructured information textual information is converted to some structured, numerical form.",
                    "sid": 84,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That structured data is then processed using standard data mining techniques, such as clustering, probabilistic networks, and statistical classifiers.",
                    "sid": 85,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The data mining methods used to train statistical models include supervised, unsupervised, and semi- supervised.",
                    "sid": 86,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised training requires a training set that is completely labeled\u2014that is, given a set of data points, each data point in the set is correctly classified into the appropriate class.",
                    "sid": 87,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The computer then learns to classify other points in the same way.",
                    "sid": 88,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unsupervised training uses properties of the data alone to find patterns.",
                    "sid": 89,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No other information is given to the system.",
                    "sid": 90,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system often finds new, unexpected patterns (like dividing the set into more classes than a human would).",
                    "sid": 91,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The typical data mining technique in this category is clustering, where data points are grouped based solely on similarity.",
                    "sid": 92,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semi-supervised learning is where only a (usually small) portion of the training data points are classified into their categories.",
                    "sid": 93,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One could choose to ignore all of the unclassified data\u2014leaving only a small number of classified points.",
                    "sid": 94,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, one is often able to improve the performance of the classification technique by incorporating the unclassified data into the training phase.",
                    "sid": 95,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.3 Natural Language Processing.",
                    "sid": 96,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As will become clear in section 2, many approaches (including the current work) use Natural Language Processing techniques.",
                    "sid": 97,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Natural Language Processing studies the understanding and generation of human languages.",
                    "sid": 98,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The language understanding portion is what is mainly used in Information Extraction.",
                    "sid": 99,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Three general subtasks of Natural Language Processing are often used in Information Extraction [18].",
                    "sid": 100,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are used because the information they generate can be useful to the pattern matchers and classifiers used in Information Extraction.",
                    "sid": 101,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When one is presented with a sentence in Icelandic, one might like to know which words were nouns, which were verbs, and which were prepositions.",
                    "sid": 102,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That information could help one decipher the sentence.",
                    "sid": 103,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task of identifying the part of speech of words in a sentence is called Part of speech tagging.",
                    "sid": 104,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information can be useful for subsequent tasks because it provides more information than the sequence of characters that make up the words.",
                    "sid": 105,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Figure 1.1 for an example.",
                    "sid": 106,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In English, some things are described with multiple words.",
                    "sid": 107,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One common examples is the \u201cWorld Health Organization\u201d.",
                    "sid": 108,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of interpreting those words separately, it could be helpful to group them together for the purposes of interpretation.",
                    "sid": 109,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Noun phrase identification is another Natural Language Processing method which serves to group nouns into noun phrases.",
                    "sid": 110,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some Information Extraction methods treat noun phrase groups in the same way they treat nouns.",
                    "sid": 111,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a sentence in a foreign language, it could be useful to know which words were the subjects of which verbs, what words are modified by adjectives, and so on.",
                    "sid": 112,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information is gleaned from the text through the action called deep parsing.",
                    "sid": 113,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing is the task of grammatically deconstructing a sentence to understand its syntactic structure.",
                    "sid": 114,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing generates a tree or a graph from a sentence.",
                    "sid": 115,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is thought by some that a parse tree reveals more useful information than representing it as a series of words.",
                    "sid": 116,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, parsing at a Figure 1.1: The result of Part of Speech tagging on a sample sentence.",
                    "sid": 117,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.2: An example Noun Phrase Grouping.",
                    "sid": 118,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Highlighting represent noun phrases.",
                    "sid": 119,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "high accuracy can be computationally expensive.",
                    "sid": 120,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.3 shows a syntax tree of a sentence.",
                    "sid": 121,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.4 shows a dependency parse, which shows dependency relationships between words and phrases.",
                    "sid": 122,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These three methods are all considered to be forms of parsing (with varying computational costs).",
                    "sid": 123,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.4 Common Information Extraction Tasks.",
                    "sid": 124,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Message Understanding Conference (MUC) has essentially defined the tasks that Information Extraction attempts to perform [19].",
                    "sid": 125,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Named Entity Recognition is the task of identifying and classifying the words associated with \u201centities\u201d.",
                    "sid": 126,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the MUC sponsored tasks, the entities were classified as one of Person, Location, and Organization.",
                    "sid": 127,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task occasionally included Time/Date and Money.",
                    "sid": 128,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Named Entity Recognition is often performed as a preprocessing step of other Information Extraction tasks.",
                    "sid": 129,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also sometimes used instead of a parsing step.",
                    "sid": 130,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.5 gives an example of the result of Named Entity Recognition.",
                    "sid": 131,
                    "ssid": 131,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relation Extraction is the identification and classification of the relation between two entities in a text.",
                    "sid": 132,
                    "ssid": 132,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current work addresses this task.",
                    "sid": 133,
                    "ssid": 133,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fundamental concept of this task is that much information that is pertinent to the structure of a database deals with how the entities interact and relate.",
                    "sid": 134,
                    "ssid": 134,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore fruitful to extract information pertaining to the relations between entities.",
                    "sid": 135,
                    "ssid": 135,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relations can include anything from familial relations to geographic relations (\u201cParis is the capital of France\u201d relates Paris to France; \u201cRussia is near China\u201d relates those two countries).",
                    "sid": 136,
                    "ssid": 136,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relation Extraction attempts to determine what the nature of the relation is from textual evidence.",
                    "sid": 137,
                    "ssid": 137,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Coreference resolution seeks to identify cases where different words refer to the same entity or concept.",
                    "sid": 138,
                    "ssid": 138,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This occurs in several cases: when the same name is used in two different places to refer to the same entity; when two different names refer to the same entity; when pronouns are used; when anaphoric phrases are used (such as in the two sentences \u201cI took a trip to Paris.",
                    "sid": 139,
                    "ssid": 139,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When I arrived in the city, I found a hotel\u201d; \u201cthe city\u201d refers to the same thing as \u201cParis\u201d).",
                    "sid": 140,
                    "ssid": 140,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This task can also inform later extraction tasks.",
                    "sid": 141,
                    "ssid": 141,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.3: A syntax tree.",
                    "sid": 142,
                    "ssid": 142,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.4: An example dependency parse.",
                    "sid": 143,
                    "ssid": 143,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note the labeled edges.",
                    "sid": 144,
                    "ssid": 144,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.5 Evaluation Metrics.",
                    "sid": 145,
                    "ssid": 145,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are three standard metrics for evaluating an Information Extraction task.",
                    "sid": 146,
                    "ssid": 146,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are borrowed from Information Retrieval [40].",
                    "sid": 147,
                    "ssid": 147,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall measures the proportion of target facts in a text that are correctly extracted.",
                    "sid": 148,
                    "ssid": 148,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall is a measure of completeness without attention to the incorrectly extracted facts.",
                    "sid": 149,
                    "ssid": 149,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1.5: An example result Named Entity Recognition task.",
                    "sid": 150,
                    "ssid": 150,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recall = |{extracted facts} \u2229 {true facts}| |{true facts}| (1.1) where the truth value of the fact is domain dependent.",
                    "sid": 151,
                    "ssid": 151,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The fact can be compared to a database of known facts or can be hand-tagged in the document.",
                    "sid": 152,
                    "ssid": 152,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision measures the proportion of extracted facts that are correct.",
                    "sid": 153,
                    "ssid": 153,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision is a measure of correctness.",
                    "sid": 154,
                    "ssid": 154,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision = |{extracted facts} \u2229 {true facts}| |{extracted facts}| (1.2) F-measure combines Recall and Precision into a single metric.",
                    "sid": 155,
                    "ssid": 155,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The F-measure is a weighted harmonic mean of Recall and Precision.",
                    "sid": 156,
                    "ssid": 156,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It allows for a single metric that weights Recall and Precision by their relative importance to the task at hand.",
                    "sid": 157,
                    "ssid": 157,
                    "kind_of_tag": "s"
                },
                {
                    "text": "F\u03b2 = (1 + \u03b22 ) \u00d7 Precision \u00d7 Recall \u03b22 \u00d7 Precision + Recall (1.3) where \u03b2 is the relative importance of Recall over Precision.",
                    "sid": 158,
                    "ssid": 158,
                    "kind_of_tag": "s"
                },
                {
                    "text": "F1 weights Recall equally to Precision.",
                    "sid": 159,
                    "ssid": 159,
                    "kind_of_tag": "s"
                },
                {
                    "text": "F2 weights Recall twice as important as Precision.",
                    "sid": 160,
                    "ssid": 160,
                    "kind_of_tag": "s"
                },
                {
                    "text": "F0.5 weights Precision twice as important as Recall.",
                    "sid": 161,
                    "ssid": 161,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These metrics all fall in the range [0, 1].",
                    "sid": 162,
                    "ssid": 162,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This makes them useful to compare evaluations across algorithms and implementations.",
                    "sid": 163,
                    "ssid": 163,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is, however, discrepancies in how the notion of truth is calculated.",
                    "sid": 164,
                    "ssid": 164,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, supervised training methods consider the annotations in the training and testing documents as truth.",
                    "sid": 165,
                    "ssid": 165,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is therefore an explicitly defined set of true facts\u2014those that occur in the annotations.",
                    "sid": 166,
                    "ssid": 166,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In semi-supervised methods, where no (or very few) annotations are available, other methods of determining truth are required [1].",
                    "sid": 167,
                    "ssid": 167,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When no annotations exist, it is possible to evaluate one\u2019s methods over a domain with known truth values.",
                    "sid": 168,
                    "ssid": 168,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The truth value of a fact can then be checked using that knowledge.",
                    "sid": 169,
                    "ssid": 169,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The question then becomes whether it is reasonable to expect the system to extract facts that are not available in the text.",
                    "sid": 170,
                    "ssid": 170,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A measure of what is extractable is then required.",
                    "sid": 171,
                    "ssid": 171,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The common method for evaluating a domain where no complete model of truth can be used is simply to count the number of returned facts.",
                    "sid": 172,
                    "ssid": 172,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two algorithms can then compare the size of the dataset returned.",
                    "sid": 173,
                    "ssid": 173,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chapter 2 Prior Works This chapter organizes the related work in the field along three axes.",
                    "sid": 174,
                    "ssid": 174,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each axis forms a continuum along which the techniques fall.",
                    "sid": 175,
                    "ssid": 175,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The majority of research involved in evaluating different classifiers and their parameters applied as different feature sets.",
                    "sid": 176,
                    "ssid": 176,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The triadic taxonomy done here will encompass the majority of prior research.",
                    "sid": 177,
                    "ssid": 177,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The primary axis determines the type of training the system uses.",
                    "sid": 178,
                    "ssid": 178,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The type of training that a research approach uses is one of the ways the techniques differ from each other.",
                    "sid": 179,
                    "ssid": 179,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The type training also determines to a large extent how much human work is required to train the system.",
                    "sid": 180,
                    "ssid": 180,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Training techniques can range from fully handwritten to totally unsupervised methods.",
                    "sid": 181,
                    "ssid": 181,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2.1 shows an illustration of the tradeoffs made when choosing a training method.",
                    "sid": 182,
                    "ssid": 182,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Handwritten techniques are the most time consuming.",
                    "sid": 183,
                    "ssid": 183,
                    "kind_of_tag": "s"
                },
                {
                    "text": "People must analyze hundreds of documents looking for patterns that will be useful for extracting the information.",
                    "sid": 184,
                    "ssid": 184,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not only is it expensive\u2014it is also error-prone, inaccurate, and tends to miss a large portion of patterns.",
                    "sid": 185,
                    "ssid": 185,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some approaches to handwritten techniques do show promise, such as Fundel et al. [17] and Daraselia et al. [11], but they are still the most time-consuming and inflexible.",
                    "sid": 186,
                    "ssid": 186,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unsupervised methods require no human input to train the system.",
                    "sid": 187,
                    "ssid": 187,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This can take the form of automatically determining different groupings of data.",
                    "sid": 188,
                    "ssid": 188,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since no human input is required, the system can be applied to many different domains without the expense of developing a new training corpus for each one.",
                    "sid": 189,
                    "ssid": 189,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, these systems must deal with a grave difficulty: the data they get do not necessarily correspond to the user\u2019s idea of relevance.",
                    "sid": 190,
                    "ssid": 190,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The systems have no human guide to learn from [38].",
                    "sid": 191,
                    "ssid": 191,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Between the two extremes are supervised and semi-supervised methods (sometimes called weakly supervised methods).",
                    "sid": 192,
                    "ssid": 192,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised methods generally require a large training corpus that is completely annotated by hand by a domain expert.",
                    "sid": 193,
                    "ssid": 193,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system uses machine learning techniques to mimic the annotation choices made by humans.",
                    "sid": 194,
                    "ssid": 194,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It can be rather costly, but usually gives very accurate results.",
                    "sid": 195,
                    "ssid": 195,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Often the results can take into account the subtleties of human discernment.",
                    "sid": 196,
                    "ssid": 196,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semi-supervised methods try to gain the advantages of human knowledge without the intensive labor of a completely annotated corpus.",
                    "sid": 197,
                    "ssid": 197,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These methods typically require only a fraction of the annotated data given to supervised methods.",
                    "sid": 198,
                    "ssid": 198,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Others provide a handful of examples of the kind of data one wishes to extract.",
                    "sid": 199,
                    "ssid": 199,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The disadvantage is that they are less accurate than supervised methods.",
                    "sid": 200,
                    "ssid": 200,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second axis is the depth of parsing performed on the sentences (see Section 1.3).",
                    "sid": 201,
                    "ssid": 201,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A deeper parse is computationally more expensive.",
                    "sid": 202,
                    "ssid": 202,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many algorithms have been derived using only part of speech tagging or Figure 2.1: In general, training methods that result in higher accuracy require more human effort to port to a new domain.",
                    "sid": 203,
                    "ssid": 203,
                    "kind_of_tag": "s"
                },
                {
                    "text": "noun phrase clustering.",
                    "sid": 204,
                    "ssid": 204,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some systems use a Named Entity Recognizer as the only parse.",
                    "sid": 205,
                    "ssid": 205,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Named Entity Recognition can also be performed in addition to another form of parsing.",
                    "sid": 206,
                    "ssid": 206,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Still others perform no parsing at all and rely only on textual matching (such as Grishman [18]).",
                    "sid": 207,
                    "ssid": 207,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, the more computationally expensive an operation, the more information can be gleaned from the sentence.",
                    "sid": 208,
                    "ssid": 208,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2.2 visualizes this point.",
                    "sid": 209,
                    "ssid": 209,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The third axis is how the system learns to generalize from a training set.",
                    "sid": 210,
                    "ssid": 210,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This axis can range from rote techniques to advanced statistical machine learning.",
                    "sid": 211,
                    "ssid": 211,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2.3 illustrates the compromise necessary when choosing among the following classification techniques.",
                    "sid": 212,
                    "ssid": 212,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A simple example is a regular expression.",
                    "sid": 213,
                    "ssid": 213,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the regular expression matches a sentence, then the information contained in the groupings (parentheses) of the regular expression form the entities in the data value.",
                    "sid": 214,
                    "ssid": 214,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, rote techniques use one or more patterns that match the parsed representation of the sentence.",
                    "sid": 215,
                    "ssid": 215,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If at least one pattern matches, Figure 2.2: Investing more computational time to parsing leads to higher syntactic information gains.",
                    "sid": 216,
                    "ssid": 216,
                    "kind_of_tag": "s"
                },
                {
                    "text": "the data in the sentence is considered relevant and the system extracts it.",
                    "sid": 217,
                    "ssid": 217,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If no pattern matches, the data is not extracted.",
                    "sid": 218,
                    "ssid": 218,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rote patterns are typically generated in one of two ways.",
                    "sid": 219,
                    "ssid": 219,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first way is exact matching.",
                    "sid": 220,
                    "ssid": 220,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach is where each training instance generates a single pattern.",
                    "sid": 221,
                    "ssid": 221,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those patterns are not modified, though they can be kept or discarded (see Etzioni et al. [15] for an example).",
                    "sid": 222,
                    "ssid": 222,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second way is called generalization.",
                    "sid": 223,
                    "ssid": 223,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is where some simple form of machine learning is used to make the generated patterns more general, and therefore more resistant to the presence of noise (Califf and Mooney [6], Huffman [23], and Soderland [35] use this method).",
                    "sid": 224,
                    "ssid": 224,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They rely on statistical averaging or probability to find patterns in the data.",
                    "sid": 225,
                    "ssid": 225,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Probabilistic networks are trained statistical methods that label sequences of data [8].",
                    "sid": 226,
                    "ssid": 226,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The sentence can be treated as a sequence of words.",
                    "sid": 227,
                    "ssid": 227,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The network then predicts labels for the words that correspond to the roles in the relation that is being extracted [25].",
                    "sid": 228,
                    "ssid": 228,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in the relation CapitalCityOf, Paris could Figure 2.3: Techniques that are less sensitive to noise require more training.",
                    "sid": 229,
                    "ssid": 229,
                    "kind_of_tag": "s"
                },
                {
                    "text": "be labeled as CITY and France could be labeled as COUNTRY.",
                    "sid": 230,
                    "ssid": 230,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One can then extract the words with a meaningful label.",
                    "sid": 231,
                    "ssid": 231,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Examples of probabilistic networks are Hidden Markov Models and Conditional Random Fields.",
                    "sid": 232,
                    "ssid": 232,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Statistical classifiers use data mining techniques.",
                    "sid": 233,
                    "ssid": 233,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sentences or facts can be modelled as feature vectors appropriate for the classifier chosen.",
                    "sid": 234,
                    "ssid": 234,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classifier can be trained using traditional supervised, semi-supervised, or unsupervised approaches.",
                    "sid": 235,
                    "ssid": 235,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Examples of statistical classifiers are Naive Bayes and Support Vector Machines.",
                    "sid": 236,
                    "ssid": 236,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Examples include Culotta and Sorensen [10], Jie and Min [24], and Bunescu and Mooney [5].",
                    "sid": 237,
                    "ssid": 237,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This chapter also describes the problem definition each paper attempts to solve.",
                    "sid": 238,
                    "ssid": 238,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There is a wide variety of problem definitions, and their explanations can get quite tedious.",
                    "sid": 239,
                    "ssid": 239,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To make it easier for the reader, a thought experiment has been devised.",
                    "sid": 240,
                    "ssid": 240,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It will make use of the same metaphor used previously which was about deciphering a foreign language.",
                    "sid": 241,
                    "ssid": 241,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The thought experiment is called the Icelandic Library.",
                    "sid": 242,
                    "ssid": 242,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It goes as follows.",
                    "sid": 243,
                    "ssid": 243,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A person, named Bob, is in a library in Iceland.",
                    "sid": 244,
                    "ssid": 244,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To simplify matters, all books are written in Icelandic\u2014and there are no pictures.",
                    "sid": 245,
                    "ssid": 245,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The person does not speak Icelandic.",
                    "sid": 246,
                    "ssid": 246,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is given a task, which is defined differently with each research paper description.",
                    "sid": 247,
                    "ssid": 247,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is to use the resources of the library, which can differ with each prior research, to perform the task.",
                    "sid": 248,
                    "ssid": 248,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It should be understood that though the explanation for each problem is stated as if it were in Icelandic, all papers in fact operate on English language text.",
                    "sid": 249,
                    "ssid": 249,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following sections divide the literature into four categories along the axis of type of training.",
                    "sid": 250,
                    "ssid": 250,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An explanation of where each prior work falls in the remaining two axes is detailed in its description.",
                    "sid": 251,
                    "ssid": 251,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are typically very specific to a few syntactic patterns.",
                    "sid": 252,
                    "ssid": 252,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These kinds of methods do not offer very much help for changing domains.",
                    "sid": 253,
                    "ssid": 253,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following papers are classified as handwritten methods because they require a large, domain-specific portion to be hand-coded.",
                    "sid": 254,
                    "ssid": 254,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fundel et al. [17] was built to extract protein-protein interactions from biological paper abstracts.",
                    "sid": 255,
                    "ssid": 255,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, Bob\u2019s task in the Icelandic Library to go through every book in the library, sentence by sentence, and create a list of protein-protein interactions, cataloguing the type of interaction.",
                    "sid": 256,
                    "ssid": 256,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each sentence in the library is already parsed into a dependency tree (an example of deep parsing.",
                    "sid": 257,
                    "ssid": 257,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 1.3) for Bob to use.",
                    "sid": 258,
                    "ssid": 258,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob also has a dictionary of protein names (in Icelandic) to guide the search.",
                    "sid": 259,
                    "ssid": 259,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The paper proposes the following solution.",
                    "sid": 260,
                    "ssid": 260,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After finding a sentence with a protein name from the dictionary, Bob will perform certain simple transformations to the dependency tree.",
                    "sid": 261,
                    "ssid": 261,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These transformations include building noun phrases and reconstructing lists from their syntactic interpretation.",
                    "sid": 262,
                    "ssid": 262,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob then looks for three syntactic patterns in the resulting tree.",
                    "sid": 263,
                    "ssid": 263,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These patterns correspond to what the authors claim are the three most important syntactic forms for expressing relations.",
                    "sid": 264,
                    "ssid": 264,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Quoting the text: Currently, we use three rules that reflect the constructs that are most frequently used in English language for describing relations, namely: 1.",
                    "sid": 265,
                    "ssid": 265,
                    "kind_of_tag": "s"
                },
                {
                    "text": "effector-relation-effectee (\u2018A activates B\u2019).",
                    "sid": 266,
                    "ssid": 266,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 267,
                    "ssid": 267,
                    "kind_of_tag": "s"
                },
                {
                    "text": "relation-of-effectee-by-effector (\u2018Activation of A by B\u2019).",
                    "sid": 268,
                    "ssid": 268,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 269,
                    "ssid": 269,
                    "kind_of_tag": "s"
                },
                {
                    "text": "relation-between-effector-and-effectee (\u2018Interaction between A and B\u2019).",
                    "sid": 270,
                    "ssid": 270,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The triplet <effector, relation, effectee >is extracted if it matches one of the patterns above.",
                    "sid": 271,
                    "ssid": 271,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of the patterns is hard coded (an example of a rote technique.",
                    "sid": 272,
                    "ssid": 272,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Section 1.3).",
                    "sid": 273,
                    "ssid": 273,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These patterns are fixed at design-time\u2014and they are chosen based on the language patterns of biological abstracts.",
                    "sid": 274,
                    "ssid": 274,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is easy to see that extending this system to new domains would necessarily require adding a new dictionary (to replace the protein dictionary) and to reanalyze the new text sources for possible syntactic patterns that correspond with the semantic meaning that is desired.",
                    "sid": 275,
                    "ssid": 275,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Daraselia et al. [11] uses a hand-generated ontology of protein-protein interaction.",
                    "sid": 276,
                    "ssid": 276,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An ontology, in this sense, is a collection of data structures describing how to translate between an input sentence and another data structure called a frame.",
                    "sid": 277,
                    "ssid": 277,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A frame is just a template with slots.",
                    "sid": 278,
                    "ssid": 278,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The slots define admissible values.",
                    "sid": 279,
                    "ssid": 279,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Synonyms, keywords, and protein names are all defined in the ontology.",
                    "sid": 280,
                    "ssid": 280,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this problem, Bob\u2019s task is to choose a form (called a frame in the paper) from a list of possible forms based on rules in the ontology.",
                    "sid": 281,
                    "ssid": 281,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then each form is filled out based on the same rules.",
                    "sid": 282,
                    "ssid": 282,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is again given a dependency parse for each sentence.",
                    "sid": 283,
                    "ssid": 283,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules are of the type \u201cuse the form called Inhibition when the verb of the sentence is \u2019inhibits\u201d\u2019.",
                    "sid": 284,
                    "ssid": 284,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The paper analyzes the example sentence \u201cP53 inhibits apoptosis.\u201d The system performs a dependency parse of the sentence, then applies the ontology to the resulting tree.",
                    "sid": 285,
                    "ssid": 285,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The word \u201cinhibits\u201d is in the ontology, and activates a frame.",
                    "sid": 286,
                    "ssid": 286,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The frame is called \u201cInhibition\u201d and describe what useful information the system should look for in terms of chemical inhibition.",
                    "sid": 287,
                    "ssid": 287,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The \u201cInhibition\u201d frame has an \u201cagent\u201d slot and a \u201cpatient\u201d slot.",
                    "sid": 288,
                    "ssid": 288,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The \u201cagent\u201d slot needs a protein name that is the subject of the verb.",
                    "sid": 289,
                    "ssid": 289,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A search through the ontology reveals that \u201cP53\u201d is a protein name, and fills the requirements for \u201cagent\u201d in this frame.",
                    "sid": 290,
                    "ssid": 290,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201cP53\u201d is inserted into the agent slot.",
                    "sid": 291,
                    "ssid": 291,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The \u201cpatient\u201d slot needs a direct object that is a cell process.",
                    "sid": 292,
                    "ssid": 292,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201capoptosis\u201d is a cell process and a direct object of \u201cinhibits\u201d and therefore fulfils the requirements for \u201cpatient\u201d.",
                    "sid": 293,
                    "ssid": 293,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The frame has been filled in successfully and can be stored in a database.",
                    "sid": 294,
                    "ssid": 294,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tree is walked this way, until there is no more information to be extracted.",
                    "sid": 295,
                    "ssid": 295,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This can be considered a rote process since no machine learning is performed.",
                    "sid": 296,
                    "ssid": 296,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The construction of the ontology is very time-consuming.",
                    "sid": 297,
                    "ssid": 297,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is constructed by hand by domain experts.",
                    "sid": 298,
                    "ssid": 298,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And the ontology is domain-specific.",
                    "sid": 299,
                    "ssid": 299,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Little or none of the domain knowledge encoded in the ontology can be transfered to another application domain.",
                    "sid": 300,
                    "ssid": 300,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in addition to the complex network of frames and other concepts, the ontology includes 6,000 words and their meanings in the ontology.",
                    "sid": 301,
                    "ssid": 301,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These words are domain specific\u2014words not meaningful to the search were not included.",
                    "sid": 302,
                    "ssid": 302,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would be very expensive to generate a dictionary of that size for every domain one would like to query.",
                    "sid": 303,
                    "ssid": 303,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this technique is very powerful, the expense is prohibitive.",
                    "sid": 304,
                    "ssid": 304,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The corpora used in its proceedings are fully annotated.",
                    "sid": 305,
                    "ssid": 305,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The domain is completely specified ahead of time.",
                    "sid": 306,
                    "ssid": 306,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This makes it easy to apply traditional machine learning techniques.",
                    "sid": 307,
                    "ssid": 307,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The focus is placed on choosing an appropriate feature set.",
                    "sid": 308,
                    "ssid": 308,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The main choices that must be made in a supervised model are the choice of feature set and the choice of classifier.",
                    "sid": 309,
                    "ssid": 309,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Rote methods The simplest classifier is a pattern matcher.",
                    "sid": 310,
                    "ssid": 310,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is a simple, deterministic function that classifies the type of relation present in a sentence.",
                    "sid": 311,
                    "ssid": 311,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Huffman [23] presents a system that creates a dictionary of patterns from training examples that can be later used to extract information from other documents.",
                    "sid": 312,
                    "ssid": 312,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, Bob is given the task of generating tree patterns that indicate a certain semantic meaning and can be applied to new sentences.",
                    "sid": 313,
                    "ssid": 313,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is given a book of sentences that are parsed into a syntax tree.",
                    "sid": 314,
                    "ssid": 314,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In each sentence, two words are marked as different from the others.",
                    "sid": 315,
                    "ssid": 315,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are the two entities in the relation.",
                    "sid": 316,
                    "ssid": 316,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From this book, Bob must generate a small set of patterns that will be able to match entities that have the same relationship as the words in the book.",
                    "sid": 317,
                    "ssid": 317,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution presented in the paper is that Bob should determine the path along the parse trees that are important to the relation using a set of rules.",
                    "sid": 318,
                    "ssid": 318,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules specify which words to ignore and which to keep.",
                    "sid": 319,
                    "ssid": 319,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These paths are written down, with the marked words replaced by blanks.",
                    "sid": 320,
                    "ssid": 320,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When all of the sentences in the book have been processed, Bob is to compare all of the patterns to each other, finding patterns that have similar structure.",
                    "sid": 321,
                    "ssid": 321,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When two patterns are similar, words from one pattern that do not match the corresponding word in the other pattern are replaced by a wild-card and that new pattern replaces the other two.",
                    "sid": 322,
                    "ssid": 322,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this way, the patterns are generalized The list of patterns can then be applied to new sentences parsed into a syntax tree.",
                    "sid": 323,
                    "ssid": 323,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If any other patterns match, the words that correspond to blanks in the pattern are returned as extracted information.",
                    "sid": 324,
                    "ssid": 324,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Transferring this system to new domains is better than with the handwritten methods.",
                    "sid": 325,
                    "ssid": 325,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, one needs only create a new training set (the book of marked sentences given to Bob).",
                    "sid": 326,
                    "ssid": 326,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, with small training sets, the system can be inaccurate.",
                    "sid": 327,
                    "ssid": 327,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If only one sentence exists in the training set, only one pattern can be generated.",
                    "sid": 328,
                    "ssid": 328,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A sentence must match it exactly to be extracted.",
                    "sid": 329,
                    "ssid": 329,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Considering how many ways there are to phrase the same fact, it would take many training examples to generate a system with many generalized patterns to result in high Recall.",
                    "sid": 330,
                    "ssid": 330,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Califf and Mooney [6] has a similar system.",
                    "sid": 331,
                    "ssid": 331,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It was designed to extract information from job postings on Usenet.",
                    "sid": 332,
                    "ssid": 332,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is given one form to fill out that contain the attributes of job postings\u2014including job title, company, and salary.",
                    "sid": 333,
                    "ssid": 333,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is also given a set of postings in Icelandic and their corresponding filled-in form.",
                    "sid": 334,
                    "ssid": 334,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From this, Bob must generate a small set of patterns that can be applied to new job postings to automatically fill in the forms.",
                    "sid": 335,
                    "ssid": 335,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The job postings are given as-is\u2014that is, no parsing is performed.",
                    "sid": 336,
                    "ssid": 336,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution is to have Bob write out the words surrounding the words from each blank in the form as a pattern.",
                    "sid": 337,
                    "ssid": 337,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When all of the training examples have been done this way, the patterns corresponding to the same blanks are compared.",
                    "sid": 338,
                    "ssid": 338,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob chooses two patterns at random, finds the similarities between them, and generalizes the differences so that they will match the same set of sentences.",
                    "sid": 339,
                    "ssid": 339,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The generalizations are fixed.",
                    "sid": 340,
                    "ssid": 340,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One example is to generalize \u201chouse\u201d and \u201ccup\u201d to match any noun.",
                    "sid": 341,
                    "ssid": 341,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The new generalized pattern is then matched over the training set, extracting values.",
                    "sid": 342,
                    "ssid": 342,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If it extracts any wrong values, the generalization is discarded.",
                    "sid": 343,
                    "ssid": 343,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If it does not match any wrong values, Bob iterates through generalizations until no more generalizations can be performed that produce only correct extractions.",
                    "sid": 344,
                    "ssid": 344,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The generalized patterns are added back into the list, replacing the two patterns they were generalized from.",
                    "sid": 345,
                    "ssid": 345,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When there are no more possible generalizations, the list of patterns is returned.",
                    "sid": 346,
                    "ssid": 346,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generalizations are performed in order to avoid over-fitting patterns to the training data.",
                    "sid": 347,
                    "ssid": 347,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This process lets the set of patterns remain small and also allows the system to deal with noise in the training set.",
                    "sid": 348,
                    "ssid": 348,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this method is more powerful than Huffman [23], it still requires an expert to create a training set for each new domain.",
                    "sid": 349,
                    "ssid": 349,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore time consuming and inflexible.",
                    "sid": 350,
                    "ssid": 350,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Califf et al. [7] extends the system from Califf and Mooney [6] to allow for generalizations from Wordnet classes.",
                    "sid": 351,
                    "ssid": 351,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, combining patterns for the words \u201chouse\u201d and \u201capartment\u201d could lead to a pattern that matches any word in the \u201cdwelling\u201d category.",
                    "sid": 352,
                    "ssid": 352,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Soderland [35] uses a simple pattern matcher similar to regular expressions.",
                    "sid": 353,
                    "ssid": 353,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The way it creates patterns is not significantly different from other pattern matching systems.",
                    "sid": 354,
                    "ssid": 354,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is given the task of generating patterns that will match a given relation between entities.",
                    "sid": 355,
                    "ssid": 355,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this research paper, Bob is allowed to ask a librarian to read sentences and identify the relationship stated in the sentence.",
                    "sid": 356,
                    "ssid": 356,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This lets Bob build a new training set.",
                    "sid": 357,
                    "ssid": 357,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution the paper proposes is one that tries to minimize the number of sentences that are required of the librarian.",
                    "sid": 358,
                    "ssid": 358,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It interactively asks the user to tag sentences.",
                    "sid": 359,
                    "ssid": 359,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pattern generation method is not materially different from the previously described methods.",
                    "sid": 360,
                    "ssid": 360,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system selects the sentences the user will label based on three categories: Instances covered by an existing pattern\u2014to check the patterns, Instances not covered by a pattern but covered by a generalization of a pattern\u2014to confirm that a generalization is correct, and Instances not covered by any pattern\u2014to expand the number of patterns.",
                    "sid": 361,
                    "ssid": 361,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By randomly training and retraining from these three classes of sentence, the user slowly increases the number of training instances available to the system.",
                    "sid": 362,
                    "ssid": 362,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This process is called active learning.",
                    "sid": 363,
                    "ssid": 363,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It uses feedback to minimize the number of training instances required.",
                    "sid": 364,
                    "ssid": 364,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The drawback is that the fundamental means of learning has not changed, so only a small measure of efficiency is gained.",
                    "sid": 365,
                    "ssid": 365,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Statistical methods Support Vector Machines are a state of the art statistical classifier.",
                    "sid": 366,
                    "ssid": 366,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The kernel function is essentially a measure of similarity.",
                    "sid": 367,
                    "ssid": 367,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Much research is being done on the choice of features and the kernel function.",
                    "sid": 368,
                    "ssid": 368,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research is ongoing into new kernel functions that can act on trees\u2014dependency parse trees specifically.",
                    "sid": 369,
                    "ssid": 369,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bunescu and Mooney [4] builds a system that uses a kernel tailored for subgraphs of a dependency tree.",
                    "sid": 370,
                    "ssid": 370,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is given a task of classifying the relationship between two given entities in a sentence into one of a set of classes.",
                    "sid": 371,
                    "ssid": 371,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He has at his disposal a set of dependency trees from sentences and the categories they should be classified into.",
                    "sid": 372,
                    "ssid": 372,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution the authors propose is for Bob to find all sentences with the same training class.",
                    "sid": 373,
                    "ssid": 373,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob then must extract the shortest path in the tree from one entity to the next (since it works only on binary relations).",
                    "sid": 374,
                    "ssid": 374,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob can compare two sentences based on the number of words the shortest paths have in common.",
                    "sid": 375,
                    "ssid": 375,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An SVM is trained with this data.",
                    "sid": 376,
                    "ssid": 376,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A new sentence is classified by extracting the shortest path between entities and classifying it with the SVM.",
                    "sid": 377,
                    "ssid": 377,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The authors make the hypothesis that the most important syntactic and lexical features of a relation occur along the shortest path between the two entities on the dependency tree.",
                    "sid": 378,
                    "ssid": 378,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The shortest path is augmented with part of speech and Wordnet hypernym information.",
                    "sid": 379,
                    "ssid": 379,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bunescu and Mooney [5] develops a kernel function that applies to sequences of words.",
                    "sid": 380,
                    "ssid": 380,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is equivalent to the previous work except that it applies to word subsequences instead of dependency graphs.",
                    "sid": 381,
                    "ssid": 381,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The subsequence kernel counts the number of matching subsequences.",
                    "sid": 382,
                    "ssid": 382,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The target domain is protein-protein interactions in biological abstracts.",
                    "sid": 383,
                    "ssid": 383,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The length of the sequences is limited to four words.",
                    "sid": 384,
                    "ssid": 384,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The insight in this paper is that only three common expressions of relationship are considered.",
                    "sid": 385,
                    "ssid": 385,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By restricting the feature set, they both speed up the algorithm and look only at very compelling data.",
                    "sid": 386,
                    "ssid": 386,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the sequences are no longer than four, this is computationally inexpensive.",
                    "sid": 387,
                    "ssid": 387,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using a subsequence kernel allows for a shallow parse or no parse at all instead of an expensive deep parse.",
                    "sid": 388,
                    "ssid": 388,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Culotta and Sorensen [10] develops a kernel function that operates on the dependency graph.",
                    "sid": 389,
                    "ssid": 389,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The hypothesis laid out is that the syntactic relation between two named entities is local\u2014that it is expressed in the shortest subtree of the dependency parse tree containing both entities.",
                    "sid": 390,
                    "ssid": 390,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This hypothesis is not as strong as the thesis proposed in Bunescu and Mooney [4].",
                    "sid": 391,
                    "ssid": 391,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The kernel recursively counts the number of common subtrees two trees share.",
                    "sid": 392,
                    "ssid": 392,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The dependency tree is augmented with many features\u2014including the part of speech and Wordnet hypernyms.",
                    "sid": 393,
                    "ssid": 393,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The entities of interest are identified in the sentence by using a Named Entity Recognition phase.",
                    "sid": 394,
                    "ssid": 394,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This technique allows for a fairly robust identification of names, places, and organizations.",
                    "sid": 395,
                    "ssid": 395,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the Named Entity Recognition system used and those in common use are limited in what types of entities they identify.",
                    "sid": 396,
                    "ssid": 396,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also typically require supervised learning, so they are costly to extend to new domains.",
                    "sid": 397,
                    "ssid": 397,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Harabagiu et al. [20] augments the work in Culotta and Sorensen [10] by adding new features to the dependency graph.",
                    "sid": 398,
                    "ssid": 398,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An ontology of one million words was added to provide information about what noun phrases are the arguments of which predicates.",
                    "sid": 399,
                    "ssid": 399,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Jie and Min [24] uses a Support Vector Machine to classify extracted relations.",
                    "sid": 400,
                    "ssid": 400,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It performs noun-phrase chunking instead of doing a deep parse.",
                    "sid": 401,
                    "ssid": 401,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It argues (and its results confirm) that little extra precision is gained from doing a full dependency parse.",
                    "sid": 402,
                    "ssid": 402,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Its feature set is not different from the other work on SVM\u2019s. Liu et al. [26] considers a set of syntactic features to combine into a feature vector for input to a kernel.",
                    "sid": 403,
                    "ssid": 403,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The feature extractions are hand-coded.",
                    "sid": 404,
                    "ssid": 404,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The syntactic features they develop include patterns such as \u201cparent node of protein name\u201d in the parse tree.",
                    "sid": 405,
                    "ssid": 405,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is important because it tries to combine syntactic features into a feature vector to be used in a classifier.",
                    "sid": 406,
                    "ssid": 406,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, the syntactic features are selected by hand specifically for the domain.",
                    "sid": 407,
                    "ssid": 407,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that the features are likely not to work in a new domain.",
                    "sid": 408,
                    "ssid": 408,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The typical statistical approach is to find a sentence that has the entities in question and to try to extract their relationship from the sentence.",
                    "sid": 409,
                    "ssid": 409,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Culotta et al. [8] turns that around and assumes that the text is about some entity\u2014the subject of the text.",
                    "sid": 410,
                    "ssid": 410,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal, then, is to find the relationships between the subject and the other entities mentioned in the text.",
                    "sid": 411,
                    "ssid": 411,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this approach, Bob is given a sentence and the subject of the document from which it is taken.",
                    "sid": 412,
                    "ssid": 412,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob then is asked to find the relationship of the entities in the sentence and the subject.",
                    "sid": 413,
                    "ssid": 413,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This approach models context in a simple way in which implicit mentions of the subject of a text can be resolved to an explicit entity.",
                    "sid": 414,
                    "ssid": 414,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in an article about Germany, one might find the sentence \u201cThe capital is Berlin.\u201d No where in the sentence is Germany mentioned.",
                    "sid": 415,
                    "ssid": 415,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is implied that Germany should be understood because the entire document is about Germany.",
                    "sid": 416,
                    "ssid": 416,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most approaches miss these references.",
                    "sid": 417,
                    "ssid": 417,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Section 6.3 discusses a way to augment the current work with a similar kind of context.",
                    "sid": 418,
                    "ssid": 418,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Culotta et al. [8] trains a Conditional Random Field (See Section 2.3) to label the words in a sentence.",
                    "sid": 419,
                    "ssid": 419,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The labels can be either IRRELEVANT or the name of the class.",
                    "sid": 420,
                    "ssid": 420,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in an article about George W. Bush, the sentence \u201cHe is married to Laura Bush.\u201d would label the name \u201cLaura Bush\u201d as WIFE and the rest of the words as IRRELEVANT.",
                    "sid": 421,
                    "ssid": 421,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is then trivial to extract out the information.",
                    "sid": 422,
                    "ssid": 422,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another approach is taken in Xiao et al. [41].",
                    "sid": 423,
                    "ssid": 423,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classification is done using a maximum entropy model.",
                    "sid": 424,
                    "ssid": 424,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Features include the words surrounding the entities.",
                    "sid": 425,
                    "ssid": 425,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It performs a dependency parse, and uses features from those trees.",
                    "sid": 426,
                    "ssid": 426,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Supervised methods follow basically the same approach: use a standard classifier on a feature vector derived from the sentence.",
                    "sid": 427,
                    "ssid": 427,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of classifier and the feature set are thus very important and form the bulk of the research.",
                    "sid": 428,
                    "ssid": 428,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They typically categorize or cluster data automatically using standard clustering techniques.",
                    "sid": 429,
                    "ssid": 429,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Etzioni et al. [15] describes a system called \u201cKnowItAll\u201d that uses the World Wide Web as a giant corpus of sentences (the library in the Icelandic Library metaphor).",
                    "sid": 430,
                    "ssid": 430,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The user can ask Bob to give a list of entities that are of a certain type, or to give a list of pairs of entities that are in a certain relationship.",
                    "sid": 431,
                    "ssid": 431,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The authors have developed a set of domain-independent extraction rules.",
                    "sid": 432,
                    "ssid": 432,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These rules are not meant to exhaustively cover every way an English sentence can describe a relation.",
                    "sid": 433,
                    "ssid": 433,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules instead leverage the sheer size of the Internet to \u201cplay the averages\u201d.",
                    "sid": 434,
                    "ssid": 434,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The principle is that on average, there is a sentence that does match a certain rule somewhere on the Internet that contains the desired information.",
                    "sid": 435,
                    "ssid": 435,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following are some example patterns.",
                    "sid": 436,
                    "ssid": 436,
                    "kind_of_tag": "s"
                },
                {
                    "text": "NP means noun phrase and {} means the surrounded text is optional.",
                    "sid": 437,
                    "ssid": 437,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 NP1 {\u201c,\u201d} \u201csuch as\u201d NPList2 \u2022 NP1 {\u201c,\u201d} \u201cand other\u201d NP2 \u2022 NP1 {\u201c,\u201d} \u201cincluding\u201d NPList2 \u2022 NP1 \u201cis a\u201d NP2 \u2022 NP1 \u201cis the\u201d NP2 \u201cof \u201d NP3 \u2022 \u201cthe\u201d NP1 \u201cof \u201d NP2 \u201cis\u201d NP3 The user can query KnowItAll for \u201ccities in France\u201d.",
                    "sid": 438,
                    "ssid": 438,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It will then search various search engines with the queries \u201ccities in France such as\u201d, \u201cand other cities in France\u201d and \u201cis a city in France\u201d.",
                    "sid": 439,
                    "ssid": 439,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting pages are scraped for the sentence containing the text.",
                    "sid": 440,
                    "ssid": 440,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are applied and the resulting information is extracted.",
                    "sid": 441,
                    "ssid": 441,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This system is interesting for three reasons.",
                    "sid": 442,
                    "ssid": 442,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, it is more active than the normal approach.",
                    "sid": 443,
                    "ssid": 443,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It seeks the information that it knows how to extract instead of learning how to extract information that is given to it.",
                    "sid": 444,
                    "ssid": 444,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, it uses the redundancy of the size of the dataset (effectively, the entire searchable Internet) to make up for its lack of intelligence.",
                    "sid": 445,
                    "ssid": 445,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lastly, it allows for a wide range of domains.",
                    "sid": 446,
                    "ssid": 446,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The only human input needed is the expression of the query.",
                    "sid": 447,
                    "ssid": 447,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The KnowItAll system is classified here as shallow parsing and rote.",
                    "sid": 448,
                    "ssid": 448,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is considered unsupervised since it requires no human input to extend its domain.",
                    "sid": 449,
                    "ssid": 449,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Etzioni et al. [16] extends the KnowItAll system.",
                    "sid": 450,
                    "ssid": 450,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Three unsupervised methods are added.",
                    "sid": 451,
                    "ssid": 451,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Rule Learning system augments the domain-independent rules from the original KnowItAll system by extracting text patterns using seeds generated by the domain-independent rules.",
                    "sid": 452,
                    "ssid": 452,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This could be considered a case of semi-supervised learning (i.e., learning from a small number of examples) but the seed examples are automatically generated by the system itself.",
                    "sid": 453,
                    "ssid": 453,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has been classified here because there is no human input required.",
                    "sid": 454,
                    "ssid": 454,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second extension to KnowItAll is Subclass Extraction.",
                    "sid": 455,
                    "ssid": 455,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reasoning behind the system is simple.",
                    "sid": 456,
                    "ssid": 456,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the user wants to query the system for a list of scientists, the original KnowItAll would use patterns equivalent to \u201cscientists such as\u201d to find sentences that contain scientists.",
                    "sid": 457,
                    "ssid": 457,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the system would miss sentences that match \u201cphysicists such as\u201d.",
                    "sid": 458,
                    "ssid": 458,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Subclass Extraction system uses KnowItAll to extract a list of highly probable subclass names to augment the query.",
                    "sid": 459,
                    "ssid": 459,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system finds new subclass names by querying itself for \u201ctypes of scientist\u201d.",
                    "sid": 460,
                    "ssid": 460,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The third extension is called List Extraction.",
                    "sid": 461,
                    "ssid": 461,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In List Extraction, the system queries a search engine for one of the many structured lists of items on the Internet.",
                    "sid": 462,
                    "ssid": 462,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The items are chosen at random from the lists generated by the original KnowItAll system.",
                    "sid": 463,
                    "ssid": 463,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal is to find many structured lists containing the items and correlate the results together.",
                    "sid": 464,
                    "ssid": 464,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many queries are made, and the items are ranked by the number of lists they appear in.",
                    "sid": 465,
                    "ssid": 465,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This method is interesting because it shows that a high precision algorithm can be used as an initial stage to generate high-precision seed candidates.",
                    "sid": 466,
                    "ssid": 466,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those seeds can then be fed to higher recall stages.",
                    "sid": 467,
                    "ssid": 467,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also shows how useful redundancy can be.",
                    "sid": 468,
                    "ssid": 468,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of trying to deduce what a single sentence is saying, the system uses the redundant nature of multiple documents to extract and verify the information.",
                    "sid": 469,
                    "ssid": 469,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hasegawa et al. [21] introduces a system that clusters pairs of entities together based on similar contexts.",
                    "sid": 470,
                    "ssid": 470,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm works as follows: given a set of documents, a shallow parse is performed.",
                    "sid": 471,
                    "ssid": 471,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system identifies pairs of entities that are near each other.",
                    "sid": 472,
                    "ssid": 472,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The words that come between the pairs in the sentences are stored.",
                    "sid": 473,
                    "ssid": 473,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system then clusters the pairs of entities based on the similarities of the set of intervening words.",
                    "sid": 474,
                    "ssid": 474,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After the clustering is performed, the most common words from each cluster are chosen as the cluster label.",
                    "sid": 475,
                    "ssid": 475,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results indicated that this word was accurate for clusters of at least a certain size.",
                    "sid": 476,
                    "ssid": 476,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Shinyama and Sekine [34] develops a system for automatically classifying relations among entities.",
                    "sid": 477,
                    "ssid": 477,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their system works on an entire document (as opposed to a sentence).",
                    "sid": 478,
                    "ssid": 478,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It identifies entities in the document.",
                    "sid": 479,
                    "ssid": 479,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system records the context words surrounding each entity.",
                    "sid": 480,
                    "ssid": 480,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It then assumes that a relationship exists between each pair of entities in the document by reasoning that if they did not have a relationship, they wouldn\u2019t be in the same document.",
                    "sid": 481,
                    "ssid": 481,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system performs this analysis on multiple documents, keeping the entities separate.",
                    "sid": 482,
                    "ssid": 482,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system then performs clustering on the pairs of entities across multiple documents.",
                    "sid": 483,
                    "ssid": 483,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The goal is to use the context surrounding each word to cluster entities with similar \u201croles\u201d together.",
                    "sid": 484,
                    "ssid": 484,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in an article about Hurricane Katrina, the entity \u201cNew Orleans\u201d might be surrounded by \u201cwas hit\u201d.",
                    "sid": 485,
                    "ssid": 485,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201cKatrina\u201d would be surrounded by \u201cheaded\u201d as in \u201cKatrina headed North\u201d.",
                    "sid": 486,
                    "ssid": 486,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In another document about the tsunami that ravaged Myanmar, \u201cMyanmar\u201d also is found near \u201cwas hit\u201d.",
                    "sid": 487,
                    "ssid": 487,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u201cTsunami\u201d contains the context \u201cheaded\u201d as well.",
                    "sid": 488,
                    "ssid": 488,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These two pairs of entities would be clustered near each other, indicating the same basic relation.",
                    "sid": 489,
                    "ssid": 489,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although this clustering approach was not taken in the current research, Shinyama and Sekine [34] is interesting because it looks at a document as a whole.",
                    "sid": 490,
                    "ssid": 490,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most systems rely on the information contained in one sentence.",
                    "sid": 491,
                    "ssid": 491,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has the possibility to extract information other systems miss. Unsupervised methods are still cutting-edge.",
                    "sid": 492,
                    "ssid": 492,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They do not perform as well as supervised methods.",
                    "sid": 493,
                    "ssid": 493,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there is much promise that they will be able to recognize patterns and relations that humans cannot.",
                    "sid": 494,
                    "ssid": 494,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These values are a handful of examples, as opposed to an exhaustively tagged document set.",
                    "sid": 495,
                    "ssid": 495,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These examples are then used with an untagged document set to train the machine learning classifier.",
                    "sid": 496,
                    "ssid": 496,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Very often, the classifier is then applied to the documents to extract more values.",
                    "sid": 497,
                    "ssid": 497,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These values are added to the seed set, and the algorithm is iterated.",
                    "sid": 498,
                    "ssid": 498,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By doing this, the seed set \u201cgrows\u201d to a large enough size to achieve a high recall.",
                    "sid": 499,
                    "ssid": 499,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the seeds are chosen well, high precision is possible as well.",
                    "sid": 500,
                    "ssid": 500,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The advantage of this approach is that only a few examples are needed from a human.",
                    "sid": 501,
                    "ssid": 501,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The training document set can be as large as one wants\u2014no extra human input is required.",
                    "sid": 502,
                    "ssid": 502,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It has the advantage of generalizing well to many different domains.",
                    "sid": 503,
                    "ssid": 503,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A domain is defined by its examples.",
                    "sid": 504,
                    "ssid": 504,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But it also avoids the disadvantage of unsupervised methods in that the categories are defined by the person giving the examples.",
                    "sid": 505,
                    "ssid": 505,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Riloff [33] develops a system that extracts relations from text.",
                    "sid": 506,
                    "ssid": 506,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It requires only texts classified as relevant or irrelevant to the domain.",
                    "sid": 507,
                    "ssid": 507,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is tasked with identifying sentences that specify a particular relation among the entities in the sentence.",
                    "sid": 508,
                    "ssid": 508,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At his disposal, Bob has a set of documents that he knows are relevant to the relation at hand.",
                    "sid": 509,
                    "ssid": 509,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution is simple.",
                    "sid": 510,
                    "ssid": 510,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every potential entity is extracted from the document, including the surrounding text.",
                    "sid": 511,
                    "ssid": 511,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That text is made into a pattern.",
                    "sid": 512,
                    "ssid": 512,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are then evaluated: they are rated as the ratio of the number of times that pattern occurs in a relevant document over how many times it occurs in any document.",
                    "sid": 513,
                    "ssid": 513,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A confidence metric is then calculated from the matching patterns.",
                    "sid": 514,
                    "ssid": 514,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Entries with high confidence are considered relevant.",
                    "sid": 515,
                    "ssid": 515,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system generates thousands of patterns, so only the highest ranked patterns are maintained.",
                    "sid": 516,
                    "ssid": 516,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This technique is interesting because it does not require the same amount of work a supervised system would need.",
                    "sid": 517,
                    "ssid": 517,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead, one only needs to indicate which documents are relevant to the domain.",
                    "sid": 518,
                    "ssid": 518,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the task of classifying and reclassifying documents for each domain would become tedious.",
                    "sid": 519,
                    "ssid": 519,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Brin [3] describes a program that uses the scale of the World Wide Web to extract information.",
                    "sid": 520,
                    "ssid": 520,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is asked to find other pairs of entities that are in the same relation as a few examples.",
                    "sid": 521,
                    "ssid": 521,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He can only use the text of the books in the library for his search.",
                    "sid": 522,
                    "ssid": 522,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The solution the author proposes is to search for the examples in the books and record the interleaving text between them.",
                    "sid": 523,
                    "ssid": 523,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, that interleaving text is searched for in the books.",
                    "sid": 524,
                    "ssid": 524,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The words on either end of the text (beginning and end) are assumed to be correct values.",
                    "sid": 525,
                    "ssid": 525,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are added to the seed set and the system iterates.",
                    "sid": 526,
                    "ssid": 526,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There were several design decisions in this system.",
                    "sid": 527,
                    "ssid": 527,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first was that it was unimportant to have a high recall since the scale of the Internet made even a poor recall system return many thousands of values.",
                    "sid": 528,
                    "ssid": 528,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, the precision was of utmost importance since bad seeds could cause the entire set to become polluted with more bad seeds.",
                    "sid": 529,
                    "ssid": 529,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system therefore made no attempt at generalizing the patterns\u2014it relied only on the scale of the Web to generate enough values.",
                    "sid": 530,
                    "ssid": 530,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, this system had no automated method for making sure few bad seeds got into the seed set.",
                    "sid": 531,
                    "ssid": 531,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A manual \u201ccleaning\u201d stage was necessary to avoid very bad values.",
                    "sid": 532,
                    "ssid": 532,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agichtein and Gravano [1] introduces a system called SnowBall.",
                    "sid": 533,
                    "ssid": 533,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It follows the basic semi-supervised model outlined above.",
                    "sid": 534,
                    "ssid": 534,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a few seed values and a set of training documents, the system develops a set of patterns.",
                    "sid": 535,
                    "ssid": 535,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns match using an information retrieval algorithm.",
                    "sid": 536,
                    "ssid": 536,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, it uses a method commonly used to compare documents.",
                    "sid": 537,
                    "ssid": 537,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pattern is a weighted bag of words of all the words occurring around the two entities in a sentence.",
                    "sid": 538,
                    "ssid": 538,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The number of common words is summed up, weighted by the weight of each word.",
                    "sid": 539,
                    "ssid": 539,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This lets a score be calculated for how related a pattern is to a piece of text.",
                    "sid": 540,
                    "ssid": 540,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An implied negative set is created.",
                    "sid": 541,
                    "ssid": 541,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The domain is assumed to be \u201cmany-to-one\u201d or \u201cone-to-one\u201d.",
                    "sid": 542,
                    "ssid": 542,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the concept of which country is in which continent is many-to-one.",
                    "sid": 543,
                    "ssid": 543,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A country can only be in one continent and many countries are in a continent.",
                    "sid": 544,
                    "ssid": 544,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The idea of capital cities is often one-to-one.",
                    "sid": 545,
                    "ssid": 545,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A capital belongs to one country, and the country belongs to one capital.",
                    "sid": 546,
                    "ssid": 546,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because there is an assumed unique component (the country in the country-continent relation above), a negative set is created.",
                    "sid": 547,
                    "ssid": 547,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, if \u201cParis is the capital of France\u201d is a known value, it is implied that no other city is the capital of France.",
                    "sid": 548,
                    "ssid": 548,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows the seed set to be much larger than what the user enters by hand.",
                    "sid": 549,
                    "ssid": 549,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are rated by how many positive and negative seeds they match in the text.",
                    "sid": 550,
                    "ssid": 550,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This rating is called the confidence.",
                    "sid": 551,
                    "ssid": 551,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Patterns with high confidence match a high proportion of positive seeds and a low proportion of negative seeds.",
                    "sid": 552,
                    "ssid": 552,
                    "kind_of_tag": "s"
                },
                {
                    "text": "New values are generated by these patterns from the documents.",
                    "sid": 553,
                    "ssid": 553,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The values are rated based on the confidence of the patterns that match them.",
                    "sid": 554,
                    "ssid": 554,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The highest rated values are then fed back into the seed set and the entire algorithm is iterated.",
                    "sid": 555,
                    "ssid": 555,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm showed good results.",
                    "sid": 556,
                    "ssid": 556,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are several disadvantages to this approach, though.",
                    "sid": 557,
                    "ssid": 557,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, it assumes that a negative set can be created.",
                    "sid": 558,
                    "ssid": 558,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is not true in domains that are \u201cmany-to-many\u201d.",
                    "sid": 559,
                    "ssid": 559,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many- to-many domains do not have, in general, any easily calculable negative set.",
                    "sid": 560,
                    "ssid": 560,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The range of many-to-many domains is very large.",
                    "sid": 561,
                    "ssid": 561,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Imagine the domain of what countries are allied together.",
                    "sid": 562,
                    "ssid": 562,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, the algorithm relies on a Named Entity Recognition step.",
                    "sid": 563,
                    "ssid": 563,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While the authors claim that they have used a very reliable and accurate NER system, the problem still remains of training that system.",
                    "sid": 564,
                    "ssid": 564,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system they use categorizes entities into three broad categories: LOCATION, ORGANIZATION, and PERSON.",
                    "sid": 565,
                    "ssid": 565,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The paper also claims that its system can be trained for other categories.",
                    "sid": 566,
                    "ssid": 566,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, one of the main advantages of a semi-supervised model is the need for very little human input during training.",
                    "sid": 567,
                    "ssid": 567,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the NER system needs to be trained for every domain, then the advantage is lost.",
                    "sid": 568,
                    "ssid": 568,
                    "kind_of_tag": "s"
                },
                {
                    "text": "SnowBall does present interesting ideas.",
                    "sid": 569,
                    "ssid": 569,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First of all, it combines the results of multiple patterns over many sentences.",
                    "sid": 570,
                    "ssid": 570,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It relies on the idea of data redundancy in multiple documents to achieve higher accuracy.",
                    "sid": 571,
                    "ssid": 571,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, it presents a very clear bootstrapping technique.",
                    "sid": 572,
                    "ssid": 572,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both of these ideas are essential to the current work.",
                    "sid": 573,
                    "ssid": 573,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Agichtein et al. [2] improves on the SnowBall system.",
                    "sid": 574,
                    "ssid": 574,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It changes the pattern matching algorithm.",
                    "sid": 575,
                    "ssid": 575,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The original SnowBall system worked on a bag-of-words model of the words surrounding the entities.",
                    "sid": 576,
                    "ssid": 576,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The improvement is to take word order into account in the pattern matcher.",
                    "sid": 577,
                    "ssid": 577,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results of the two systems are then combined to achieve better performance.",
                    "sid": 578,
                    "ssid": 578,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The interesting part of this is that SnowBall gives a framework to work in: the system only changed in one part\u2014the pattern matching algorithm.",
                    "sid": 579,
                    "ssid": 579,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This shows that the overall bootstrapping algorithm is sound and extensible.",
                    "sid": 580,
                    "ssid": 580,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Culotta and McCallum [9] creates a system to apply active learning techniques to the semi-supervised approach.",
                    "sid": 581,
                    "ssid": 581,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It takes the normal active learning approach of choosing the most important unknown values to classify.",
                    "sid": 582,
                    "ssid": 582,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it also weighs into the ranking a measure of the difficulty of classification.",
                    "sid": 583,
                    "ssid": 583,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows the system to more effectively reduce the human input necessary to achieve a desired level of precision.",
                    "sid": 584,
                    "ssid": 584,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Mann and Yarowsky [28] combines three different classifiers to match patterns.",
                    "sid": 585,
                    "ssid": 585,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It uses a Rote system (basic string pattern matching), Naive Bayes (bag of words), and a Conditional Random Field.",
                    "sid": 586,
                    "ssid": 586,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Combining the results of all of them (using a voting system) increased the accuracy significantly compared to using only one.",
                    "sid": 587,
                    "ssid": 587,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system bootstraps not only the seed set but also the document set.",
                    "sid": 588,
                    "ssid": 588,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After generating the patterns from a small corpus of tagged documents, it performs a web search of the seed values.",
                    "sid": 589,
                    "ssid": 589,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting documents are then used to test the patterns and generate new values.",
                    "sid": 590,
                    "ssid": 590,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Stevenson and Greenwood [36] presents an interesting approach.",
                    "sid": 591,
                    "ssid": 591,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It follows the basic bootstrapping method described above.",
                    "sid": 592,
                    "ssid": 592,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, instead of adding new values to the seed set, it adds new patterns to a pattern set.",
                    "sid": 593,
                    "ssid": 593,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It compares the patterns \u201csemantically\u201d to existing, reliable patterns.",
                    "sid": 594,
                    "ssid": 594,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are compared based on Wordnet categories.",
                    "sid": 595,
                    "ssid": 595,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pennacchiotti and Pantel [32] describes a system called Espresso.",
                    "sid": 596,
                    "ssid": 596,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system differs from the standard bootstrapping algorithm by an adaptation to insufficient data.",
                    "sid": 597,
                    "ssid": 597,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In small document sets, it queries the web to expand the number of documents available.",
                    "sid": 598,
                    "ssid": 598,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It also develops metrics for evaluating a patterns and the generated values.",
                    "sid": 599,
                    "ssid": 599,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These are helpful for filtering the seed set and pattern dictionary.",
                    "sid": 600,
                    "ssid": 600,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pantel and Pennacchiotti [31] extends Espresso by treating patterns with high recall differently from patterns with high precision.",
                    "sid": 601,
                    "ssid": 601,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Their results are combined differently, giving patterns with high precision the role of evaluating the high-recall patterns.",
                    "sid": 602,
                    "ssid": 602,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows for a higher recall with a small loss in precision.",
                    "sid": 603,
                    "ssid": 603,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Suchanek et al. [37] builds a system called LEILA.",
                    "sid": 604,
                    "ssid": 604,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LEILA parses sentences using a link grammar.",
                    "sid": 605,
                    "ssid": 605,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A link grammar builds links between pairs of words, similar to a dependency graph.",
                    "sid": 606,
                    "ssid": 606,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The resulting graph can be traversed as a sequence of words (nodes).",
                    "sid": 607,
                    "ssid": 607,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns LEILA generates use the path between the two entities in the binary relation.",
                    "sid": 608,
                    "ssid": 608,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LEILA is restricted to binary relations.",
                    "sid": 609,
                    "ssid": 609,
                    "kind_of_tag": "s"
                },
                {
                    "text": "LEILA generates a set of patterns from a seed set of values and an untagged document set.",
                    "sid": 610,
                    "ssid": 610,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Patterns are then used to generate values.",
                    "sid": 611,
                    "ssid": 611,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any patterns that produce values that are in the negative seed set are discarded.",
                    "sid": 612,
                    "ssid": 612,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining patterns are fed to a classifier, which is trained to identify good patterns.",
                    "sid": 613,
                    "ssid": 613,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This system avoids the problem of feature explosion.",
                    "sid": 614,
                    "ssid": 614,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since it trains a classifier to identify good patterns, it does not need to compare each sentence with hundreds of generated patterns.",
                    "sid": 615,
                    "ssid": 615,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is different from other approaches which aim to train a classifier with interleaving text ([4, 10]) in that it first filters the interleaving text to make sure it does not generate known negative values.",
                    "sid": 616,
                    "ssid": 616,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Turney [39] describes a novel approach to relation extraction.",
                    "sid": 617,
                    "ssid": 617,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system, at heart, operates like this: given two pairs of entities and a document set, the system discovers all of the intervening text between the pairs in the documents.",
                    "sid": 618,
                    "ssid": 618,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system finds the pattern that is shared the most between them.",
                    "sid": 619,
                    "ssid": 619,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The idea is that what is important is what common relation they share.",
                    "sid": 620,
                    "ssid": 620,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system answers analogy problems like those on the SAT.",
                    "sid": 621,
                    "ssid": 621,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The approach is novel because it takes the opposite approach to what is commonly taken.",
                    "sid": 622,
                    "ssid": 622,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Instead of looking for a pattern that will extract a value from a sentence, it compares the patterns generated by two values.",
                    "sid": 623,
                    "ssid": 623,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In other words, the system asks the question \u201cwhat is the relationship between the relationship of these values?\u201d For small domains (such as multiple choice analogy problems), this approach has a lot of merit.",
                    "sid": 624,
                    "ssid": 624,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many questions could be formulated in this way.",
                    "sid": 625,
                    "ssid": 625,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance \u201cIs Paris the capital of France?\u201d could be formulated as \u201cDoes Paris have the same relation to France as Berlin has to Germany\u2019 ?\u201d.",
                    "sid": 626,
                    "ssid": 626,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pa pe r Tr ai ni ng M et ho d De pt h of Pa rsi ng M ac hi ne Le ar ni ng Te ch ni qu e Fu nd el et al. [1 7] Ha nd Wr itt en De ep Ex ac t M at chi ng Da ras eli a et al. [1 1] Ha nd Wr itt en De ep Ex ac t M at chi ng Hu ff m an [2 3] Su pe rvi se d De ep Ge ne ral iza tio n Ca liff an d M oo ne y [6] Su pe rvi se d No ne Ge ne ral iza tio n So de rla nd [3 5] Su pe rvi se d No ne Ge ne ral iza tio n Bu ne sc u an d M oo ne y [4] Su pe rvi se d De ep Su pp ort Ve ct or M ac hi ne Bu ne sc u an d M oo ne y [5] Su pe rvi se d No ne Su pp ort Ve ct or M ac hi ne C ul ott a an d So re ns en [1 0] Su pe rvi se d De ep Su pp ort Ve ct or M ac hi ne Jie an d Mi n [2 4] Su pe rvi se d No un ph ras e Ch un kin g Su pp ort Ve ct or M ac hi ne Li u et al. [2 6] Su pe rvi se d De ep Su pp ort Ve ct or M ac hi ne C ul ott a et al. [8] Su pe rvi se d No ne Co nd iti on al Ra nd o m Fi eld Xi ao et al. [4 1] Su pe rvi se d De ep M axi m u m En tro py Ril off [3 3] Se mi su pe rvi se d Pa rt of Sp ee ch Ba ye sia n Co m bi na tio n Bri n [3] Se mi su pe rvi se d No ne Ex ac t M at chi ng Ag ich tei n an d Gr av an o [1] Se mi su pe rvi se d Na m ed Entity Re co gn iti on Inf or m ati on Retrieval and Ba ye sia n Co m bi na tio n C ul ott a an d M cC all u m [9] Se mi su pe rvi se d No ne Co nd iti on al Ra nd o m Fi eld M an n an d Ya ro ws ky [2 8] Se mi su pe rvi se d No ne Ex ac t, Na ive Ba ye s, an d Con dit io na l Ra nd o m Fi eld St ev en so n an d Gr ee nw oo d [3 6] Se mi su pe rvi se d No ne Inf or m ati on Re tri ev al Pe nn ac chi ott i an d Pa nt el [3 2] Se mi su pe rvi se d Pa rt of Sp ee ch Ba ye sia n Co m bi na tio n Su ch an ek et al. [3 7] Se mi su pe rvi se d De epk Ne ar est Ne ig hb or an d Sup po rt Ve ct or M ac hi ne Tu rn ey [3 9] Se mi su pe rvi se d No nek Ne ar est Ne ig hb or Et zio ni et al. [1 5] Un su pe rvi se d Sh all ow Ex ac t M at chi ng Ha se ga wa et al. [2 1] Un su pe rvi se d Sh all ow Cl us ter in g Figure 2.4: The prior works broken down according to the three axes.",
                    "sid": 627,
                    "ssid": 627,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chapter 3 Approach This chapter deals with the problem of extracting text.",
                    "sid": 628,
                    "ssid": 628,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The various decisions that have to be made will be explained.",
                    "sid": 629,
                    "ssid": 629,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reasoning behind each decision will be detailed.",
                    "sid": 630,
                    "ssid": 630,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And a list of advantages and disadvantages will be made.",
                    "sid": 631,
                    "ssid": 631,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following are system requirements interpreted from practical usage requirements and the limitations of the systems presented in Chapter 2.",
                    "sid": 632,
                    "ssid": 632,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1. Many specific kinds of relations need to be extracted.",
                    "sid": 633,
                    "ssid": 633,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relations could be unary, binary, or nary..",
                    "sid": 634,
                    "ssid": 634,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The extraction framework cannot be limited to the order of the relation.",
                    "sid": 635,
                    "ssid": 635,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 636,
                    "ssid": 636,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relations are often unbounded.",
                    "sid": 637,
                    "ssid": 637,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that the size of the set of facts corresponding to that.",
                    "sid": 638,
                    "ssid": 638,
                    "kind_of_tag": "s"
                },
                {
                    "text": "relation is unknown by anyone.",
                    "sid": 639,
                    "ssid": 639,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 640,
                    "ssid": 640,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relations will be used as specific fields in a database.",
                    "sid": 641,
                    "ssid": 641,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are therefore somewhat well-defined..",
                    "sid": 642,
                    "ssid": 642,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They must match an actual concept that is trying to be captured.",
                    "sid": 643,
                    "ssid": 643,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision is more important than recall since the extracted data will be inserted into a database to be used by other systems as known facts.",
                    "sid": 644,
                    "ssid": 644,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.",
                    "sid": 645,
                    "ssid": 645,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relations are not specified ahead of time.",
                    "sid": 646,
                    "ssid": 646,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They need to be able to be added and modified by end.",
                    "sid": 647,
                    "ssid": 647,
                    "kind_of_tag": "s"
                },
                {
                    "text": "users.",
                    "sid": 648,
                    "ssid": 648,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This implies that the human effort required to define a new relation is minimized.",
                    "sid": 649,
                    "ssid": 649,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.",
                    "sid": 650,
                    "ssid": 650,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The domains of the relations (types of entities) are not specified ahead of time.",
                    "sid": 651,
                    "ssid": 651,
                    "kind_of_tag": "s"
                },
                {
                    "text": "New entity types may. be added later.",
                    "sid": 652,
                    "ssid": 652,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No domain-specific knowledge can be defined in the algorithm.",
                    "sid": 653,
                    "ssid": 653,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.",
                    "sid": 654,
                    "ssid": 654,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Large, untagged sets of documents are available..",
                    "sid": 655,
                    "ssid": 655,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.",
                    "sid": 656,
                    "ssid": 656,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of classifier should be unimportant to the functioning of the framework.",
                    "sid": 657,
                    "ssid": 657,
                    "kind_of_tag": "s"
                },
                {
                    "text": "New classification.",
                    "sid": 658,
                    "ssid": 658,
                    "kind_of_tag": "s"
                },
                {
                    "text": "techniques should be used as they become available.",
                    "sid": 659,
                    "ssid": 659,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research is going on into new data mining techniques at a fast rate.",
                    "sid": 660,
                    "ssid": 660,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system should be able to incorporate the new research.",
                    "sid": 661,
                    "ssid": 661,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8.",
                    "sid": 662,
                    "ssid": 662,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The type and level of parsing should not factor into the framework.",
                    "sid": 663,
                    "ssid": 663,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They should be considered.",
                    "sid": 664,
                    "ssid": 664,
                    "kind_of_tag": "s"
                },
                {
                    "text": "implementation details.",
                    "sid": 665,
                    "ssid": 665,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A review of the literature indicates contentious ideas involving the benefits of parsing [10, 24].",
                    "sid": 666,
                    "ssid": 666,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The best practices in parsing have yet to be determined and are likely to change.",
                    "sid": 667,
                    "ssid": 667,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 The Three Major Axes.",
                    "sid": 668,
                    "ssid": 668,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of the three axes described in Section 2 is a major decision point.",
                    "sid": 669,
                    "ssid": 669,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These decisions must be made regardless of the problem formulation.",
                    "sid": 670,
                    "ssid": 670,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Type of training will be analyzed first.",
                    "sid": 671,
                    "ssid": 671,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Handwritten techniques allow for very well-defined domains 2.5.1.",
                    "sid": 672,
                    "ssid": 672,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any level of detail is available.",
                    "sid": 673,
                    "ssid": 673,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It depends only on the amount of effort and time available.",
                    "sid": 674,
                    "ssid": 674,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Handwritten techniques work well for untagged documents, since they do not require a statistical training stage.",
                    "sid": 675,
                    "ssid": 675,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Handwritten methods, however, are largely disused in more recent works.",
                    "sid": 676,
                    "ssid": 676,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This could be due to the fact that they are extremely time consuming.",
                    "sid": 677,
                    "ssid": 677,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They do not extend well to new domains.",
                    "sid": 678,
                    "ssid": 678,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Daraselia et al. [11] builds a large, handwritten ontology.",
                    "sid": 679,
                    "ssid": 679,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This case is exceptional, however, since the perceived value of extracting very high-quality information exceeds the cost of generating the ontology.",
                    "sid": 680,
                    "ssid": 680,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The domain of the ontology is very large.",
                    "sid": 681,
                    "ssid": 681,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, handwritten methods do not meet the requirements enumerated above.",
                    "sid": 682,
                    "ssid": 682,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Handwritten methods do not minimize the amount of effort required to add new relations.",
                    "sid": 683,
                    "ssid": 683,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They also require the domain to be known ahead of time.",
                    "sid": 684,
                    "ssid": 684,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised techniques have achieved very high Precision in the literature.",
                    "sid": 685,
                    "ssid": 685,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is their strong point.",
                    "sid": 686,
                    "ssid": 686,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They allow for relations to be well-defined.",
                    "sid": 687,
                    "ssid": 687,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They can take into account as much subtlety of meaning as can be encoded in the annotations of the documents.",
                    "sid": 688,
                    "ssid": 688,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised methods, by definition, require much human input, usually in the form of hand-tagged text.",
                    "sid": 689,
                    "ssid": 689,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Either the domain of the relations must be known at the outset of training, or the text must be tagged anew for each domain.",
                    "sid": 690,
                    "ssid": 690,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This, too, does not meet the system\u2019s requirements.",
                    "sid": 691,
                    "ssid": 691,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tagging of documents requires experts in the domain.",
                    "sid": 692,
                    "ssid": 692,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those experts must also be trained to tag the documents consistently\u2014which requires a different kind of expertise.",
                    "sid": 693,
                    "ssid": 693,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Supervised methods are therefore ruled out because they require an excess of human input.",
                    "sid": 694,
                    "ssid": 694,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unsupervised methods do not require the human input of handwritten and supervised methods.",
                    "sid": 695,
                    "ssid": 695,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They can adapt to new domains easily.",
                    "sid": 696,
                    "ssid": 696,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, unsupervised methods cannot be relied on to create categories of relations that correspond to a specific category in a database.",
                    "sid": 697,
                    "ssid": 697,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This works for new domain discovery, but not for extracting a specific kind of information, such as in response to a query from the user.",
                    "sid": 698,
                    "ssid": 698,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unsupervised methods will not meet the requirements.",
                    "sid": 699,
                    "ssid": 699,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semi-supervised methods strike a compromise between supervised and unsupervised methods.",
                    "sid": 700,
                    "ssid": 700,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They require domain knowledge.",
                    "sid": 701,
                    "ssid": 701,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the required amount and precision of the domain knowledge is very low.",
                    "sid": 702,
                    "ssid": 702,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Often the required human input is trivial.",
                    "sid": 703,
                    "ssid": 703,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Semi-supervised approaches rely on labeled examples and a large set of unlabeled points [14].",
                    "sid": 704,
                    "ssid": 704,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The examples are very natural for humans to provide and large document sets are free on the Internet.",
                    "sid": 705,
                    "ssid": 705,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They allow users to tell the system \u201cgive me more facts like these\u201d.",
                    "sid": 706,
                    "ssid": 706,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By providing examples, the user is also defining a well-understood concept.",
                    "sid": 707,
                    "ssid": 707,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The facts extracted can thus be placed into a database.",
                    "sid": 708,
                    "ssid": 708,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because the human input is minimal, adding new relations is trivial.",
                    "sid": 709,
                    "ssid": 709,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A semi-supervised technique has been chosen as the best way to achieve the stated goals for the system.",
                    "sid": 710,
                    "ssid": 710,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The next decision is level of parsing.",
                    "sid": 711,
                    "ssid": 711,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As stated in section 1.3, parsing can range from deep parsing (full syntax or dependency tree) to part of speech (POS) tagging to no parsing at all.",
                    "sid": 712,
                    "ssid": 712,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are disadvantages to deep parsing.",
                    "sid": 713,
                    "ssid": 713,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Besides the cost of parsing, there is a dependence on the parser.",
                    "sid": 714,
                    "ssid": 714,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Every parser is different, with differing strengths and advantages.",
                    "sid": 715,
                    "ssid": 715,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The parser used is usually trained from a corpus.",
                    "sid": 716,
                    "ssid": 716,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The most common corpus is the Penn TreeBank [29], that has a large set of sentences with their corresponding parse trees.",
                    "sid": 717,
                    "ssid": 717,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The training parse trees were hand-generated by expert grammarians.",
                    "sid": 718,
                    "ssid": 718,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The information gained by deep parsing seems to subsume all of the other levels of parsing.",
                    "sid": 719,
                    "ssid": 719,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It contains information that is highly correlated to Part Of Speech tagging and noun phrase chunking [18].",
                    "sid": 720,
                    "ssid": 720,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The question therefore is one of cost versus benefit.",
                    "sid": 721,
                    "ssid": 721,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is assumed in Jie and Min [24] that by throwing more data at the problem, deep parsing is unnecessary.",
                    "sid": 722,
                    "ssid": 722,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, as the number of training points goes to infinity, the difference in accuracy between a deep-parse solution and a no-parse solution goes to 0.",
                    "sid": 723,
                    "ssid": 723,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That being said, there is not infinite data.",
                    "sid": 724,
                    "ssid": 724,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, at the low number of points (around a few thousand), there is in fact a large benefit from having a fully parsed solution.",
                    "sid": 725,
                    "ssid": 725,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parsing is a relatively expensive operation.",
                    "sid": 726,
                    "ssid": 726,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Depending on the parser, a sentence could take up to 3 seconds to parse.",
                    "sid": 727,
                    "ssid": 727,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is not trivial, especially when considering the sheer number of sentences needed for statistical classification methods.",
                    "sid": 728,
                    "ssid": 728,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, there are several mitigating factors: 1.",
                    "sid": 729,
                    "ssid": 729,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Parallel.",
                    "sid": 730,
                    "ssid": 730,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each sentence can be parsed independently of the others.",
                    "sid": 731,
                    "ssid": 731,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows for massive parallelization of the parsing operation.",
                    "sid": 732,
                    "ssid": 732,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "cacheable. ",
            "number": "2",
            "sents": [
                {
                    "text": "For a deterministic parser, the parse for a sentence will always be the same.",
                    "sid": 733,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This means that a given sentence will only need to be parsed once\u2014no matter how many classifiers it passes through.",
                    "sid": 734,
                    "ssid": 2,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "easily filtered. ",
            "number": "3",
            "sents": [
                {
                    "text": "A simple dynamic programming optimization can be performed.",
                    "sid": 735,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An O(n) scan of the sentence can determine if the sentence is worth parsing.",
                    "sid": 736,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If no value for the particular query one is looking for can be extracted from the sentence, it is not worth parsing.",
                    "sid": 737,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given these three properties of the system, deep parsing is the best option.",
                    "sid": 738,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Culotta and Sorensen [10] and Bunescu and Mooney [4] indicate that the dependency tree is the most fruitful form of parsing.",
                    "sid": 739,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framework of the current system does not rely on the level of parsing.",
                    "sid": 740,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system is defined in a general sense.",
                    "sid": 741,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is perhaps not necessary to perform any parsing at all.",
                    "sid": 742,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The evaluation of the usefulness of parsing is left as a subject of future research.",
                    "sid": 743,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The final decision that must be made is the type of classifier used.",
                    "sid": 744,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since one of the stated requirements is that the system does not depend on any one specific kind of classifier, it is necessary to model the problem in a way that can be classified by a large set of classifiers.",
                    "sid": 745,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Icelandic Library will serve as a metaphor for presenting a clear description of the problem.",
                    "sid": 746,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob is in the Icelandic Library, but he is alone.",
                    "sid": 747,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He is given a sheet of paper.",
                    "sid": 748,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the left side of the paper, in a column, one word per line, are many Icelandic words.",
                    "sid": 749,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The person does not understand them.",
                    "sid": 750,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the right side, there is another list of words, one word per line, in Icelandic.",
                    "sid": 751,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The words appear as no more than a cryptic sequence of characters.",
                    "sid": 752,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are lines connecting each of the first five words on the left to words on the right.",
                    "sid": 753,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No pattern is discernible.",
                    "sid": 754,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One line leaves from every word on the left.",
                    "sid": 755,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some words on the right have two lines connecting to them.",
                    "sid": 756,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some words on the left have two lines connecting to them.",
                    "sid": 757,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The lines are examples that are to be used in the task.",
                    "sid": 758,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "See Figure 3.1.",
                    "sid": 759,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task is to draw lines from the remaining words on the left to the appropriate word on the right, based on the same relationship given in the lines already on the page.",
                    "sid": 760,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Any and all of the books in the library can be used.",
                    "sid": 761,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper proposes that Bob proceeds as follows.",
                    "sid": 762,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bob picks a pair of words connected by lines.",
                    "sid": 763,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He searches through all of the books in the library, looking for sentences that contain that pair of words.",
                    "sid": 764,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He notes the shortest path on the dependency tree of the sentence in a notebook.",
                    "sid": 765,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He does this for each of the example pairs.",
                    "sid": 766,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He then searches through the books again, this time looking for sentences that match those patterns and who also have pairs of words from the sheet of paper.",
                    "sid": 767,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "He notes which patterns matched each pair.",
                    "sid": 768,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This information can then be used to determine which lines to draw.",
                    "sid": 769,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How this information is used makes the current research novel.",
                    "sid": 770,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This model is very similar to that used in the semi-supervised methods in [1, 3, 28, 31\u201333, 36, 37].",
                    "sid": 771,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, it differs in that the system does not look at one small portion of text at a time.",
                    "sid": 772,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It attempts to model the information contained in the entire document set.",
                    "sid": 773,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current research proposes that a feature vector be constructed for each candidate fact to be extracted.",
                    "sid": 774,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each feature in the feature vector will represent a single pattern matching at least one sentence from the document set.",
                    "sid": 775,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each pattern represents a syntactic-lexical feature of the entities.",
                    "sid": 776,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The classifier is used to determine a relationship between those syntactic-lexical features and semantic meaning.",
                    "sid": 777,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system will use the standard bootstrapping method to iteratively build a set of values from a small initial set of examples.",
                    "sid": 778,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The approach is described more rigorously in Chapter 4.",
                    "sid": 779,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3.1: A query task definition given to Bob in the Icelandic library.",
                    "sid": 780,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task is to connect the remaining words on the left with the words on the right in the same way as the examples.",
                    "sid": 781,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Comments on the Approach.",
                    "sid": 782,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2.1 Choice of classifier The choice of classifier ranges over many possibilities.",
                    "sid": 783,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this report, Naive Bayes and Support Vector machines are evaluated.",
                    "sid": 784,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, most classifiers can be trained on vectors of numeric features.",
                    "sid": 785,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The framework, therefore, remains general.",
                    "sid": 786,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Bayesian approach has some advantages (despite requiring some very strong assumptions).",
                    "sid": 787,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, Bayesian prediction does not require 100% knowledge.",
                    "sid": 788,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bayesian prediction works on estimates of the various parameters in Bayes\u2019 formula.",
                    "sid": 789,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These estimates can be made with incomplete knowledge (see section 5.3).",
                    "sid": 790,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second reason the Bayesian approach was chosen was that it accumulates.",
                    "sid": 791,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Adding a new training data point is a constant-time operation, as is reclassifying a point after a new training point is added.",
                    "sid": 792,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is quite simple to formulate a Bayesian classifier that operates over long periods of time.",
                    "sid": 793,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As more documents are read containing the information to extract, the estimate of the probability of class membership becomes more accurate.",
                    "sid": 794,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is important in long-running databases, and in cases where the relation can change over time.",
                    "sid": 795,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Support Vector Machines have a high tolerance for noise and show strong resilience when facing complex feature vectors.",
                    "sid": 796,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Support Vector Machines are expected to perform very well [38].",
                    "sid": 797,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3.2: The result of Bob completing the task.",
                    "sid": 798,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dotted lines are those drawn by Bob.",
                    "sid": 799,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The three principle decisions have been made: Semi-supervised learning using dependency graph and a statistical classifier (Naive Bayes and Support Vector Machine).",
                    "sid": 800,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2.2 Use of domain knowledge No domain knowledge is needed by the system besides what is given in the query.",
                    "sid": 801,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The possible entities in the relationships are those listed on the page (in the metaphor).",
                    "sid": 802,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is in contrast to most other research which use a Named Entity Recognition system that is previously trained with domain knowledge, a static list of possible entities (in the case of protein-protein interaction papers), or no system at all to limit the types of entities returned.",
                    "sid": 803,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The advantage of specifying the domain completely (as in the current system) are many.",
                    "sid": 804,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first advantage is that the query limits the search space to a large degree\u2014leading to more refined results than those returned by systems that do not limit the space.",
                    "sid": 805,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The second advantage is that the domains are easily specified and are usually specified already in database form.",
                    "sid": 806,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many organizations already have a database of the kinds of information that is important to them.",
                    "sid": 807,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These databases can be reused in the queries.",
                    "sid": 808,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, if the information is to be added to a database anyway, the lists of entities in the domain probably already exist.",
                    "sid": 809,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The drawback to the system is that it must be specified completely by a human.",
                    "sid": 810,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Named Entity Recognition systems in use today primarily use machine learning to identify entities that were not conceived of by a human.",
                    "sid": 811,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, those machine learning techniques require much more human input than a complete specification of the domain.",
                    "sid": 812,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current approach is a balance between the human input and expressive power.",
                    "sid": 813,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2.3 Linguistic pitfalls Many linguistic pitfalls exist, including ambiguous names and the idea of negation.",
                    "sid": 814,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Ambiguous names exist\u2014for instance \u201cParis\u201d names a city in France and a city in Texas.",
                    "sid": 815,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This phenomenon is not resolved in the current work.",
                    "sid": 816,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is assumed that the structure of the query will, on statistical average, eliminate the ambiguity.",
                    "sid": 817,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, if one wants to identify the capital cities of countries, it is unlikely that a sentence talking about Paris, Texas will also talk about a country in the same way a sentence will talk about Paris, France.",
                    "sid": 818,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Negation is also not addressed.",
                    "sid": 819,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Negation is a problem because a sentence that says \u201cParis is the capital of France\u201d differs from a sentence that says \u201c Paris is not the capital of France\u201d by one word.",
                    "sid": 820,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "But that one word makes the whole sentence mean exactly the opposite of what one would think it would mean based on similarity of the sentences.",
                    "sid": 821,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This problem is usually dealt with either by throwing out negative sentences [17] or by including negation as a feature in the patterns [4].",
                    "sid": 822,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reason for neglecting negation is that it was desired to minimize the complexity of the model.",
                    "sid": 823,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Evaluating the importance of dealing with the negation problem is outside of the scope of the current research.",
                    "sid": 824,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Pronouns and anaphoric phrases are not attempted to be resolved.",
                    "sid": 825,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The low accuracy of the current coreference resolution solutions does not indicate that they would add value to the system.",
                    "sid": 826,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "No context is taken into account.",
                    "sid": 827,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each pattern matches individual sentences, with no accounting for ideas that surround the sentence in the text.",
                    "sid": 828,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is hypothesized that this identifying context is not strictly necessary, though simple models of context might make for fruitful future work.",
                    "sid": 829,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chapter 4 Formal Methods This chapter presents a formalized model of the problem.",
                    "sid": 830,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is this model that will form the framework for actually developing a solution.",
                    "sid": 831,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The definitions in this section will be referred to in later sections.",
                    "sid": 832,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This section therefore defines a flexible data structure that will be used for the known information and for the unknown information that is to be extracted.",
                    "sid": 833,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A tuple is defined as an ordered series of strings of characters.",
                    "sid": 834,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of character set is arbitrary to the algorithm and should be chosen to accord with the data being analyzed.",
                    "sid": 835,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tk \u2261 tk1 , tk2 , \u00b7 \u00b7 \u00b7 , tkn (4.1) Tuples represent relational data.",
                    "sid": 836,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, the strings in the tuple are in some relationship to each other by the very act of being together in a tuple.",
                    "sid": 837,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The relationship might not be what is being looked for, or it could be exactly what is being looked for.",
                    "sid": 838,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The strings that make up the tuples each themselves represent the name of something.",
                    "sid": 839,
                    "ssid": 105,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Resolving exactly what each name refers to is its own research project.",
                    "sid": 840,
                    "ssid": 106,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The problem will not be addressed here.",
                    "sid": 841,
                    "ssid": 107,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the system treats the string \u201cParis\u201d which in one sentence refers to the capital of France as equivalent to the string \u201cParis\u201d that refers to the city in Texas.",
                    "sid": 842,
                    "ssid": 108,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are treated equivalently because there is no simple way to disambiguate their meaning.",
                    "sid": 843,
                    "ssid": 109,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is hypothesized\u2014and later confirmed (see section 5)\u2014that on average, the system performs well even under that kind of ambiguity.",
                    "sid": 844,
                    "ssid": 110,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It must be stressed that tuples can contain ambiguity.",
                    "sid": 845,
                    "ssid": 111,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The following is an example: 1.",
                    "sid": 846,
                    "ssid": 112,
                    "kind_of_tag": "s"
                },
                {
                    "text": "President Bush flew from Paris to his ranch in Texas..",
                    "sid": 847,
                    "ssid": 113,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 848,
                    "ssid": 114,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A flash flood struck the city of Paris, Texas early Friday morning.",
                    "sid": 849,
                    "ssid": 115,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tuple P aris, T exas can be extracted from each of these sentences.",
                    "sid": 850,
                    "ssid": 116,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though the meaning of each is different, the system has no privilege to such knowledge.",
                    "sid": 851,
                    "ssid": 117,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are considered the same tuple.",
                    "sid": 852,
                    "ssid": 118,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The basic unit of data is now defined.",
                    "sid": 853,
                    "ssid": 119,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The tuple will be the input to queries.",
                    "sid": 854,
                    "ssid": 120,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It will also be the output of queries.",
                    "sid": 855,
                    "ssid": 121,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A notion of classes is defined to help focus the search.",
                    "sid": 856,
                    "ssid": 122,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classes refer to the type of entity a string names.",
                    "sid": 857,
                    "ssid": 123,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classes are defined in a domain- and implementation-dependant way.",
                    "sid": 858,
                    "ssid": 124,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If one wants to define a domain of geographic entities, one might classify strings into Country, City, Mountain, etc. Every string can belong to multiple classes.",
                    "sid": 859,
                    "ssid": 125,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the string \u201cFrance\u201d refers to the country or to many cities by the same name around the world.",
                    "sid": 860,
                    "ssid": 126,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It would therefore be a member of the class Country and the class City.",
                    "sid": 861,
                    "ssid": 127,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can refer to the set of classes of a string str as classstr . To formalize classes more concretely, we can define an inclusion function that is a predicate indicating whether a string belongs to the class.",
                    "sid": 862,
                    "ssid": 128,
                    "kind_of_tag": "s"
                },
                {
                    "text": "country(str) \u2261 (true if str belongs to the class Country, f alse otherwise.",
                    "sid": 863,
                    "ssid": 129,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(4.2) Similarly, one can define inclusion functions for Continent, City, River, etc. The inclusion functions can be implemented simply using a database lookup.",
                    "sid": 864,
                    "ssid": 130,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Large databases of geographic names are available publicly.",
                    "sid": 865,
                    "ssid": 131,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An inclusion function can return true if a string is contained in the database of countries.",
                    "sid": 866,
                    "ssid": 132,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An alternative implementation is to use a regular expression.",
                    "sid": 867,
                    "ssid": 133,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As with all concrete implementations, this implementation will inevitably miss some names\u2014particularly colloquial names.",
                    "sid": 868,
                    "ssid": 134,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system relies again on the law of averages to mitigate the problem.",
                    "sid": 869,
                    "ssid": 135,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One must take care to define the classes with knowledge of the kinds of information one is likely to find in the documents.",
                    "sid": 870,
                    "ssid": 136,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, one could limit the definition of Continent to \u201cNorth America\u201d, \u201cSouth America\u201d, \u201cEurope\u201d, \u201cAsia\u201d, \u201cAfrica\u201d, \u201cAustralia\u201d, and \u201cAntarctica\u201d.",
                    "sid": 871,
                    "ssid": 137,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the documents one is analyzing could use a different model of the continents.",
                    "sid": 872,
                    "ssid": 138,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many people do not differentiate North and South America as two separate continents, and so the continent of America is disregarded.",
                    "sid": 873,
                    "ssid": 139,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similar troubles occur with names such as \u201cEurasia\u201d or \u201cOceania\u201d.",
                    "sid": 874,
                    "ssid": 140,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to allow multiple names for the same entity, an optional canonicalization function can be defined.",
                    "sid": 875,
                    "ssid": 141,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The canonicalization function takes a string and returns the canonical name for the entity the input string names.",
                    "sid": 876,
                    "ssid": 142,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Example: CanonicalizeCountry(str) \u2261 \uf8f1F rance if str == \u201cFrance\u201d, \uf8f4\uf8f4F rance if str == \u201cRepublic of France\u201d, F rance if str == \u201cRepublique Francaise\u201d, (4.3) \uf8f4 \uf8f3etc . . .",
                    "sid": 877,
                    "ssid": 143,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, one can define canonicalization functions for Continent, City, River, etc. Classes are used to limit the search of a query.",
                    "sid": 878,
                    "ssid": 144,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are far too many possible tuples (all possible pairs of words) to perform calculations on all of them.",
                    "sid": 879,
                    "ssid": 145,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Limiting the query to focus on the kinds of information that is important is a necessary step.",
                    "sid": 880,
                    "ssid": 146,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is also desirable to limit the number of tuples the system looks at.",
                    "sid": 881,
                    "ssid": 147,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even with this limit, there are still far too many tuples to process.",
                    "sid": 882,
                    "ssid": 148,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It becomes important to define a limit on what tuples the system should process.",
                    "sid": 883,
                    "ssid": 149,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Many of the queries that one would perform are the relations between known classes of entities.",
                    "sid": 884,
                    "ssid": 150,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If one would like to know the capital cities of all of the countries, one is only interested in tuples that represent C ity, C ountry pairs.",
                    "sid": 885,
                    "ssid": 151,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When the system is queried for the cities near bodies of water, one is interested in tuples that represent C ity, BodyOf W ater pairs.",
                    "sid": 886,
                    "ssid": 152,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Types define the range of interest.",
                    "sid": 887,
                    "ssid": 153,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A type is an ordered series of classes.",
                    "sid": 888,
                    "ssid": 154,
                    "kind_of_tag": "s"
                },
                {
                    "text": "T \u2261 c1 , c2 , . . .",
                    "sid": 889,
                    "ssid": 155,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", cn (4.4) A tuple belongs to a type if each string in the tuple belongs to the corresponding class in the type.",
                    "sid": 890,
                    "ssid": 156,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the tuple F rance, Europe belongs to the type C ountry, C ontinent . Because of the way classes are defined above, the same tuple belongs to the type C ity, C ontinent (it is noted that \u201cFrance\u201d is also the name of many cities).",
                    "sid": 891,
                    "ssid": 157,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One can refer to the set of tuples that belong to a type T as {T }.",
                    "sid": 892,
                    "ssid": 158,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Types define the kinds of entities one is interested in.",
                    "sid": 893,
                    "ssid": 159,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They inform the system of the classes of entities that could possibly fulfill the query.",
                    "sid": 894,
                    "ssid": 160,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, not all possible tuples of a given type represent data that one would like to extract.",
                    "sid": 895,
                    "ssid": 161,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not all C ity, C ountry pairs represent capital cities.",
                    "sid": 896,
                    "ssid": 162,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It becomes necessary therefore to define even more precisely what relationship one is looking for.",
                    "sid": 897,
                    "ssid": 163,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They all lend themselves to concrete implementations.",
                    "sid": 898,
                    "ssid": 164,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Even ambiguity was resolved by considering equivalent sequences of characters as equal.",
                    "sid": 899,
                    "ssid": 165,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, however, a way of describing human concepts must be formalized.",
                    "sid": 900,
                    "ssid": 166,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most text is written by a person to communicate with another human.",
                    "sid": 901,
                    "ssid": 167,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The concepts they use are fuzzy and imprecise.",
                    "sid": 902,
                    "ssid": 168,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore important to define a way to allow for that imprecision.",
                    "sid": 903,
                    "ssid": 169,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This definition must allow for the widest possible variety of concepts.",
                    "sid": 904,
                    "ssid": 170,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As in most bootstrapping methods, the system represents those human concepts as a set of examples.",
                    "sid": 905,
                    "ssid": 171,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The set of capital cities is represented by the set of C ity, C ountry pairs where the first element is the capital of the second element.",
                    "sid": 906,
                    "ssid": 172,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The set can be complete, if all of the members of the set are known, or incomplete if only some are given.",
                    "sid": 907,
                    "ssid": 173,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Relations (the set of examples) are how one defines what a query should search for.",
                    "sid": 908,
                    "ssid": 174,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are also the result of the query.",
                    "sid": 909,
                    "ssid": 175,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system tries to approximate a complete set as best it can from the documents available to it.",
                    "sid": 910,
                    "ssid": 176,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A relation R is a set of tuples of a given type that define the same relationship between the elements of the tuple.",
                    "sid": 911,
                    "ssid": 177,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A tuple can belong to more than one relation.",
                    "sid": 912,
                    "ssid": 178,
                    "kind_of_tag": "s"
                },
                {
                    "text": "M adrid, Spain belongs to the relation one might call \u201cCapital Cities\u201d and also to the relation \u201cCities in countries\u201d.",
                    "sid": 913,
                    "ssid": 179,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Shanghai, C hina would belong to the latter and not the former.",
                    "sid": 914,
                    "ssid": 180,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The letter R will be used to refer to the complete set of tuples the user is querying for, whether they are known or not.",
                    "sid": 915,
                    "ssid": 181,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The letter K is used for the subset of R that is known.",
                    "sid": 916,
                    "ssid": 182,
                    "kind_of_tag": "s"
                },
                {
                    "text": "English and many other language break text up into sentences.",
                    "sid": 917,
                    "ssid": 183,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system will do the same, though it does not have to represent them as a simple series of words.",
                    "sid": 918,
                    "ssid": 184,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Sentences need to be represented in a way that makes it convenient to search them.",
                    "sid": 919,
                    "ssid": 185,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The specific implementation of sentences will be defined later, since there are many possible ways it can be done.",
                    "sid": 920,
                    "ssid": 186,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is possible, however, to define certain properties of sentences that do not depend on the implementation.",
                    "sid": 921,
                    "ssid": 187,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A sentence is a representation of a natural language sentence made to be matched by a pattern.",
                    "sid": 922,
                    "ssid": 188,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A tuple tk is in a sentence si if all strings in the tuple are in the sentence.",
                    "sid": 923,
                    "ssid": 189,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tk \u2208 si \u2194 \u2200n(tkn \u2208 si ) (4.5) Sentences are the text the system will extract information from.",
                    "sid": 924,
                    "ssid": 190,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of course, since there are many of them, it is useful to talk about the collection of sentences.",
                    "sid": 925,
                    "ssid": 191,
                    "kind_of_tag": "s"
                },
                {
                    "text": "C \u2261 {s1 , s2 , \u00b7 \u00b7 \u00b7 , sn } (4.6) Note that information about the sequence of the sentences is not maintained, nor does the system keep track of which sentences come from the same documents.",
                    "sid": 926,
                    "ssid": 192,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All sentences are treated in the same way, though supplementing the current algorithm with that information could prove fruitful in future research.",
                    "sid": 927,
                    "ssid": 193,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Just as a tuple can be in a sentence, a tuple can be in a corpus.",
                    "sid": 928,
                    "ssid": 194,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tk \u2208 C \u2194 \u2203si (si \u2208 C \u2227 tkn \u2208 si ) (4.7) One can express the subset of tuples in a corpus with a superscript, e.g., {T }C means all of the tuples of type T in the corpus C . 4.1.7 Patterns Patterns represent lexical and syntactic features of a sentence.",
                    "sid": 929,
                    "ssid": 195,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are used to match tuples that have a certain grammatical relationship in a sentence.",
                    "sid": 930,
                    "ssid": 196,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Patterns allow the system to search for syntactic features, which will later be correlated with semantic meaning.",
                    "sid": 931,
                    "ssid": 197,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, a pattern could match \u201cCity, Country\u201d, where the bold words are classes and the comma is significant.",
                    "sid": 932,
                    "ssid": 198,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This pattern would match tuples of type C ity, C ountry with only a comma between them.",
                    "sid": 933,
                    "ssid": 199,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns are generated automatically.",
                    "sid": 934,
                    "ssid": 200,
                    "kind_of_tag": "s"
                },
                {
                    "text": "How they are generated and represented will be addressed in Sections 5.1.2 and 5.1.3.",
                    "sid": 935,
                    "ssid": 201,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system defines set of patterns P \u2261 {p1 , p2 , . . .",
                    "sid": 936,
                    "ssid": 202,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", pn }.",
                    "sid": 937,
                    "ssid": 203,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One expresses a matching function m that returns the set of tuples matched by pattern pi in sentence sj . m(pi , sj ) \u2286 {T }C (4.8) m can return many tuples or no tuples at all (the empty set).",
                    "sid": 938,
                    "ssid": 204,
                    "kind_of_tag": "s"
                },
                {
                    "text": "m is constrained to not return a tuple that is not in the sentence.1 More formally: \u2200pi \u2200sj (tk \u2208 m(pi , sj ) \u2194 tk \u2208 sj ) (4.9) If tk \u2208 m(pi , sj ), then one can say that pi matches tk in sj . The system needs to know what tuples a pattern matches over the entire corpus from different sets of tuples.",
                    "sid": 939,
                    "ssid": 205,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, it might be useful to know what tuples from the relation R a particular pattern matches.",
                    "sid": 940,
                    "ssid": 206,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system also needs to know what tuples from the entire type T a pattern matches.",
                    "sid": 941,
                    "ssid": 207,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A match function is defined using a set parameter G as the set over which the matches are accumulated.",
                    "sid": 942,
                    "ssid": 208,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If G is a set of tuples of type T , the system defines a value matchGpi as the set of tuples from G matched by pi in C . This value is the number of times pi matches a tuple from G in the corpus.",
                    "sid": 943,
                    "ssid": 209,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It should be noted that G is a placeholder and could be any named set.",
                    "sid": 944,
                    "ssid": 210,
                    "kind_of_tag": "s"
                },
                {
                    "text": "matchGpi = G \u2229 sj \u2208C m(pi , sj ) (4.10) 4.2 Formal Problem Definition.",
                    "sid": 945,
                    "ssid": 211,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now that the terms have been defined precisely, the problem can be formulated using them: Given corpus C , T , and K \u2286 R, determine whether a given tk \u2208 {T } is also in R, the theoretical \u201ccomplete\u201d set.",
                    "sid": 946,
                    "ssid": 212,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A solution will give a set approximating RC . This is the definition of the problem this paper attempts to solve.",
                    "sid": 947,
                    "ssid": 213,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For evaluation purposes, a relation one can have complete knowledge of (such as the capital cities of countries) will be used.",
                    "sid": 948,
                    "ssid": 214,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in general, one does not have complete knowledge.",
                    "sid": 949,
                    "ssid": 215,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, if one did, there would be no need to use the system.",
                    "sid": 950,
                    "ssid": 216,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is useful to use the case where complete knowledge is at hand to evaluate one\u2019s algorithm.",
                    "sid": 951,
                    "ssid": 217,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If one does not know the right answers, one cannot grade the system.",
                    "sid": 952,
                    "ssid": 218,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 In theory, a pattern can use other information besides information directly stated in the sentence (i.e., context).",
                    "sid": 953,
                    "ssid": 219,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is outside the scope of the current research.",
                    "sid": 954,
                    "ssid": 220,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classify the tuples in {T }C using the classifier.",
                    "sid": 955,
                    "ssid": 221,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those that are classified as in R are added to K . Repeat until no more tuples are added to K . This algorithm is a standard bootstrapping algorithm.",
                    "sid": 956,
                    "ssid": 222,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bootstrapping Bootstrapping refers to a semi-unsupervised technique.",
                    "sid": 957,
                    "ssid": 223,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The bootstrapping process starts with a handful of seed tuples.",
                    "sid": 958,
                    "ssid": 224,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These seed tuples are a subset of the positive set (R).",
                    "sid": 959,
                    "ssid": 225,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They constitute a known set of positive values.",
                    "sid": 960,
                    "ssid": 226,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bootstrapping occurs iteratively.",
                    "sid": 961,
                    "ssid": 227,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Using tuples from the seed set, the system generates patterns from the corpus.",
                    "sid": 962,
                    "ssid": 228,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The matches of those patterns are used as features in a feature vector and trained in a classifier.",
                    "sid": 963,
                    "ssid": 229,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Those tuples that are classified positively are added to the seed set and the process is iterated.",
                    "sid": 964,
                    "ssid": 230,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The process stops when no new tuples are added during an iteration.",
                    "sid": 965,
                    "ssid": 231,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1.",
                    "sid": 966,
                    "ssid": 232,
                    "kind_of_tag": "s"
                },
                {
                    "text": "K \u2032 \u2190 K \u2282 R 2.",
                    "sid": 967,
                    "ssid": 233,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generate patterns P using C and tuples from K \u2032 ..",
                    "sid": 968,
                    "ssid": 234,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 969,
                    "ssid": 235,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Generate feature vectors of positive matches..",
                    "sid": 970,
                    "ssid": 236,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.",
                    "sid": 971,
                    "ssid": 237,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Train classifier using K as class 1, and g randomly selected values from {T }C \u2212 K \u2032 as class 2..",
                    "sid": 972,
                    "ssid": 238,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.",
                    "sid": 973,
                    "ssid": 239,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Apply classifier to {T }C ..",
                    "sid": 974,
                    "ssid": 240,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6.",
                    "sid": 975,
                    "ssid": 241,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Add the tuples classified as class 1 to K \u2032 ..",
                    "sid": 976,
                    "ssid": 242,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7.",
                    "sid": 977,
                    "ssid": 243,
                    "kind_of_tag": "s"
                },
                {
                    "text": "if K \u2032 grew, go to step 2.",
                    "sid": 978,
                    "ssid": 244,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8. else return Either the tuples in K \u2032 can be returned or the patterns in P can be returned.",
                    "sid": 979,
                    "ssid": 245,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the tuples are returned, the system can be considered a query system.",
                    "sid": 980,
                    "ssid": 246,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It accepts a query definition and returns an answer in the form of a set of tuples.",
                    "sid": 981,
                    "ssid": 247,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the patterns are returned from this algorithm, the bootstrapping phase can be considered a training phase.",
                    "sid": 982,
                    "ssid": 248,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The patterns can be used later to extract more tuples from new document sources.",
                    "sid": 983,
                    "ssid": 249,
                    "kind_of_tag": "s"
                },
                {
                    "text": "g can be chosen to tune the algorithm.",
                    "sid": 984,
                    "ssid": 250,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A low value of g will tend to accept more tuples into K \u2032 with each iteration.",
                    "sid": 985,
                    "ssid": 251,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This inevitably will accept more incorrect tuples (lower Precision).",
                    "sid": 986,
                    "ssid": 252,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A higher value will tend to be more conservative leading to a higher Precision but a lower Recall.",
                    "sid": 987,
                    "ssid": 253,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When g = 0, all tuples in {T }C will be added to K \u2032 since no training examples from class 2 were given.",
                    "sid": 988,
                    "ssid": 254,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Chapter 5 Evaluation Part of the purpose of the current research is to create a general model for the problem of Information Extraction used.",
                    "sid": 989,
                    "ssid": 255,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is desirable to perform many different extraction tasks with minimal human effort.",
                    "sid": 990,
                    "ssid": 256,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore important to show here that the algorithm achieves a high level of accuracy on a variety of extraction tasks.",
                    "sid": 991,
                    "ssid": 257,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Consequently, the system was queried for the following relations: which countries are located in which continent and identifying the capital cities of countries.",
                    "sid": 992,
                    "ssid": 258,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The definition of how sentences are represented and consequently how patterns are matched is described here since they are implementation details.",
                    "sid": 993,
                    "ssid": 259,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.1 Level of Parsing.",
                    "sid": 994,
                    "ssid": 260,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of the two most promising levels of parsing, dependency graphs were chosen over word sequences (see Section 3.1).",
                    "sid": 995,
                    "ssid": 261,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dependency graphs capture much more information.",
                    "sid": 996,
                    "ssid": 262,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, a proper parse of a sentence can alleviate the problems of interleaving dependant clauses.",
                    "sid": 997,
                    "ssid": 263,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, in the following sentence, the words interleaving Paris and France are unimportant to the capital city relation.",
                    "sid": 998,
                    "ssid": 264,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Paris, which has some of the best restaurants in the world, is the capital of France.",
                    "sid": 999,
                    "ssid": 265,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a dependency tree, the dependant clause about the quality of restaurants would be a subtree of the node for Paris.",
                    "sid": 1000,
                    "ssid": 266,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The uninteresting subtree can be ignored by the pattern.",
                    "sid": 1001,
                    "ssid": 267,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This alleviates the ordering problem, and allows a clear view of the relationship between words and phrases that are not adjacent.",
                    "sid": 1002,
                    "ssid": 268,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.1.1 Formal dependency tree model A dependency tree is a tree structure with labeled nodes and labeled edges.",
                    "sid": 1003,
                    "ssid": 269,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The label at a node is a word from the sentence.",
                    "sid": 1004,
                    "ssid": 270,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The label at an edge is the grammatical relationship between the two nodes.",
                    "sid": 1005,
                    "ssid": 271,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A node may have 0 or more subtrees.",
                    "sid": 1006,
                    "ssid": 272,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The subtrees are unordered.",
                    "sid": 1007,
                    "ssid": 273,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If a node has no subtrees, it is called a leaf.",
                    "sid": 1008,
                    "ssid": 274,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All nodes but one have exactly one parent.",
                    "sid": 1009,
                    "ssid": 275,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The single node without a parent is called the root node.",
                    "sid": 1010,
                    "ssid": 276,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For more information about parsing dependency trees, see de Marneffe et al. [13].",
                    "sid": 1011,
                    "ssid": 277,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is necessary to define a few conventions: One can refer to nodes with the letter n. The label of a node is labeln . The set of subtrees of node n subtreesn \u2192 edgelabel, subtree . Subtrees of n with a specific edge label are noted subtreesn (label).",
                    "sid": 1012,
                    "ssid": 278,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The root node of s is roots . 5.1.2 Pattern matching Since it has been decided to use the dependency tree of the sentence as its representation.",
                    "sid": 1013,
                    "ssid": 279,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A pattern matching mechanism can therefore be defined.",
                    "sid": 1014,
                    "ssid": 280,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A pattern p is a tree.",
                    "sid": 1015,
                    "ssid": 281,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each node has a matcher and each edge has a label.",
                    "sid": 1016,
                    "ssid": 282,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A matcher is a predicate that takes a word and returns true to represent a match (to be defined shortly).",
                    "sid": 1017,
                    "ssid": 283,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The label at an edge is the grammatical relationship between the two nodes.",
                    "sid": 1018,
                    "ssid": 284,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each node also has an optional return label.",
                    "sid": 1019,
                    "ssid": 285,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the pattern matches a given tree, the word from a node in s that matches a corresponding node in p is given a label.",
                    "sid": 1020,
                    "ssid": 286,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All of these are combined into the final tuple.",
                    "sid": 1021,
                    "ssid": 287,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, a node could have the return label arg1.",
                    "sid": 1022,
                    "ssid": 288,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another could have the return label arg2.",
                    "sid": 1023,
                    "ssid": 289,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It may be that the node with label arg1 matches \u201cParis\u201d and the node with label arg2 matches \u201cFrance\u201d.",
                    "sid": 1024,
                    "ssid": 290,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the entire pattern matches, the pattern will return the tuple P aris, F rance since a tuple is constructed using the arguments in order.",
                    "sid": 1025,
                    "ssid": 291,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If |s| is the number of nodes (number of words) in s, then there are |s| potential matches of a pattern p in s. Each node in s could potentially match p and contribute to the set of tuples returned by m(p, s).",
                    "sid": 1026,
                    "ssid": 292,
                    "kind_of_tag": "s"
                },
                {
                    "text": "m is extended to operate also on individual nodes (m(p, n)).",
                    "sid": 1027,
                    "ssid": 293,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intuitively, a pattern p matches a node n if the root of p matches the label of n and all of the subtrees of rootp match unique subtrees of n. When matching subtrees, both the label of the node and the label of the edge have to match.",
                    "sid": 1028,
                    "ssid": 294,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Matching a pattern to a node is defined recursively and non-deterministically to make the intention more clear.",
                    "sid": 1029,
                    "ssid": 295,
                    "kind_of_tag": "s"
                },
                {
                    "text": "where m ( p , s ) = m ( p , r o o t s ) ( 5 . 1 ) m(p, n) = subtree sp = \u2205 \u2228 matche rrootp (labeln ) \u2227 alltree smatch (subtre esp , subtree sn ) (5.2) a l l t r e e s m a t c h ( j , k ) = \u2203 x \u2208 j , y \u2208 k m ( x , y ) \u2227 a l l t r e e s m a t c h ( j \u2212 x , k \u2212 y ) ( 5 . 3 ) The matcher function stored at each node of the pattern tree has yet to be defined.",
                    "sid": 1030,
                    "ssid": 296,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The matcher function\u2019s role is to encode what kind of match is to be performed.",
                    "sid": 1031,
                    "ssid": 297,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two kinds of matchers are implemented, though more are possible.",
                    "sid": 1032,
                    "ssid": 298,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first type of matcher is the Exact match.",
                    "sid": 1033,
                    "ssid": 299,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The function matches one and only one sequence of characters.",
                    "sid": 1034,
                    "ssid": 300,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, an exact match for the word \u201ccar\u201d does not match the word \u201ccars\u201d.",
                    "sid": 1035,
                    "ssid": 301,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Class inclusion functions can also serve as matcher functions.",
                    "sid": 1036,
                    "ssid": 302,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is done for the nodes in a pattern that return a value to become part of the returned tuple.",
                    "sid": 1037,
                    "ssid": 303,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This ensures that the returned tuples are of the desired type.",
                    "sid": 1038,
                    "ssid": 304,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other matchers can be implemented that use Wordnet hypernym data, wild-card matchers, or regular expression matchers.",
                    "sid": 1039,
                    "ssid": 305,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Integrating these matchers into the system is left to future work.",
                    "sid": 1040,
                    "ssid": 306,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.1.3 Pattern generation A pattern can be generated from a tuple and a sentence with that tuple.",
                    "sid": 1041,
                    "ssid": 307,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The nodes along the shortest path between the strings in the tuple from the dependency tree are extracted.",
                    "sid": 1042,
                    "ssid": 308,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A pattern tree is created in the same form (corresponding nodes and links).",
                    "sid": 1043,
                    "ssid": 309,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each tuple value in the shortest path corresponds to its class inclusion function in the pattern tree.",
                    "sid": 1044,
                    "ssid": 310,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All other strings correspond to exact string matchers.",
                    "sid": 1045,
                    "ssid": 311,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 5.3 shows an example of creating a pattern from a sentence.",
                    "sid": 1046,
                    "ssid": 312,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.2 Evaluation Criteria.",
                    "sid": 1047,
                    "ssid": 313,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The standard Information Retrieval metrics detailed in Section 1.5 are used to evaluate the algorithms.",
                    "sid": 1048,
                    "ssid": 314,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are certain difficulties with evaluating the knowledge contained in documents that are not read and annotated by an expert.",
                    "sid": 1049,
                    "ssid": 315,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is therefore necessary to calculate them using an objective, algorithmic metric.",
                    "sid": 1050,
                    "ssid": 316,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, Recall (equation 1.1) is calculated as follows: |K \u2032 \u2229 R| Recall = |R| (5.4) Figure 5.1: A pattern can match a sentence represented as a dependency tree.",
                    "sid": 1051,
                    "ssid": 317,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All nodes and their labels must match.",
                    "sid": 1052,
                    "ssid": 318,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 5.2: Patterns match only specific patterns.",
                    "sid": 1053,
                    "ssid": 319,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this example, the pattern does not match the root of the dependency tree (its label is not a city) and \u201cBerlin\u201d does not have a subtree.",
                    "sid": 1054,
                    "ssid": 320,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The pattern fails to match.",
                    "sid": 1055,
                    "ssid": 321,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Precision (equation 1.2) is calculated as follows: Precision = |K \u2032 \u2229 R| |K \u2032 | (5.5) Figure 5.3: The stages of generating a pattern from a dependency tree and a tuple.",
                    "sid": 1056,
                    "ssid": 322,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the values \u201cParis\u201d and \u201cFrance\u201d get replaced in the pattern by their class inclusion functions.",
                    "sid": 1057,
                    "ssid": 323,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Recall formulation punishes the algorithm when a tuple in R is not returned by the algorithm because it is not in any sentence in the corpus.",
                    "sid": 1058,
                    "ssid": 324,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This is fair since this algorithm will need to be compared to ground truth (R)\u2014not an unfairly selected subset of it\u2014and a more advanced algorithm which can extract more information (i.e. an algorithm that is not limited to extracting tuples from RC ).",
                    "sid": 1059,
                    "ssid": 325,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In order to value Precision twice as much as Recall (to value a low False Positive rate), \u03b2 = 0.5 in the F-measure (equation 1.3).",
                    "sid": 1060,
                    "ssid": 326,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.3 Naive Bayes Classifier.",
                    "sid": 1061,
                    "ssid": 327,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Naive Bayes Classifier is one of two classifiers used to evaluate the framework.",
                    "sid": 1062,
                    "ssid": 328,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is important to evaluate the framework using two different classifiers.",
                    "sid": 1063,
                    "ssid": 329,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of classifier is left up to the implementor of the final system.",
                    "sid": 1064,
                    "ssid": 330,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two classifiers are tested here to evaluate whether the framework can support different classifiers and that the accuracy of the results is not due solely to the qualities of any one classifier.",
                    "sid": 1065,
                    "ssid": 331,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The specifics of the Naive Bayes Classifier will be derived here.",
                    "sid": 1066,
                    "ssid": 332,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, in order to use Naive Bayes, the system must assume that the patterns match statistically independent features.",
                    "sid": 1067,
                    "ssid": 333,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because of the above assumption, Bayes\u2019 formula holds.",
                    "sid": 1068,
                    "ssid": 334,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P (C |tk \u2208 K \u2032 )P (tk \u2208 K \u2032 ) P (tk \u2208 R|C ) = (5.6) P (C ) and P (tk \u2208/ R|C ) = P ( C | t k \u2208 { T } C \u2212 K \u2032 ) P ( t k \u2208 { T } C \u2212 K \u2032 ) (5.7 ) P ( C ) where C is the corpus.",
                    "sid": 1069,
                    "ssid": 335,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The category of tk (either R or \u2212R) is determined by the one that has the highest probability.",
                    "sid": 1070,
                    "ssid": 336,
                    "kind_of_tag": "s"
                },
                {
                    "text": "inR(tk ) = (true P (tk \u2208 R|C ) > P (tk \u2208/ R|C ) f alse otherwise (5.8) P (tk \u2208 R|C ) >P (tk \u2208/ R|C ) (5.9) C \u2032 C \u2032 P (C |tk \u2208 R)P (tk \u2208 R) > P (C |tk \u2208 {T } P (C ) \u2212 K )P (tk \u2208 {T } P (C ) \u2212 K ) (5.10) P (C |tk \u2208 R)P (tk \u2208 R) >P (C |tk \u2208 {T }C \u2212 K \u2032 )P (tk \u2208 {T }C \u2212 K \u2032 ) (5.11) Because the patterns are independent, one can define the likelihood P (C |tk \u2208 R) therefore as P (C |tk \u2208 R) = P (tk \u2208 match{T }C p1 |tk \u2208 R) \u00d7 P (tk \u2208 match{T }C p2 |tk \u2208 R) . \u00d7 P (tk \u2208 match{T }C pn |tk \u2208 R) P (C |tk \u2208 R) = TI P (tk \u2208 match{T }C pi |tk \u2208 R) (5.12) pi \u2208P And its is noted that where P (tk \u2208 match{T }C pi |tk \u2208 R) \u2248 P (tk \u2208 matchK \u2032 pi ) (5.13) | m a t c h K \u2032 p i | P (tk \u2208 matchK \u2032 pi ) = |K \u2032 | (5.14) Described another way, it is the proportion of tuples in K \u2032 matched by pattern pi . So Similarly, The initial prior is P (C |tk \u2208 R) = TI P (tk \u2208 matchK \u2032 pi ) (5.15) pi \u2208P P (C |tk \u2208/ R) = TI P (tk \u2208 match({T }C \u2212K \u2032 )pi ) (5.16) pi \u2208P and | K \u2032 | P (tk \u2208 R) = |K \u2032 | + |{T }C \u2212 K \u2032 | (5.17) | { T } C \u2212 K \u2032 | P (tk \u2208/ R) = |K \u2032 | + |{T }C \u2212 K \u2032 | (5.18) The inR function is now specified and will determine whether a tuple is desirable.",
                    "sid": 1071,
                    "ssid": 337,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Practical details There are a handful of details that must be discussed.",
                    "sid": 1072,
                    "ssid": 338,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These details arise from the practical need to implement the system in order to evaluate it.",
                    "sid": 1073,
                    "ssid": 339,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Firstly, this is a statistical algorithm.",
                    "sid": 1074,
                    "ssid": 340,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm cannot work with a small number of sentences.",
                    "sid": 1075,
                    "ssid": 341,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It relies on the redundancy inherent in large corpora of documents.",
                    "sid": 1076,
                    "ssid": 342,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since all of the calculations are statistical, it is important to remove patterns that match less than a certain number of tuples.",
                    "sid": 1077,
                    "ssid": 343,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This exclusion will ensure a level of statistical certainty.",
                    "sid": 1078,
                    "ssid": 344,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, a pattern that matches only one tuple will be unreliable.",
                    "sid": 1079,
                    "ssid": 345,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, the tuples that are matched by less than a certain number of patterns should also be excluded.",
                    "sid": 1080,
                    "ssid": 346,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The statistical methods used here break down with a small number of samples.",
                    "sid": 1081,
                    "ssid": 347,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are only accurate when the number of samples is very large.",
                    "sid": 1082,
                    "ssid": 348,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The current system throws out sentences matched by less than three patterns.",
                    "sid": 1083,
                    "ssid": 349,
                    "kind_of_tag": "s"
                },
                {
                    "text": "And it removes patterns that match fewer than six tuples.",
                    "sid": 1084,
                    "ssid": 350,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, there are certain minor changes to be made to the evaluation metrics.",
                    "sid": 1085,
                    "ssid": 351,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, the way they are currently calculated allows for P (tk \u2208 R) = 1 or P (tk \u2208 R) = 0.",
                    "sid": 1086,
                    "ssid": 352,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both of these cases should be avoided, since they indicate certainty\u2014the system is never certain.",
                    "sid": 1087,
                    "ssid": 353,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It is necessary to add in \u201cdummy tuples\u201d to the calculation.",
                    "sid": 1088,
                    "ssid": 354,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More specifically, four dummy tuples are added\u2014one from each of the following cases: 1.",
                    "sid": 1089,
                    "ssid": 355,
                    "kind_of_tag": "s"
                },
                {
                    "text": "True Positive\u2014a tuple in R matched by the pattern.",
                    "sid": 1090,
                    "ssid": 356,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.",
                    "sid": 1091,
                    "ssid": 357,
                    "kind_of_tag": "s"
                },
                {
                    "text": "False Positive\u2014a tuple not in R matched by the pattern.",
                    "sid": 1092,
                    "ssid": 358,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.",
                    "sid": 1093,
                    "ssid": 359,
                    "kind_of_tag": "s"
                },
                {
                    "text": "True Negative\u2014a tuple not in R not matched by the pattern.",
                    "sid": 1094,
                    "ssid": 360,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}