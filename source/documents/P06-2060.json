{
    "ID": "P06-2060",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Several NLP tasks are characterized by asymmetric data where one class label NONE, signifying the absence of any structure (named entity, coreference, relation, etc.) dominates all other classes.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classifiers built on such data typically have a higher precision and a lower recall and tend to overproduce the NONE class.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We present a novel scheme for voting among a committee of classifiers that can significantly boost the recall in such situations.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We demonstrate results showing up to a 16% relative improvement in ACE value for the 2004 ACE relation extraction task for English, Arabic and Chinese.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Statistical classifiers are widely used for diverse NLP applications such as part of speech tagging (Ratnaparkhi, 1999), chunking (Zhang et al., 2002), semantic parsing (Magerman, 1993), named entity extraction (Borthwick, 1999; Bikel et al., 1997; Florian et al., 2004), coreference resolution (Soon et al., 2001), relation extraction (Kambhatla, 2004), etc. A number of these applications are characterized by a dominance of a NONE class in the training examples.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, for coreference resolution, classifiers might classify whether a given pair of mentions are references to the same entity or not.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, we typically have a lot more examples of mention pairs that are not coreferential (i.e. the NONE class) than otherwise.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, if a classifier is predicting the presence/absence of a semantic relation between two mentions, there are typically far more examples signifying an absence of a relation.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classifiers built with asymmetric data dominated by one class (a NONE class donating absence of a relation or coreference or a named entity etc.) can overgenerate the NONE class.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This often results in a unbalanced classifier where precision is higher than recall.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we present a novel approach for improving the recall of such classifiers by using a new voting scheme from a committee of classifiers.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are a plethora of algorithms for combining classifiers (e.g. see (Xu et al., 1992)).",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A widely used approach is a majority voting scheme, where each classifier in the committee gets a vote and the class with the largest number of votes \u2019wins\u2019 (i.e. the corresponding class is output as the prediction of the committee).",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are interested in improving overall recall and reduce the overproduction of the class NONE.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our scheme predicts the class label C obtaining the second highest number of votes when NONE gets the highest number of votes, provided C gets at least N votes.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, we predict a label other than NONE when there is some evidence of the presense of the structure we are looking for (relations, coreference, named entities, etc.) even in the absense of a clear majority.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This paper is organized as follows.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In section 2, we give an overview of the various schemes for combining classifiers.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In section 3, we present our vot 460 Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 460\u2013466, Sydney, July 2006.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Qc 2006 Association for Computational Linguistics ing algorithm.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In section 4, we describe the ACE relation extraction task.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In section 5, we present empirical results for relation extraction and we discuss our results and conclude in section 6.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "combining classifiers. ",
            "number": "2",
            "sents": [
                {
                    "text": "Numerous methods for combining classifiers have been proposed and utlized to improve the performance of different NLP tasks such as part of speech tagging (Brill and Wu, 1998), identifying base noun phrases (Tjong Kim Sang et al., 2000), named entity extraction (Florian et al., 2003), etc. Ho et al (1994) investigated different approaches for reranking the outputs of a committee of classifiers and also explored union and intersection methods for reducing the set of predicted categories.",
                    "sid": 23,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Florian et al (2002) give a broad overview of methods for combining classifiers and present empirical results for word sense disambiguation.",
                    "sid": 24,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Xu et al (1992) and Florian et al (2002) consider three approaches for combining classifiers.",
                    "sid": 25,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first approach, individual classifiers output posterior probabilities that are merged (e.g. by taking an average) to arrive at a composite posterior probability of each class.",
                    "sid": 26,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the second scheme, each classifier outputs a ranked list of classes instead of a probability distribution and the different ranked lists are merged to arrive at a final ranking.",
                    "sid": 27,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Methods using the third approach, often called voting methods, treat each classifier as a black box that outputs only the top ranked class and combines these to arrive at the final decision (class).",
                    "sid": 28,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The choice of approach and the specific method of combination may be constrained by the specific classification algorithms in use.",
                    "sid": 29,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we focus on voting methods, since for small data sets, it is hard to reliably estimate probability distributions or even a complete ordering of classes especially when the number of classes is large.",
                    "sid": 30,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A widely used voting method for combining classifiers is a Majority Vote scheme (e.g.",
                    "sid": 31,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(Brill and Wu, 1998; Tjong Kim Sang et al., 2000)).",
                    "sid": 32,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each classifier gets to vote for its top ranked class and the class with the highest number of votes \u2019wins\u2019.",
                    "sid": 33,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Henderson et al (1999) use a Majority Vote scheme where different parsers vote on constituents\u2019 mem bership in a hypothesized parse.",
                    "sid": 34,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Halteren et al (1998) compare a number of voting methods including a Majority Vote scheme with other combination methods for part of speech tagging.",
                    "sid": 35,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we induce multiple classifiers by using bagging (Breiman, 1996).",
                    "sid": 36,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following Breiman\u2019s approach, we obtain multiple classifiers by first making bootstrap replicates of the training data and training different classifiers on each of the replicates.",
                    "sid": 37,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The bootstrap replicates are induced by repeatedly sampling with replacement training events from the original training data to arrive at replicate data sets of the same size as the training data set.",
                    "sid": 38,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Breiman (1996) uses a Majority Vote scheme for combining the output of the classifiers.",
                    "sid": 39,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the next section, we will describe the different voting schemes we explored in our work.",
                    "sid": 40,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "at-least-n voting. ",
            "number": "3",
            "sents": [
                {
                    "text": "We are specifically interested in NLP tasks characterized by asymmetric data where, typically, we have far more occurances of a NONE class that siginifies the absense of structure (e.g. a named entity, or a coreference relation or a semantic relation).",
                    "sid": 41,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Classifiers trained on such data sets can overgener- ate the NONE class, and thus have a higher precision and lower recall in discovering the underlying structure (i.e. the named entities or coreference links etc.).",
                    "sid": 42,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With such tasks, the benefits yielded by a Majority Vote is limited, since, because of the asymmetry in the data, a majority of the classifiers might predict NONE most of the time.",
                    "sid": 43,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose alternative voting schemes, dubbed At-Least-N Voting, to deal with the overproduction of NONE.",
                    "sid": 44,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a committee of classifiers (obtained by bagging or some other mechanism), the classifiers first cast their vote.",
                    "sid": 45,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the majority vote is for a class C other than NONE, we simply output C as the prediction.",
                    "sid": 46,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the majority vote is for NONE, we output the class label obtaining the second highest number of votes, provided it has at least N votes.",
                    "sid": 47,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, we choose to defer to the minority vote of classifiers which agree on finding some structure even when the majority of classifiers vote for NONE.",
                    "sid": 48,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We expect this voting scheme to increase recall at the expense of precision.At-Least-N Voting induces a spectrum of combi nation methods ranging from a Majority Vote (when N is more than half of the total number of classifiers) to a scheme, where the evidence of any structure by even one classifier is believed (At-Least-1 Voting).",
                    "sid": 49,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The exact choice of N is an empirical one and depends on the amount of asymmetry in the data and the imbalance between precision and recall in the classifiers.",
                    "sid": 50,
                    "ssid": 10,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the ace relation extraction task. ",
            "number": "4",
            "sents": [
                {
                    "text": "Automatic Content Extraction (ACE) is an annual evaluation conducted by NIST (NIST, 2004) on information extraction, focusing on extraction of entities, events, and relations.",
                    "sid": 51,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The Entity Detection and Recognition task entails detection of mentions of entities and grouping together the mentions that are references to the same entity.",
                    "sid": 52,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In ACE terminology, mentions are references in text (or audio, chats, ...)",
                    "sid": 53,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "to real world entities.",
                    "sid": 54,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly relation mentions are references in text to semantic relations between entity mentions and relations group together all relation mentions that identify the same semantic relation between the same entities.",
                    "sid": 55,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the frament of text: John\u2019s son, Jim went for a walk.",
                    "sid": 56,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Jim liked his father.",
                    "sid": 57,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "all the underlined words are mentions referring to two entities, John, and Jim.",
                    "sid": 58,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Morover, John and Jim have a family relation evidenced as two relation mentions \u201dJohn\u2019s son\u201d between the entity mentions \u201dJohn\u201d and \u201dson\u201d and \u201dhis father\u201d between the entity mentions \u201dhis\u201d and \u201dfather\u201d.",
                    "sid": 59,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the relation extraction task, systems must predict the presence of a predetermined set of binary relations among mentions of entities, label the relation, and identify the two arguments.",
                    "sid": 60,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the 2004 ACE evaluation, systems were evaluated on their efficacy in correctly identifying relations among both system output entities and with \u2019true\u2019 entities (i.e. as annotated by human annotators as opposed to system output).",
                    "sid": 61,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we present results for extracting relations between \u2019true\u2019 entities.",
                    "sid": 62,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 shows the set of relation types, subtypes, and their frequency counts in the training data for the 2004 ACE evaluation.",
                    "sid": 63,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For training classifiers, the.",
                    "sid": 64,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "great paucity of positive training events (where relations exist) compared to the negative events (where Table 1: The set of types and subtypes of relations used in the 2004 ACE evaluation.",
                    "sid": 65,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "relations do not exist) suggest that schemes for improving recall might benefit this task.",
                    "sid": 66,
                    "ssid": 16,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experimental results. ",
            "number": "5",
            "sents": [
                {
                    "text": "In this section, we present results of experiments comparing three different methods of combining classifiers for ACE relation extraction: \u2022 At-Least-N for different values of N, \u2022 Majority Voting, and \u2022 a simple algorithm, called summing, where we add the posterior scores for each class from all the classifiers and select the class with the maximum summed score.",
                    "sid": 67,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the official ACE evaluation set is not publicly available, to facilitate comparison with our results and for internal testing of our algorithms, for each language (English, Arabic, and Chinese), we Table 2: The Division of LDC annotated data into training and development test sets.",
                    "sid": 68,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "divided the ACE 2004 training data provided by LDC in a roughly 75%:25% ratio into a training set and a test set.",
                    "sid": 69,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 2 summarizes the number of documents and the number of relation mentions in each data set.",
                    "sid": 70,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The test sets were deliberately chosen to be the most recent 25% of documents in chronological order, since entities and relations in news tend to repeat and random shuffles can greatly reduce the out-of-vocabulary problem.",
                    "sid": 71,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.1 Maximum Entropy Classifiers.",
                    "sid": 72,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used bagging (Breiman, 1996) to create replicate training sets of the same size as the original training set by repeatedly sampling with replacement from the training set.",
                    "sid": 73,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We created 25 replicate training sets (bags) for each language (Arabic, Chinese, English) and trained separate maximum entropy classifiers on each bag.",
                    "sid": 74,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then applied At-Least-N (N = 1,2,5), Majority Vote, and Summing algorithms with the trained classifiers and measured the resulting performance on our development set.",
                    "sid": 75,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each bag, we built maximum entropy models to predict the presence of relation mentions and the type and subtype of relations, when their presence is predicted.",
                    "sid": 76,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our models operate on every pair of mentions in a document that are not references to the same entity, to extract relation mentions.",
                    "sid": 77,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since there are 23 unique type-subtype pairs in Table 1, our classifiers have 47 classes: two classes for each pair corresponding to the two argument orderings (e.g. \u201dJohn\u2019s son\u201d vs. \u201dhis father\u201d) and a NONE class signifying no relation.",
                    "sid": 78,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similar to our earlier work (Kambhatla, 2004), we used a combination of lexical, syntactic, and semantic features including all the words in between the two mentions, the entity types and subtypes of the two mentions, the number of words in between the two mentions, features derived from the small est parse fragment connecting the two mentions, etc. These features were held constant throughout these experiments.",
                    "sid": 79,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5.2 Results.",
                    "sid": 80,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We report the F-measure, precision and recall for extracting relation mentions for all three languages.",
                    "sid": 81,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also report ACE value1, the official metric used by NIST that assigns 0% value to a system that produces no output and a 100% value to a system that extracts all relations without generating any false alarms.",
                    "sid": 82,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that the ACE value counts each relation only once even if it is expressed in text many times as different relation mentions.",
                    "sid": 83,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The reader is referred to the NIST web site (NIST, 2004) for more details on the ACE value computation.",
                    "sid": 84,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figures 1(a), 1(b), and 1(c) show the F measure, precision, and recall respectively for the English test set obtained by different classifier combination techniques as we vary the number of bags.",
                    "sid": 85,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figures 2(a), 2(b), and 2(c) show similar curves for Chinese, and Figures 3(a), 3(b), and 3(c) show similar curves for Arabic.",
                    "sid": 86,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All these figures show the performance of a single classifier as a straight line.",
                    "sid": 87,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the plots, it is clear that our hope of increasing recall by combining classifiers is realized for all three languages.",
                    "sid": 88,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As expected, the recall rises fastest for At-Least-N when N is small, i.e when small minority opinion or even a single dissenting opinion is being trusted.",
                    "sid": 89,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of course, the rise in recall is at the expense of a loss of precision.",
                    "sid": 90,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Overall, At-Least-N for intermediate ranges of N (N=5 for English and Chinese and N=2 for Arabic) performs best where the moderate loss in precision is more than offset by a rise in recall.",
                    "sid": 91,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Both the Majority Vote method and the Summing method succeed in avoiding a sharp loss of precision.",
                    "sid": 92,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, they fail to increase the recall significantly either.",
                    "sid": 93,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 3 summarizes the best results (F measure) for each classifier combination method for all three languages compared with the result for a single classifier.",
                    "sid": 94,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At their best operating points, all three combination methods handily outperform the single classifier.",
                    "sid": 95,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At-Least-N seems to have a slight edge over the other two methods, but the difference is small.",
                    "sid": 96,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1Here we use the ACE value metric used for the ACE 2004 evaluation 50 49 48 47 46 45 44 43 0 5 10 15 20 25 Number of Bags (a) F-measure 68 66 64 62 60 58 56 54 52 50 48 46 0 5 10 15 20 25 Number of Bags (b) Precision 46 44 42 40 38 36 34 0 5 10 15 20 25 Number of Bags (c) Recall Figure 1: Comparing F-measure, precision, and recall of different voting schemes for English relation extraction.",
                    "sid": 97,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "67 66 65 64 63 62 61 0 5 10 15 20 25 Number of Bags (a) F-measure 76 74 72 70 68 66 64 62 60 58 56 0 5 10 15 20 25 Number of Bags (b) Precision 70 68 66 64 62 60 58 56 54 52 0 5 10 15 20 25 Number of Bags (c) Recall Figure 2: Comparing F-measure, precision, and recall of different voting schemes for Chinese relation extraction.",
                    "sid": 98,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "31 44 30 30 29 28 27 At-Least-1.",
                    "sid": 99,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "At-Least-2 At-Least-5 26 Majority Vote.",
                    "sid": 100,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Summing 25 Single.",
                    "sid": 101,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "0 5 10 15 20 25 Number of Bags (a) F-measure 42 40 38 36 34 32 30 28 0 5 10 15 20 25 Number of Bags (b) Precision 28 26 24 22 20 18 0 5 10 15 20 25 Number of Bags (c) Recall Figure 3: Comparing F-measure, precision, and recall of different voting schemes for Arabic relation extraction.",
                    "sid": 102,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "English Arabic Chinese Single 46.87 27.47 63.75 At-Least-N 49.52 30.41 66.79 Majority Vote 49.24 29.02 66.21 Summing 48.66 29.02 66.40 Table 3: Comparing the best F-measure obtained by At-Least-N Voting with Majority Voting, Summing and the single best classifier.",
                    "sid": 103,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4: Comparing the ACE Value obtained by At- Least-N Voting with the single best classifier for the operating points used in Table 3.",
                    "sid": 104,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 4 shows the ACE value obtained by our best performing classifier combination method (At- Least-N at the operating points in Table 3) compared with a single classifier.",
                    "sid": 105,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Note that while the improvement for Chinese is slight, for Arabic performance improves by over 16% relative and for English, the improvement is over 7% relative over the single classifier2.",
                    "sid": 106,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the ACE value collapses relation mentions referring to the same relation, finding new relations (i.e. recall) is more important.",
                    "sid": 107,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This might explain the relatively larger difference in ACE value between the single classifier performance and At- Least-N.",
                    "sid": 108,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The rules of the ACE evaluation prohibit us from presenting a detailed comparison of our relation extraction system with the other participants.",
                    "sid": 109,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, our relation extraction system (using the At- Least-N classifier combination scheme as described here) performed very competitively in 2004 ACE evaluation both in the system output relation extraction task (RDR) and the relation extraction task where the \u2019true\u2019 mentions and entities are given.",
                    "sid": 110,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to time limitations, we did not try At-Least-N with N > 5.",
                    "sid": 111,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From the plots, there is a potential for getting greater gains by experimenting with a larger 2Note that ACE value metric used in the ACE 2004 evaluation weights entitites differently based on their type.",
                    "sid": 112,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, relations with PERSON-NAME arguments end up contributing a lot more the overall score than relations with FACILITY- PRONOUN arguments.",
                    "sid": 113,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "number of bags and with a larger N.",
                    "sid": 114,
                    "ssid": 48,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "discussion. ",
            "number": "6",
            "sents": [
                {
                    "text": "Several NLP problems exhibit a dominance of a NONE class that typically signifies a lack of structure like a named entity, coreference, etc. Especially when coupled with small training sets, this results in classifiers with unbalanced precision and recall.",
                    "sid": 115,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have argued that a classifier voting scheme that is focused on improving recall can help increase overall performance in such situations.",
                    "sid": 116,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have presented a class of voting methods, dubbed At-Least-N that defer to the opinion of a minority of classifiers (consisting of N members) even when the majority predicts NONE.",
                    "sid": 117,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This can boost recall at the expense of precision.",
                    "sid": 118,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, by varying N and the number of classifiers, we can pick an operating point that improves the overall F-measure.",
                    "sid": 119,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We have presented results for ACE relation extraction for three languages comparing At-Least N with Majority Vote and Summing methods for combining classifiers.",
                    "sid": 120,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All three classifier combination methods significantly outperform a single classifier.",
                    "sid": 121,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, At-Least-N consistently gave us the best per formance across different languages.",
                    "sid": 122,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used bagging to induce multiple classifiers for our task.",
                    "sid": 123,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Because of the random bootstrap sampling, different replicate training sets might tilt towards one class or another.",
                    "sid": 124,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, if we have many classifiers trained on the replicate training sets, some of them are likely to be better at predicting certain classes than others.",
                    "sid": 125,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In future, we plan to experiment with other methods for collecting a committee of classifiers.",
                    "sid": 126,
                    "ssid": 12,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}