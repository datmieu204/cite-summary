{
    "ID": "C94-2204",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "A description is an entity that can be interpreted as true or false of an object, and using feature structures as descriptions accrues several computational benefits.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, 1 create an explicit interpretation of a typed feature structure used as a description, define the notion of a satisfiable fe.ature structure, and create a simple and effective algorithm to decide if a fe.ature structure is satisfiable.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Describing objects is one of several purposes for which linguists use fe.at, ul:e structures.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A description is an er, tity that can be interpreted as true or false of an object.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, the conventional interpretation of the description 'it is black' is true of a soot particle, but false of ~ snowtlake, q'herefore, any use of a feature structure to describe an object delnands that the feature structure can be interpreted as true or false of the object.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, I tailor the semantics of [K~NG 1 989] to suit the typed feature structures of [CAII.I'F, NTFA{ 1 992], and so create an explicit interpretation of a typed feature structure used as a descript, ion.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I then use this interpretation to define the notion of a satisfiable feature structure.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though no featm'e structure algebra provides descriptions as expressive as those provided by a feature logic, using feature structures to describe objects profits from a large stock of available computational techniques to represent, test and process feature structures.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, I demonstrate the computational benefits of marrying a tractable syntax and an explicit semantics by creating a simple and effective algorithm to decide the satisfiability *The research presented in this paper was sl)on- sored by ']'eilprojekt B4 \"Constraints on (h'ammar for Efficient Generation\" cff the Sonderforschungsbereich 340 of the Deutsche ForschungsgemeinschafL I also wish to thank Bob Carpenter, Dale (lerdemmm, q'hile) GStz and Jennifer King for their invalualAe hel l) with this paper.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "tWilhehnst.r. 113, 72t17,1 ~l~{ilfingen, (]el'Ill[|fly.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Einaih klng\u00aesfs.nphil.unl- t uebingen.de.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "of a feature structure.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gerdemann and Ggtz's 'Doll type resolution system implements both the sen,antics and an efficient refinement of the satisfiability algorithm I present here (see [C,5TZ 1993], [GEItDF, MANN AND I(ING 1994] and [G~m)EMA~N (VC)]).",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "a feature structure ",
            "number": "2",
            "sents": [
                {
                    "text": "SEMANTICS A signatm.e provides the symbols from which to construc.t typed feature structures, and an interpretation gives those symbols meaning.",
                    "sid": 14,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 1.",
                    "sid": 15,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "E is a siguature iff E is a sextuple (~, %, ~, G, ffl, ~), is a set, (%,-<} is a partial order, { foreachrE72, } = crC72.",
                    "sid": 16,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "|fair thcna=r ' ~2t is a so/,, is a partial tbnction from the Cartesian product of 72 and ~2[ to %, and for each r C 37, each r' C % and each o\" C ~, if~(r, or) is defined aml r ~ r' then ~(r', ct) is defined, and a(~, ~) _-< a(<, .).",
                    "sid": 17,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "]Ienceforth, I tacitly work with a signature {Q, 72, ~, O, ~(, ~}.",
                    "sid": 18,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 call members of Q states, members of 37 types, ~ subsumption, members of ~ species, members of 9.1 attributes, and ~: appropriateness.",
                    "sid": 19,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Do.fil).itlon 2.",
                    "sid": 20,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 is an interpretation iff l is a triple (U, S, A), U is a set, S is a total time|ion from U to A is a total function from ~{ to the set of partial functions from U to U, tbr each (t C ~[ and each u C U, if a((:~)(~,) is deC, ned then ~(S(u), a) is defined, and ;~(s'(~,), ,,) ~ ,V(A(~)(*O), and for each cY G ~( and each u E U, if~(X(u), a) is d(,Jined Suppose that 1 is an interpretation (U, \u0141', A).",
                    "sid": 21,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I call each member of U an object in I. \"1250 ]','a.ch type.",
                    "sid": 22,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "denotes a set.",
                    "sid": 23,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "of o])jecl;s in [.",
                    "sid": 24,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The denotations of the species partition U, and S assigns et*ch object iu 1 the ul|ique species whose denottttion contains the object.: ol)jcct u is in the denotation of species cr it[' cr = ,~'(u).",
                    "sid": 25,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Subsumption <m<:odes t~ rel~tionship bcl;wccn the denotations of species and I,ypcs: object ,t is in the denotation of I;ype r if[ r ~ 5;(u).",
                    "sid": 26,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So, if r~ _-j r2 then the denol:~ttiou o[\" type rt contMns the denotation of l;ylw, 7\"2.",
                    "sid": 27,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each at|;rilmte del~otes a. partial ft,nction from l;hc objects iu 1 to tim ob.icct.s iu i, aim A assigns e~clt artl;ribute the l>m:t;ia[ funcl.iol~ il, denol;es.",
                    "sid": 28,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Appropriateness encodes ~t rcbttion- ship between l;he dcnotaLions of species and atl:ributes: ifa(cr, ,v) is deliued then the den()- tt~tion of a.ttributc (v acts upoi~ each ol~jecl, il, the, denota.l;ion of species cr to yield at, olLiect in the dcnol, ation of type ~(o-, ,v), but ifa((r, ,,,) is undefined then the denotati(m of al.l.ribul.e ~v ~tc/.s upon no object in the deuotalion of species or.",
                    "sid": 29,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "So, if~(r,{v) is defined then the.",
                    "sid": 30,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(h> uota.tion of a ll, ribute rt a.cl.s Ul~(m each objccl, in the denotation of tyl)c v 1;o yichl an object in the del|otal;iol~ of type a(r, ,').",
                    "sid": 31,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I call a linitc sequence of attribul,es a path, and write q3 for I,he set, of paths.",
                    "sid": 32,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 3.",
                    "sid": 33,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1' is the path interl~retati(m fimctlon under 1 ill\" I is an interpretation (U, \u0141', A), 1' is a tol, al timctim~ l)'om q3 to the s.t ,f l)a, rtia, l fimctions from U 1,o U, alld lbr each ((vl .....",
                    "sid": 34,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(v,,) 6 ~, /'(m,...,'v,~) is the timcti<mal coml,o,siti,m of d ( m ) .....",
                    "sid": 35,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A ( (~,, ).",
                    "sid": 36,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 write t~ for the path iute,'prctal.ion flu,orion mMer l. De.finition 4.",
                    "sid": 37,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "l,' is a [baturc structm.c ill\" I,\" is a quadrulde (Q, q, 5, 0), Q is a tinite subset o1'~], q~Q, 8 is a. finite pa.rtia.I function from the, Ca, rtesian l,rgduct ot\" Q mM c2[ to Q, 0 is a totM l)mction from Q to %, and for each q/ ~ Q, &n\" some re (5 q3, re rlm.s to q' in I c, where (,'vt,...,;M) z't/zzs l,o q' ill 1\" ill' q' 6 Q, and ~.\" son., {qo,..., q,} C- q, q = qo, for each i <., 8(qi,o'i41) iS de, lined, and 3(qi, (Vi41) := qi+l, ~ltl(l q,, -.",
                    "sid": 38,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "q/.",
                    "sid": 39,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "}\",;tch ['(!;tl;llr(!",
                    "sid": 40,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Stl'tlC[,llr(~ is a COllllCC~,C(l f~]001\"(!",
                    "sid": 41,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "machine (see [MooRI,; 1(;56]) with finitely mauy st~tes, input alphabet 9..[, and output Mplm.bet X. Definition 5.",
                    "sid": 42,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1; is true of u under 1 iff F is a featnre structure (Q, q, 5, O), 1 is a.n interpretation (U, S, A), u is an object in 1, and for each re1 6 q3, ca.oh rc 2 C q3 and each q' ~ (O, if rot runs to q/ in t\", and rr.2 runs to q~ in l\" tl,,,,, :,,(~,)(,,) i,~ ,mi,,.a, J~(~)(,,) i~ ,>t/,,.4 0(q') ~ s(v,(,~,)(u)).",
                    "sid": 43,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 6.",
                    "sid": 44,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I,' is a satisfiable feature structure ill' I\" i,s a feature ,~tructure, and for some interpretation I m,l some object u in 1, l\" is true ol'u under 1.",
                    "sid": 45,
                    "ssid": 32,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "morphs. ",
            "number": "3",
            "sents": [
                {
                    "text": "The M)undance of inLerpregations se.mns to preclude an effectiw~ algoriidml to decide if a fea.ture structure is s~tisfiabh~.",
                    "sid": 46,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, I in- serl; morl)hs I)eLweell ['ea, l, tlre sgrllCtllrCs ,q3ld objects [.o yMd au iutm'prctaLion free charac~ tcrisat,ion of ~t saLislia.ble fcat;ure structure.",
                    "sid": 47,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 7.",
                    "sid": 48,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "M is a semi-morph ill\" M is a triple (A, l', A), A is a nonemlH.y sulmet orgy, 1' Ls an effuiva, lcnce rehttJon over A, [br each ~v6 2(, each ~l ~- ~ and each ~r.e ~ q3, il'Tq(v ~ A and (Trt,Tr~) (5 1' theql (Trim rr,2,~) ~ I', A i,~' a total function from A to ~'5, for each rq ~ q3 and each 7r.e C q3, i['(7fl, 71\"2) ~_ l' ~,h(?l, A(TII)= A(TF2) , ~tlld tbr each (~ C ~21and e:rch 7r 6 9f3, if fro: 6 A O,.,, ~ 6 A, ~(A(,0, \"9 i,' ,teti,.,d, ~u.l a(A(~),-) ~ a(~(0.",
                    "sid": 49,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Detii,ition 8.",
                    "sid": 50,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "M is a. morph ill\" M is a semi-morph (A, 1', A), a.nd /br each (v 6 ~2[ aim ca.oh n 6 q3, then rccv ~ A. ]:,a,ch nlorph is the Moshicr M~straction (see [MosIIIER 1988]) of a connected mtd totMly well-typed (see [CARPt,;NTt,:I~ 1992]) Moore machine with possibly intlnitely many slates, inpul a.ll)lla.bel; Q{, and oul:put Mphabet \u02d8'~.",
                    "sid": 51,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 9.",
                    "sid": 52,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "M abstracts u under l iff M is a morph (A, P, A), [ is an interpretation (U, \u0141', A), u is an object in I, for each rq G 9,3 and each re2 C ~, (re1, ~r2) E I' itr P/rr,)(, 0 is ddi,,ed, P,(~)(,,) is Jea,,e~, ~,,d for each cr E 0 and each re C q~, (re, ~) c a ifl'e,(re)(u) is defined, and = s(P,(re)O0).",
                    "sid": 53,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proposition 10.",
                    "sid": 54,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "l'br each interpretation I and each object u in I, some unique, morph ahstracts u under l. I thus write of the abstraction of u under [.",
                    "sid": 55,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 11.",
                    "sid": 56,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "u is a standard ohject i[r u is a quadruple (A, P, A, E), (&, 1', A) is a morph, and E is an equivalence c/ass under 1'.",
                    "sid": 57,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "[ write U for the set of standard objects, write ~ for the total function fi'om U to ~, where for each a E O and each (A,I',A,E) C U, S(&, F, A, E) = cr iff for some rr G E, Afro) = or, and write A for the total function fi'om ~t to the set of partial functions fi'om U to U, where for each <v E 9.1, each (&, F, A, F,) E U and each (&', F', A', E') G U, X(c~)(A, r, A, E) is defined, and /(,~)(a, r, A, E) = (a', r', A', E') iff (A, I',A) = (a',F',A*), and for some re G E, rea.",
                    "sid": 58,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "E F,'.",
                    "sid": 59,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lemma 12.",
                    "sid": 60,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(U, S, A) is an interpretation.",
                    "sid": 61,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I write 7 for (U, ,5', A}.",
                    "sid": 62,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Lemma 13.",
                    "sid": 63,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each (A,I',A,E) E (), ea.ch (A', r', A', E') E 9 a,.~ each re C q~, ~'/~(re)(A, r, A, r.)",
                    "sid": 64,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "is (le~.,e~l, a.,,t ~5~(re)(A, r, A, ~) = (a', r', A', ~') ia\" (a, r, A) = (~', r', A'), a,,(~ for some re' G 1'3, re% G E'.",
                    "sid": 65,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ProoL By induction on the length of re.",
                    "sid": 66,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "', Lemma 14.",
                    "sid": 67,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each ( A, F , A, E} EU, if E is the equivalence class of the.",
                    "sid": 68,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "empty path under 1' then the abstraction of (A, F, A, E) under is (A, F, A).",
                    "sid": 69,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proposition 15.",
                    "sid": 70,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I'br each morph M, for some interl>retation [ and some object u in I, M is the abstraction ofu under I. Definition 16.",
                    "sid": 71,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1;' approximates M iff F is a l}ature structure (Q,q,6,0), M is a morph (A, I', A), and for each re1 E e43, each re'2 C q3 and each q' EQ, il'rel runs to q~ in I\", and re2 runs to q' in F then (~rt, rr2) E r, and o(q') ~ a(~).",
                    "sid": 72,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A feature structure approximates a morph iff the Moshier abstraction of the feature structure abstractly subsumes (see [CARPEN'PI,;lt 1992]) the morph.",
                    "sid": 73,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proposition 17.",
                    "sid": 74,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each interpretation I, each ohject u in I and each feature structure F~ F is true of a under 1 iff 1;' approximates the abstraction of u under I. Theorem 18.",
                    "sid": 75,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each feature structure I,', l i' is satisfiable iff 1,' approximates some morph.",
                    "sid": 76,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proof.",
                    "sid": 77,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "From prol>ositions 15 and 17.",
                    "sid": 78,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "B",
                    "sid": 79,
                    "ssid": 34,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "resolved feature structures. ",
            "number": "4",
            "sents": [
                {
                    "text": "Though theorem 18 gives an interpretation free eharacterisation of a satisfiable feature structure, the characterisation still seems to admit of no effective algorithm to decide if a feature structure is satisfiable, tlowever, I use theorem 18 and resolve.d feature structures to yield a less general interpretation free characterisation of a satisfiable feature structure that admits of such an algorithm.",
                    "sid": 80,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 19.",
                    "sid": 81,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "R is a resolved feature structure itr R is a feature structure (Q, q, a, p}, p is a total function from Q to 6, and for each ~ E 91 and each q' G Q, if ~(q I, ct) is defined then ~(p(q'), ~r) is defined, and (~(p(q'), oz) ~_ p(a(q', c~)).",
                    "sid": 82,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Bach resolved feature structure is a well-typed (see [CARI'ENTF, R 1992]) feature structure with output alphabet (%.",
                    "sid": 83,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Definition 20.",
                    "sid": 84,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "I\u02d8.",
                    "sid": 85,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "is a resolvant off iff R is a resolved lbature structure (Q, q, 6, p), F is a feature structure (Q,q,~,O), and rot each q' e Q, o(q') ~_ p(q').",
                    "sid": 86,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proposition 21.",
                    "sid": 87,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "~br each interpretation I, each object u in I an(/ each feature structure I a , 1;' is true of u under 1 ill\"some resolwmt of J;' is true of u under I. Definition 22.",
                    "sid": 88,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(~, %, -<, 0,~2[, ~) is rational iff for each er G 0 and each (v G ~2[, ira(o-, ~) is defined then ~r some a' ~ O, ~(cr, a') :<_ or'.",
                    "sid": 89,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proposition 23.",
                    "sid": 90,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1[\" (~, %, ~, O, ~21, ~) is rational then for each resolved tbature structure R, R is satisfiabh'..",
                    "sid": 91,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proof.",
                    "sid": 92,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Suppose that N. = (Q, q, 6, p) mid fl is a bijection from ordinal ( to G. Let A0 = {71\" f('r S\u00b0l]le q' ~ il~l' } 71\" l'llnS to q!",
                    "sid": 93,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "P0 = (rq,~r2) ~r~ runs 1.o q' in 1~, and , ~r2 r~s toq!in Ie and An= (~r, cr) ~r runs l.o q!",
                    "sid": 94,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "in lg,~md . cr -p(q ) For each n ~ IN, let An+l = An U rrcr ~r ff An, and ~(A,,(rr), ,e) is defined l'n+l : l'~,zU (Trl~V , \"/r2Cg ) 7Cl('g ~ An+l' gtll(t7r.,ev ~ An4.1, and ' (;1,7r2) C ['n, An+l =z .'< 'a, ] ~r~v ~ A,~+, \\ A., and t A,~U (Trcr,fl(~)) c is the least ordinal f' ill ( such |,hat [ a(A,,(~),,*) ~ ;~(~) J For each n ~ IN, (A,,, I',,,A,) is a semi-morph.",
                    "sid": 95,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "lint ,x = U{A. I,, ~ ,N), r= U{r,~ I- e,N}, ~.,d A--U{A, I\" < ~N}.",
                    "sid": 96,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(z:X, F, A) is a morph thud; 1~ approximates.",
                    "sid": 97,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By theorem 18, R is satisliable.",
                    "sid": 98,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": ",\" Theorem 24.",
                    "sid": 99,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If (.Q, %, ~, ~, '2[, ~) is rati~mal then tbr each feature structure l\", f\" is satisfiable ifl\" I,' has a. resoh'am.",
                    "sid": 100,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proof.",
                    "sid": 101,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "l?rom proposil, ious 21 and 23.",
                    "sid": 102,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "a satisfiability algorithm ",
            "number": "5",
            "sents": [
                {
                    "text": "In this section, I use theorem 24 to show how -given a rationM signature I.lmt meets reason M~le comput~tiona.l conditions 1.o construct an effective Mgorithm to decide if a f<tture sl.ructure is s~tisfial)h~.",
                    "sid": 103,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Dctinition 25.",
                    "sid": 104,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(\u0141), %, <, G, ~, ~) is com putable iff Q, '~ and ~2[ are counta.lde, 0 is finite, l'or .some (;Hb(:tiw,' fimction SUB, for each T1 ~ ~\u0141 arid each r.2 ~ T., if rl ~ v2 then SUB(rl, ru) =: 'true' otherwise SUB(rl, r2) = 'tklse', mid lbr some ellbctive function APP, for each r G \u2022 and each c~ G 92, if ~(r, cY) is defined then APP(T,\u02d8v) --=- ~(r,~v) otherwise APP(r, (v) ='undefined', Proposition 26.",
                    "sid": 105,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "lf(~,%, ~, 0,~1,~) is con> puta.lde then for some effective fimction RES, [br each feature structure I a, RES(]\") --a list of the resolvants o1' [\".",
                    "sid": 106,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proof.",
                    "sid": 107,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since (k~, '12, y, '0, ~, ~) is computabh'.",
                    "sid": 108,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "for some elfeetiw; function GEN, for e~ch linite Q c O, GER(Q) = a list of the total functions from Q to (_'~, for some effectiw~ fimction TESTI, for each finite set Q, each tlnite partiM function ~ from the Caxtesmn product, of Q and ~[ 1.o Q, ~md each total flmction 0 from O to %, if for (,,.'h (q, ~) in the domMn of 5, N(O(q), ev) is de.fined, arm a(0(q), ,,,) ~ off(q, .)) then TESTI(~, O) ~ 'true' otherwise TEST1(6, 0) = 'false', and for seine et['ectiw~ flmction TEST2, lbr e;~ch tinite set Q, each total function 01 from Q to % ~md e~Lcll total fimction 0~ from Q to %, if fo,' e[tch (l ~ (~}, 01(q) ~-~02((1) thell TEST2(01,02) 7_- 'tr/10' otherwise TESTu(0t, 0~) = 'false'.",
                    "sid": 109,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Construct RES ,as follows: for each fe;tl.ure s|;rtl(:[,llre ((v), q, {5, 0), while Ei, , az (p, Pl,..., fli) is not clnl)ty do set, )21,, = (pt,...,pi) if TESTI ((5, p) _--.",
                    "sid": 110,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "%rue', TEST2(0, p) = 'true', and >~,,,,~= <,i,,..,,}) th,,.,, ~,t ~o,,~ = (,,,I,...,4> if Eo,,t --([q ....",
                    "sid": 111,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", p.)",
                    "sid": 112,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "t,h~.",
                    "sid": 113,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "o,,q..",
                    "sid": 114,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "((O, q, ~, .,>,,.,, (q, q, ~,.,.)).",
                    "sid": 115,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "RES is an effect.ive algorithm, and for e4u;h foalAIl:e s[;i?llCtltr(~ 1\", RgS(/\") --~ list of the resolwml, s of l c. ii Theorem 27.",
                    "sid": 116,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "/f (k~,~, ~, ~,~,~) is rational and computable then for some eflbctive function SAT, for each feature structure F, if F is satisfiable then SAT(F) = 'true otherwise SAT(F) = 'false'.",
                    "sid": 117,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Proof, From theorem 24 and proposition 26.",
                    "sid": 118,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Gerdemann and G6tz's Troll system (see [G6Tz 1993], [GFRDEIVIANN AND KING 1994] and [GERDEMANN (FC)]) employs an efficient refinement of RES to test the satisfiability of feature structures.",
                    "sid": 119,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In fact, Troll represents each feature structure as a disjunction of the resolvants of the feature structure.",
                    "sid": 120,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Loosely speaking, the resolvants of a feature structure have the same underlying finite state automaton as the feature structure, and differ only in their output fllnction.",
                    "sid": 121,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Troll exploits this property to represent each feature structure as a finite state automaton and a set of output flmctions.",
                    "sid": 122,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The '1\u0104oll unifier is closed on these representations.",
                    "sid": 123,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, though RES is computationally expensive, Troll uses RES only during compilation, never during run time.",
                    "sid": 124,
                    "ssid": 22,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}