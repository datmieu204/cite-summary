{
    "ID": "P03-1028",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "In this paper, we present a learning approach to the scenario template task of information extraction, where information filling one template could come from multiple sentences.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When tested on the MUC4 task, our learning approach achieves accuracy competitive to the best of the MUC4 systems, which were all built with manually engineered rules.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our analysis reveals that our use of full parsing and state-of-the-art learning algorithms have contributed to the good performance.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To our knowledge, this is the first research to have demonstrated that a learning approach to the full-scale information extraction task could achieve performance rivaling that of the knowledge- engineering approach.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "The explosive growth of online texts written in natural language has prompted much research into information extraction (IE), the task of automatically extracting specific information items of interest from natural language texts.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The extracted information is used to fill database records, also known as templates in the IE literature.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Research efforts on IE tackle a variety of tasks.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They include extracting information from semi- structured texts, such as seminar announcements, rental and job advertisements, etc., as well as from free texts, such as newspaper articles (Soderland, 1999).",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "IE from semi-structured texts is easier than from free texts, since the layout and format of a semi-structured text provide additional useful clues AYACUCHO, 19 JAN 89 \u2013 TODAY TWO PEOPLE WERE WOUNDED WHEN A BOMB EXPLODED IN SAN JUAN BAUTISTA MUNICIPALITY.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "OFFICIALS SAID THAT SHINING PATH MEMBERS WERE RESPONSIBLE FOR THE ATTACK ...",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "POLICE SOURCES STATED THAT THE BOMB ATTACK INVOLVING THE SHINING PATH CAUSED SERIOUS DAMAGES ...",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1: Snippet of a MUC4 document to aid in extraction.",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several benchmark data sets have been used to evaluate IE approaches on semi- structured texts (Soderland, 1999; Ciravegna, 2001; Chieu and Ng, 2002a).",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the task of extracting information from free texts, a series of Message Understanding Conferences (MUC) provided benchmark data sets for evaluation.",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Several subtasks for IE from free texts have been identified.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The named entity (NE) task extracts person names, organization names, location names, etc. The template element (TE) task extracts information centered around an entity, like the acronym, category, and location of a company.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The template relation (TR) task extracts relations between entities.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, the full-scale IE task, the scenario template (ST) task, deals with extracting generic information items from free texts.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To tackle the full ST task, an IE system needs to merge information from multiple sentences in general, since the information needed to fill one template can come from multiple sentences, and thus discourse processing is needed.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The full-scale ST task is considerably harder than all the other IE tasks or subtasks outlined above.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As is the case with many other natural language processing (NLP) tasks, there are two main approaches to IE, namely the knowledge-engineering approach and the learning approach.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most early IE systems adopted the knowledge-engineering ap 0 MESSAGE: ID TST3MUC4-0014.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 MESSAGE: TEMPLATE 1.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "incident: date 19-jan-89. ",
            "number": "2",
            "sents": [
                {
                    "text": "(MUNICIPALITY) 4 INCIDENT: TYPE BOMBING.",
                    "sid": 24,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 INCIDENT: STAGE OF EXECUTION ACCOMPLISHED.",
                    "sid": 25,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 INCIDENT: INSTRUMENT ID \u201cBOMB\u201d.",
                    "sid": 26,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 INCIDENT: INSTRUMENT TYPE BOMB:\u201cBOMB\u201d.",
                    "sid": 27,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "8 PERP: INCIDENT CATEGORY TERRORIST ACT.",
                    "sid": 28,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 PERP: INDIVIDUAL ID \u201cSHINING PATH MEMBERS\u201d.",
                    "sid": 29,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "10 PERP: ORGANIZATION ID \u201cSHINING PATH\u201d.",
                    "sid": 30,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "11 PERP: ORGANIZATION SUSPECTED OR ACCUSED BY.",
                    "sid": 31,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "CONFIDENCE AUTHORITIES:\u201cSHINING PATH\u201d 12 PHYS TGT: ID -.",
                    "sid": 32,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "13 PHYS TGT: TYPE -.",
                    "sid": 33,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "14 PHYS TGT: NUMBER -.",
                    "sid": 34,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "15 PHYS TGT: FOREIGN NATION -.",
                    "sid": 35,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "16 PHYS TGT: EFFECT OF INCIDENT SOME DAMAGE:\u201c-\u201d.",
                    "sid": 36,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "17 PHYS TGT: TOTAL NUMBER -.",
                    "sid": 37,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "18 HUM TGT: NAME -.",
                    "sid": 38,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "19 HUM TGT: DESCRIPTION \u201cPEOPLE\u201d.",
                    "sid": 39,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "20 HUM TGT: TYPE CIVILIAN:\u201cPEOPLE\u201d.",
                    "sid": 40,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "21 HUM TGT: NUMBER 2:\u201cPEOPLE\u201d.",
                    "sid": 41,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "22 HUM TGT: FOREIGN NATION -.",
                    "sid": 42,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "23 HUM TGT: EFFECT OF INCIDENT INJURY:\u201cPEOPLE\u201d.",
                    "sid": 43,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "24 HUM TGT: TOTAL NUMBER -.",
                    "sid": 44,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 2: Example of a MUC4 template proach, where manually engineered rules were used for IE.",
                    "sid": 45,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "More recently, machine learning approaches have been used for IE from semi-structured texts (Califf and Mooney, 1999; Soderland, 1999; Roth and Yih, 2001; Ciravegna, 2001; Chieu and Ng, 2002a), named entity extraction (Chieu and Ng, 2002b), template element extraction, and template relation extraction (Miller et al., 1998).",
                    "sid": 46,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These machine learning approaches have been successful for these tasks, achieving accuracy comparable to the knowledge-engineering approach.",
                    "sid": 47,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, for the full-scale ST task of generic IE from free texts, the best reported method to date is still the knowledge-engineering approach.",
                    "sid": 48,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, almost all participating IE systems in MUC used the knowledge-engineering approach for the full-scale ST task.",
                    "sid": 49,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The one notable exception is the work of UMass at MUC6 (Fisher et al., 1995).",
                    "sid": 50,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Unfortunately, their learning approach did considerably worse than the best MUC6 systems.",
                    "sid": 51,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Soder- land (1999) and Chieu and Ng (2002a) attempted machine learning approaches for a scaled-down version of the ST task, where it was assumed that the information needed to fill one template came from one sentence only.",
                    "sid": 52,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we present a learning approach to the full-scale ST task of extracting information from free texts.",
                    "sid": 53,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task we tackle is considerably more complex than that of (Soderland, 1999; Chieu and Ng, 2002a), since we need to deal with merging information from multiple sentences to fill one template.",
                    "sid": 54,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated our learning approach on the MUC4 task of extracting terrorist events from free texts.",
                    "sid": 55,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We chose the MUC4 task since manually prepared templates required for training are available.1 When trained and tested on the official benchmark data of MUC4, our learning approach achieves accuracy competitive with the best MUC4 systems, which were all built using manually engineered rules.",
                    "sid": 56,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To our knowledge, our work is the first learning-based approach to have achieved performance competitive with the knowledge-engineering approach on the full-scale ST task.",
                    "sid": 57,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 Task Definition.",
                    "sid": 58,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The task addressed in this paper is the Scenario Template (ST) task defined in the Fourth Message Understanding Conference (MUC4).2 The objective of this task is to extract information on terrorist events occurring in Latin American countries from free text documents.",
                    "sid": 59,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, given the input document in Figure 1, an IE system is to extract information items related to any terrorist events to fill zero or more database records, or templates.",
                    "sid": 60,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each distinct terrorist event is to fill one template.",
                    "sid": 61,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An example of an output template is shown in Figure 2.",
                    "sid": 62,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each of the 25 fields in the template is called a slot, and the string or value that fills a slot is called a slot fill.",
                    "sid": 63,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Different slots in the MUC4 template need to be treated differently.",
                    "sid": 64,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Besides slot 0 (MESSAGE: ID) and slot 1 (MESSAGE: TEMPLATE), the other 23 slots have to be extracted or inferred from the text document.",
                    "sid": 65,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These slots can be divided into the following categories: String Slots.",
                    "sid": 66,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These slots are filled using strings extracted directly from the text document (slot 6, 9, 10, 12, 18, 19).",
                    "sid": 67,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Text Conversion Slots.",
                    "sid": 68,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "These slots have to be inferred from strings in the document (slot 2, 14, 17, 21, 24).",
                    "sid": 69,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, INCIDENT: DATE has tobe inferred from temporal expressions such as \u201cTO 1http://www.itl.nist.gov/iaui/894.02/related projects/muc/ muc data/muc data index.html 2The full-scale IE task is called the ST task only in MUC6 and MUC7, when other subtasks like NE and TE tasks were defined.",
                    "sid": 70,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Here, we adopted this terminology also in describing the full-scale IE task for MUC4.",
                    "sid": 71,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 3: ALICE: our information extraction system DAY\u201d, \u201cLAST WEEK\u201d, etc. Set Fill Slots.",
                    "sid": 72,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This category includes the rest of the slots.",
                    "sid": 73,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The value of a set fill slot comes from a finite set of possible values.",
                    "sid": 74,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They often have to be inferred from the document.",
                    "sid": 75,
                    "ssid": 52,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "the learning approach. ",
            "number": "3",
            "sents": [
                {
                    "text": "Our supervised learning approach is illustrated in Figure 3.",
                    "sid": 76,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our system, called ALICE (Automated Learning-based Information Content Extraction), requires manually extracted templates paired with their corresponding documents that contain terrorist events for training.",
                    "sid": 77,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After the training phase, ALICE is then able to extract relevant templates from new documents, using the model learnt during training.In the training phase, each input training docu ment is first preprocessed through a chain of preprocessing modules.",
                    "sid": 78,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The outcome of the preprocessing is a full parse tree for each sentence, and coreference chains linking various coreferring noun phrases both within and across sentences.",
                    "sid": 79,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The core of AL- ICE uses supervised learning to build one classifier for each string slot.",
                    "sid": 80,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The candidates to fill a template slot are base (non-recursive) noun phrases.",
                    "sid": 81,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A noun phrase that occurs in a training document and fills a template slot is used to generate one positive training example for the classifier of slot . Other noun phrases in the training document are negative training examples for the classifier of slot . The features of a training example generated from are the verbs and other noun phrases (serving roles like agent and patient) related to in the same sentence, as well as similar features for coreferring noun phrases of . Thus, our features for a template slot classifier encode semantic (agent and patient roles) and discourse (coreference) information.",
                    "sid": 82,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our experimental results in this paper demonstrate that such features are effective in learning what to fill a template slot.",
                    "sid": 83,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During testing, a new document is preprocessed through the same chain of preprocessing modules.",
                    "sid": 84,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each candidate noun phrase generates one test example, and it is presented to the classifier of a template slot to determine whether fills the slot . A separate template manager decides whether a new template should be created to include slot , or slot should fill the existing template.",
                    "sid": 85,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Preprocessing.",
                    "sid": 86,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "All the preprocessing modules of ALICE were built with supervised learning techniques.",
                    "sid": 87,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They include sentence segmentation (Ratnaparkhi, 1998), part-of- speech tagging (Charniak et al., 1993), named entity recognition (Chieu and Ng, 2002b), full parsing (Collins, 1999), and coreference resolution (Soon et al., 2001).",
                    "sid": 88,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each module performs at or near state- of-the-art accuracy, but errors are unavoidable, and later modules in the preprocessing chain have to deal with errors made by the previous modules.",
                    "sid": 89,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2 Features in Training and Test Examples.",
                    "sid": 90,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As mentioned earlier, the features of an example are generated based on a base noun phrase (denoted as baseNP), which is a candidate for filling a template slot.",
                    "sid": 91,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While most strings that fill a string slot are base noun phrases, this is not always the case.",
                    "sid": 92,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, consider the two examples in Figure 4.",
                    "sid": 93,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the first example, \u201cBOMB\u201d should fill the string slot INCIDENT: INSTRUMENT ID, while in the second example, \u201cFMLN\u201d should fill the string slot PERP: ORGANIZATION ID. However, \u201cBOMB\u201d is itself not a baseNP (the baseNP is \u201cA BOMB EXPLOSION\u201d).",
                    "sid": 94,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly for \u201cFMLN\u201d.",
                    "sid": 95,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As such, a string that fills a template slot but is itself not a baseNP (like \u201cBOMB\u201d) is also used to generate a training example, by using its smallest encompassing noun phrase (like \u201cA BOMB EXPLO (1) ONE PERSON WAS KILLED TONIGHT AS THE RESULT OF A BOMB EXPLOSION IN SAN SALVADOR.",
                    "sid": 96,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2) FORTUNATELY, NO CASUALTIES WERE REPORTED AS A RESULT OF THIS INCIDENT, FOR WHICH THE FMLN GUERRILLAS ARE BEING HELD RESPONSIBLE.",
                    "sid": 97,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 4: Sentences illustrating string slots that cannot be filled by baseNPs.",
                    "sid": 98,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(1) MEMBERS OF THAT SECURITY GROUP ARE COMBING THE AREA TO DETERMINE THE FINAL OUTCOME OF THE FIGHTING.(2) A BOMB WAS THROWN AT THE HOUSE OF FRE DEMO CANDIDATE FOR DEPUTY MIGUEL ANGEL BARTRA BY TERRORISTS.",
                    "sid": 99,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 5: Sample sentences for the illustration of features SION\u201d) to generate the training example features.",
                    "sid": 100,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During training, a list of such words is compiled for slots 6 and 10 from the training templates.",
                    "sid": 101,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During testing, these words are also used as candidates for generating test examples for slots 6 and 10, in addition to base NPs.",
                    "sid": 102,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The features of an example are derived from the treebank-style parse tree output by an implementation of Collins' parser (Collins, 1999).",
                    "sid": 103,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In particular, we traverse the full parse tree to determine the verbs, agents, patients, and indirect objects related to a noun phrase candidate . While a machine learning approach is used in (Gildea and Jurafsky, 2000) to determine general semantic roles, we used a simple rule-based traversal of the parse tree instead, which could also reliably determine the generic agent and patient role of a sentence, and this suffices for our current purpose.",
                    "sid": 104,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, for a given noun phrase candidate , the following groups of features are used: Verb of Agent NP (VAg) When is an agent in a sentence, each of its associated verbs is a VAg feature.",
                    "sid": 105,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in sentence (1) of Figure 5, if is MEMBERS, then its VAg features are COMB and DETERMINE.",
                    "sid": 106,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb of Patient NP (VPa) When is a patient in a sentence, each of its associated verbs is a VPa feature.",
                    "sid": 107,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in sentence (2) of Figure 5, if is BOMB, then its VPa feature is THROW.",
                    "sid": 108,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Verb-Preposition of NP-in-PP (V-Prep) When is the NP in a prepositional phrase PP, then this feature is the main verb and the preposition of PP.",
                    "sid": 109,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in sentence (2) of Figure 5, if is HOUSE, its V-Prep feature is THROW-AT.",
                    "sid": 110,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "VPa and related NPs/PPs (VPaRel) If is a patient in a sentence, each of its VPa may have its own agents (Ag) and prepositional phrases (Prep- NP).",
                    "sid": 111,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, the tuples (VPa, Ag) and (VPa, Prep-NP) are used as features.",
                    "sid": 112,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in \u201cGUARDS WERE SHOT TO DEATH\u201d, if is GUARDS, then its VPa SHOOT, and the prepositional phrase TO-DEATH form the feature (SHOOT, TO-DEATH).",
                    "sid": 113,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "VAg and related NPs/PPs (VAgRel) This is similar to VPa above, but for VAg.",
                    "sid": 114,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "V-Prep and related NPs (V-PrepRel) When is the NP in a prepositional phrase PP, then the main verb (V) may have its own agents (Ag) and patients (Pa).",
                    "sid": 115,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, the tuples (Ag, V-Prep) and (V-Prep, Pa) are used as features.",
                    "sid": 116,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, HOUSE in sentence (2) of Figure 5 will have the features (TERRORIST, THROW-AT) and (THROW- AT, BOMB).",
                    "sid": 117,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Noun-Preposition (N-Prep) This feature aims at capturing information in phrases such as \u201cMURDER OF THE PRIESTS\u201d.",
                    "sid": 118,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If is PRIESTS, this feature will be MURDER-OF.",
                    "sid": 119,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Head Word (H) The head word of each is also used as a feature.",
                    "sid": 120,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a parse tree, there is a head word at each tree node.",
                    "sid": 121,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In cases where a phrase does not fit into a parse tree node, the last word of the phrase is used as the head word.",
                    "sid": 122,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This feature is useful as the system has no information of the semantic class of . From the head word, the system can get some clue to help decide if is a possible candidate for a slot.",
                    "sid": 123,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, an with head word PEASANT is more likely to fill the human target slot compared to another with head word CLASH.",
                    "sid": 124,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Named Entity Class (NE) The named entity class of is used as a feature.",
                    "sid": 125,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Real Head (RH) For a phrase that does not fit into a parse node, the head word feature is taken to be the last word of the phrase.",
                    "sid": 126,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The real head word of its encompassing parse node is used as another feature.",
                    "sid": 127,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in the NP \u201cFMLN GUERRILLAS\u201d, \u201cFMLN\u201d is a positive example for slot 10, with head word \u201cFMLN\u201d and real head \u201cGUERRILLA\u201d.",
                    "sid": 128,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Coreference features Coreference chains found by our coreference resolution module based on decision tree learning are used to determine the noun phrases that corefer with . In particular, we use the two noun phrases and , where ( ) is the noun phrase that corefers with and immediately precedes (follows) . If such a preceding (or following) noun phrase exists, we generate the following features based on : VAg, VPa, and N-Prep.",
                    "sid": 129,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To give an idea of the informative features used in the classifier of a slot, we rank the features used for a slot classifier according to their correlation metric values (Chieu and Ng, 2002a), where informative features are ranked higher.",
                    "sid": 130,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 1 shows the top-ranking features for a few feature groups and template slots.",
                    "sid": 131,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The bracketed number behind each feature indicates the rank of this feature for that slot classifier, ordered by the correlation metric value.",
                    "sid": 132,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We observed that certain feature groups are more useful for certain slots.",
                    "sid": 133,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, DIE is the top VAg verb for the human target slot, and is ranked 12 among all features used for the human target slot.",
                    "sid": 134,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the other hand, VAg is so unimportant for the physical target slot that the top VAg verb is due to a preprocessing error that made MONSERRAT a verb.",
                    "sid": 135,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Supervised Learning Algorithms.",
                    "sid": 136,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We evaluated four supervised learning algorithms.",
                    "sid": 137,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Maximum Entropy Classifier (Alice-ME) The maximum entropy (ME) framework is a recent learning approach which has been successfully used in various NLP tasks such as sentence segmentation, part-of-speech tagging, and parsing (Ratnaparkhi, 1998).",
                    "sid": 138,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, to our knowledge, ours is the first research effort to have applied ME learning to the full-scale ST task.",
                    "sid": 139,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used the implementation of maximum entropy modeling from the opennlp.maxent package.3 . Support Vector Machine (AliceSVM) The Support Vector Machine (SVM) (Vapnik, 1995) has been successfully used in many recent applications such as text categorization and handwritten digit recognition.",
                    "sid": 140,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The learning algorithm finds a hyper- plane that separates the training data with the largest margin.",
                    "sid": 141,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used a linear kernel for all our experiments.",
                    "sid": 142,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3http://maxent.sourceforge.net Naive Bayes (AliceNB) The Naive Bayes (NB) algorithm (Duda and Hart, 1973) assumes the independence of features given the class and assigns a test example to the class which has the highest posterior probability.",
                    "sid": 143,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Add-one smoothing was used.",
                    "sid": 144,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Decision Tree (AliceDT) The decision tree (DT) algorithm (Quinlan, 1993) partitions training examples using the feature with the highest information gain.",
                    "sid": 145,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It repeats this process recursively for each partition until all examples in each partition belong to one class.We used the WEKA package4 for the implemen tation of SVM, NB, and DT algorithms.",
                    "sid": 146,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A feature cutoff is used for each algorithm: features occurring less than times are rejected.",
                    "sid": 147,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For all experiments, is set to 3.",
                    "sid": 148,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For ME and SVM, no other feature selection is applied.",
                    "sid": 149,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For NB and DT, the top 100 features as determined by chi-square are selected.",
                    "sid": 150,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "While not trying to do a serious comparison of machine learning algorithms, ME and SVM seem to be able to perform well without feature selection, whereas NB and DT require some form of feature selection in order to perform reasonably well.",
                    "sid": 151,
                    "ssid": 76,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4 Template Manager.",
                    "sid": 152,
                    "ssid": 77,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As each sentence is processed, phrases classified as positive for any of the string slots are sent to the Template Manager (TM), which will decide if a new template should be created when it receives a new slot fill.",
                    "sid": 153,
                    "ssid": 78,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The system first attempts to attach a date and a location to each slot fill . Dates and locations are first attached to their syntactically nearest verb, by traversing the parse tree.",
                    "sid": 154,
                    "ssid": 79,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then, for each string fill , we search its syntactically nearest verb in the same manner and assign the date and location attached to to . When a new slot fill is found, the Template Manager will decide to start a new template if one of the following conditions is true: Date The date attached to the current slot fill is different from the date of the current template.",
                    "sid": 155,
                    "ssid": 80,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Location The location attached to the current slot fill is not compatible with the location of the current template (one location does not contain the other).",
                    "sid": 156,
                    "ssid": 81,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4http://www.cs.waikato.ac.nz/ml/weka Slot VAg VPa V-Prep N-Prep Human Target Perpetrator Individual Physical Target Perpetrator Organization Instrument ID DIE(12) KIDNAP(5) MONSERRAT(420) KIDNAP(16) EXPLODE(4) KILL(2) IMPLICATE(17) DESTROY(1) BLAME(25) PLACE(5) IDENTIFY-AS(47) ISSUE-FOR(73) THROW-AT(32) SUSPEND-WITH(87) EQUIP-WITH(31) MURDER-OF(3) WARRANT-FOR(64) ATTACK-ON(11) GUERRILLA-OF(31) EXPLOSION-OF(17) Table 1: The top-ranking feature for each group of features and the classifier of a slot Incident Type Seed Words ATTACK JESUIT, MURDER, KILL, ATTACK BOMBING BOMB, EXPLOS, DYNAMIT, EXPLOD, INJUR KIDNAPPING KIDNAP, ELN, RELEAS Table 2: Stemmed seed words for each incident type This is determined by using location lists provided by the MUC4 conference, which specify whether one location is contained in another.",
                    "sid": 157,
                    "ssid": 82,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An entry in this list has the format of \u201cPLACE-NAME1:PLACE- NAME2\u201d, where PLACE-NAME2 is contained in PLACE-NAME1 (e.g., CUBA: HAVANA (CITY)).",
                    "sid": 158,
                    "ssid": 83,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Seed Word The sentence of the current slot fill contains a seed word for a different incident type.",
                    "sid": 159,
                    "ssid": 84,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A number of seed words are automatically learned for each of the incident types ATTACK, BOMBING, and KIDNAPPING.",
                    "sid": 160,
                    "ssid": 85,
                    "kind_of_tag": "s"
                },
                {
                    "text": "They are automatically derived based on the correlation metric value used in (Chieu and Ng, 2002a).",
                    "sid": 161,
                    "ssid": 86,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For the remaining incident types, there are too few incidents in the training data for seed words to be collected.",
                    "sid": 162,
                    "ssid": 87,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The seeds words used are shown in Table 2.",
                    "sid": 163,
                    "ssid": 88,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.5 Enriching Templates.",
                    "sid": 164,
                    "ssid": 89,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the last stage before output, the template content is further enriched in the following manner: Removal of redundant slot fills For each slot in the template, there might be several slot fills referring to the same thing.",
                    "sid": 165,
                    "ssid": 90,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, for HUM TGT: DESCRIPTION, the system might have found both \u201cPRIESTS\u201d and \u201cJESUIT PRIESTS\u201d.",
                    "sid": 166,
                    "ssid": 91,
                    "kind_of_tag": "s"
                },
                {
                    "text": "A slot fill that is a substring of another slot fill will be removed from the template.",
                    "sid": 167,
                    "ssid": 92,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Effect/Confidence and Type Classifiers are also trained for effect and confidence slots 11, 16, and 23 (ES slots), as well as type slots 7, 13, and 20 (TS slots).",
                    "sid": 168,
                    "ssid": 93,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ES slots used exactly the same features as string slots, while TS slots used only head words and adjectives as features.",
                    "sid": 169,
                    "ssid": 94,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For such slots, each entry refers to another slot fill.",
                    "sid": 170,
                    "ssid": 95,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, slot 23 may contain the entry \u201cDEATH\u201d : \u201cPRIESTS\u201d, where \u201cPRIESTS\u201d fills slot 19.",
                    "sid": 171,
                    "ssid": 96,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During training, each training example is a fill of a reference slot (e.g., for slot 23, the reference slots are slot 18 and 19).",
                    "sid": 172,
                    "ssid": 97,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For slot 23, for example, each instance will have a class such as DEATH or INJURY, or if there is no entry in slot 23, UNKNOWN EFFECT.",
                    "sid": 173,
                    "ssid": 98,
                    "kind_of_tag": "s"
                },
                {
                    "text": "During testing, slot fills of reference slots will be classified to determine if they should have an entry in an ES or a TS slot.",
                    "sid": 174,
                    "ssid": 99,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Date and Location.",
                    "sid": 175,
                    "ssid": 100,
                    "kind_of_tag": "s"
                },
                {
                    "text": "If the system is unable to fill the DATE or LOCATION slot of a template, it will use as default value the date and country of the city in the dateline of the document.",
                    "sid": 176,
                    "ssid": 101,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Other Slots.",
                    "sid": 177,
                    "ssid": 102,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The remaining slots are filled with default values.",
                    "sid": 178,
                    "ssid": 103,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, slot 5 has the default value \u201cACCOMPLISHED\u201d, and slot 8 \u201cTERRORIST ACT\u201d (except when the perpetrator contains strings such as \u201cGOVERNMENT\u201d, in which case it will be changed to \u201cSTATE-SPONSORED VIOLENCE\u201d).",
                    "sid": 179,
                    "ssid": 104,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Slot 15, 17, 22, and 24 are always left unfilled.",
                    "sid": 180,
                    "ssid": 105,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "evaluation. ",
            "number": "4",
            "sents": [
                {
                    "text": "There are 1,300 training documents, of which 700 are relevant (i.e., have one or more event templates).",
                    "sid": 181,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "There are two official test sets, i.e., TST3 and TST4, containing 100 documents each.",
                    "sid": 182,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We trained our system ALICE using the 700 documents with relevant templates, and then tested it on the two official test sets.",
                    "sid": 183,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The output templates were scored using the scorer provided on the official website.",
                    "sid": 184,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The accuracy figures of ALICE (with different learning algorithms) on string slots and all slots are listed in Table 3 and Table 4, respectively.",
                    "sid": 185,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Accuracy is measured in terms of recall (R), precision (P), and F-measure (F).",
                    "sid": 186,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also list in the two tables the accuracy figures of the top 7 (out of a total of 17) systems that participated in MUC4.",
                    "sid": 187,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The accuracy figures in the two tables are obtained by running the official scorer on the output templates of ALICE, and those of the MUC4 participating systems (available Test set/slots Systems in the same group TST3/string GECMU, SRI, UMASS, NYU TST4/string GECMU, AliceSVM, NYU, SRI, AliceDT, UMASS TST3/all GECMU, UMASS, SRI, NYU TST4/all SRI, NYU, UMASS, AliceSVM, AliceDT, BBN Table 5: Systems whose F-measures are not significantly different from Alice-ME at the 0.10 significance level with 0.99 confidence Table 3: Accuracy of string slots on the TST3 and TST4 test set Table 6: Accuracy of string slots with and without full parsing Table 4: Accuracy of all slots on the TST3 and TST4 test set on the official web site).",
                    "sid": 188,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The same history file downloaded from the official web site is uniformly used for scoring the output templates of all systems (the history file contains the arbitration decisions for ambiguous cases).",
                    "sid": 189,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We conducted statistical significance test, using the approximate randomization method adopted in MUC4.",
                    "sid": 190,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Table 5 shows the systems that are not significantly different from Alice-ME. Our system ALICE-ME, using a learning approach, is able to achieve accuracy competitive to the best of the MUC4 participating systems, which were all built using manually engineered rules.",
                    "sid": 191,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also observed that ME and SVM, the more recent machine learning algorithms, performed better than DT and NB.",
                    "sid": 192,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Full Parsing.",
                    "sid": 193,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To illustrate the benefit of full parsing, we conducted experiments using a subset of features, with and without full parsing.",
                    "sid": 194,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We used ME as the learning algorithm in these experiments.",
                    "sid": 195,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results on string slots are summarized in Table 6.",
                    "sid": 196,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The baseline system used only two features, head word (H) and named entity class (NE).",
                    "sid": 197,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, we added three features, VAg, VPa, and V-Prep.",
                    "sid": 198,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Without full parsing, these verbs were obtained based on the immediately preceding (or following) verb of a noun phrase, and the voice of the verb.",
                    "sid": 199,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With full parsing, these verbs were obtained based on traversing the full parse tree.",
                    "sid": 200,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The results indicate that verb features contribute to the performance of the system, even without full parsing.",
                    "sid": 201,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With full parsing, verbs can be determined more accurately, leading to better overall performance.",
                    "sid": 202,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 Discussion Although the best MUC4 participating systems, GE/GECMU, still outperform ALICE-ME, it must be noted that for GE, \u201c10 1/2 person months\u201d were spent on MUC4 using the GE NLTOOLSET , after spending \u201c15 person months\u201d on MUC3 (Rau et al., 1992).",
                    "sid": 203,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "With a learning approach, IE systems are more portable across domains.",
                    "sid": 204,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Not all occurrences of a string in a document that match a slot fill of a template provide good positive training examples.",
                    "sid": 205,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, in the same document, there might be the following sentences \u201cTHE MNR REPORTS THE KIDNAPPING OF OQUELI COLINDRES...\u201d, followed by \u201cOQUELI COLINDRES ARRIVED IN GUATEMALA ON 11 JANUARY\u201d.",
                    "sid": 206,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this case, only the first occurrence of OQUELI COLINDRES should be used as a positive example for the human target slot.",
                    "sid": 207,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, ALICE does not have access to such information, since the MUC4 training documents are not annotated (i.e., only templates are provided, but the text strings in a document are not marked).",
                    "sid": 208,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, ALICE currently uses all occurrences of \u201cOQUELI COLINDRES\u201d as positive training examples, which introduces noise in the training data.",
                    "sid": 209,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We believe that annotating the string occurrences in training documents will provide higher quality training data for the learning approach and hence further improve accuracy.",
                    "sid": 210,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Although part-of-speech taggers often boast of accuracy over 95%, the errors they make can be fatal to the parsing of sentences.",
                    "sid": 211,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For example, they often tend to confuse \u201cVBN\u201d with \u201cVBD\u201d, which could change the entire parse tree.",
                    "sid": 212,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The MUC4 corpus was provided as uppercase text, and this also has a negative impact on the named entity recognizer and part-of-speech tagger, which both make use of case information.",
                    "sid": 213,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Learning approaches have been shown to perform on par or even outperform knowledge-engineering approaches in many NLP tasks.",
                    "sid": 214,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, the full-scale scenario template IE task was still dominated by knowledge-engineering approaches.",
                    "sid": 215,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we demonstrate that using both state- of-art learning algorithms and full parsing, learning approaches can rival knowledge-engineering ones, bringing us a step closer to building full-scale IE systems in a domain-independent fashion with state- of-the-art accuracy.",
                    "sid": 216,
                    "ssid": 36,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "acknowledgements",
            "number": "",
            "sents": [
                {
                    "text": "We thank Kian Ming Adam Chai for the implementation of the full parser.",
                    "sid": 217,
                    "ssid": 37,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}