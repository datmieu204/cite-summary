{
    "ID": "C10-1018",
    "sections": [
        {
            "text": "abstract",
            "number": 0,
            "sents": [
                {
                    "text": "Relation extraction is the task of recognizing semantic relations among entities.",
                    "sid": 1,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a particular sentence supervised approaches to Relation Extraction employed feature or kernel functions which usually have a single sentence in their scope.",
                    "sid": 2,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The overall aim of this paper is to propose methods for using knowledge and resources that are external to the target sentence, as a way to improve relation extraction.",
                    "sid": 3,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We demonstrate this by exploiting background knowledge such as relationships among the target relations, as well as by considering how target relations relate to some existing knowledge resources.",
                    "sid": 4,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our methods are general and we suggest that some of them could be applied to other NLP tasks.",
                    "sid": 5,
                    "ssid": 5,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "introduction",
            "number": "1",
            "sents": [
                {
                    "text": "Relation extraction (RE) is the task of detecting and characterizing semantic relations expressed between entities in text.",
                    "sid": 6,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, given the sentence \u201cCone, a Kansas City native, was originally signed by the Royals and broke into the majors with the team.\u201d, one of the relations we might want to extract is the employment relation between the pair of entity mentions \u201cCone\u201d and \u201cRoyals\u201d.",
                    "sid": 7,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "RE is important for many NLP applications such as building an ontology of entities, biomedical information extraction, and question answering.",
                    "sid": 8,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Prior work have employed diverse approaches towards resolving the task.",
                    "sid": 9,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "One approach is to build supervised RE systems using sentences annotated with entity mentions and predefined target relations.",
                    "sid": 10,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When given a new sentence, the RE system has to detect and disambiguate the presence of any predefined relations that might exist between each of the mention pairs in the sentence.",
                    "sid": 11,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In building these systems, researchers used a wide variety of features (Kambhatla, 2004; Zhou et al., 2005; Jiang and Zhai, 2007).",
                    "sid": 12,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some of the common features used to analyze the target sentence include the words appearing in the sentence, their part-of- speech (POS) tags, the syntactic parse of the sentence, and the dependency path between the pair of mentions.",
                    "sid": 13,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In a related line of work, researchers have also proposed various kernel functions based on different structured representations (e.g. dependency or syntactic tree parses) of the target sentences (Bunescu and Mooney, 2005; Zhou et al., 2007; Zelenko et al., 2003; Zhang et al., 2006).",
                    "sid": 14,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Additionally, researchers have tried to automatically extract examples for supervised learning from resources such as Wikipedia (Weld et al., 2008) and databases (Mintz et al., 2009), or attempted open information extraction (IE) (Banko et al., 2007) to extract all possible relations.",
                    "sid": 15,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we focus on supervised RE.",
                    "sid": 16,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In prior work, the feature and kernel functions employed are usually restricted to being defined on the various representations (e.g. lexical or structural) of the target sentences.",
                    "sid": 17,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, in recognizing relations, humans are not thus constrained and rely on an abundance of implicit world knowledge or background information.",
                    "sid": 18,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "What quantifies as world or background knowledge is rarely explored in the RE literature and we do not attempt to provide complete nor precise definitions in this paper.",
                    "sid": 19,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we show that by considering the relationship between our relations of interest, as 152 Proceedings of the 23rd International Conference on Computational Linguistics (Coling 2010), pages 152\u2013160, Beijing, August 2010 well as how they relate to some existing knowledge resources, we improve the performance of RE.",
                    "sid": 20,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Specifically, the contributions of this paper are the following: \u2022 When our relations of interest are clustered or organized in a hierarchical ontology, we show how to use this information to improve performance.",
                    "sid": 21,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By defining appropriate con straints between the predictions of relations at different levels of the hierarchy, we obtain globally coherent predictions as well as improved performance.",
                    "sid": 22,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 Coreference is a generic relationship that might exists among entity mentions and we show how to exploit this information by assuming that co-referring mentions have no other interesting relations.",
                    "sid": 23,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We capture this intuition by using coreference information to constraint the predictions of a RE system.",
                    "sid": 24,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 When characterizing the relationship between a pair of mentions, one can use a large encyclopedia such as Wikipedia to infer more knowledge about the two mentions.",
                    "sid": 25,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, after probabilistically mapping mentions to their respective Wikipedia pages, we check whether the mentions are related.",
                    "sid": 26,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Another generic relationship that might exists between a pair of mentions is whether they have a parent-child relation and we use this as additional information.",
                    "sid": 27,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 The sparsity of features (especially lexical features) is a common problem for supervised systems.",
                    "sid": 28,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we show that one can make fruitful use of unlabeled data, by using word clusters automatically gathered from unlabeled texts as a way of generalizing the lexical features.",
                    "sid": 29,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2022 We combine the various relational predictions and background knowledge through a global inference procedure, which we formalize via an Integer Linear Programming (ILP) framework as a constraint optimization problem (Roth and Yih, 2007).",
                    "sid": 30,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This allows us to easily incorporate various constraints that encode the background knowledge.",
                    "sid": 31,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Roth and Yih (2004) develop a relation extraction approach that exploits constraints among entity types and the relations allowed among them.",
                    "sid": 32,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We extend this view significantly, within a similar computational framework, to exploit relations among target relations, background information and world knowledge, as a way to improve relation extraction and make globally coherent predictions.",
                    "sid": 33,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the rest of this paper, we first describe the features used in our basic RE system in Section 2.",
                    "sid": 34,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We then describe how we make use of background knowledge in Section 3.",
                    "sid": 35,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Section 4, we show our experimental results and perform analysis in Section 5.",
                    "sid": 36,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In Section 6, we discuss related work, before concluding in Section 7.",
                    "sid": 37,
                    "ssid": 37,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "relation extraction system. ",
            "number": "2",
            "sents": [
                {
                    "text": "In this section, we describe the features used in our basic relation extraction (RE) system.",
                    "sid": 38,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given a pair of mentions m1 and m2 occurring within the same sentence, the system predicts whether any of the predefined relation holds between the two mentions.",
                    "sid": 39,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since relations are usually asymmetric in nature, hence in all of our experiments, unless otherwise stated, we distinguish between the argument ordering of the two mentions.",
                    "sid": 40,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, we consider m1:emporg:m2 and m2:emporg:m1 to be distinct relation types.",
                    "sid": 41,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most of the features used in our system are based on the work in (Zhou et al., 2005).",
                    "sid": 42,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we propose some new collocation features inspired by word sense disambiguation (WSD).",
                    "sid": 43,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We give an overview of the features in Table 1.",
                    "sid": 44,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to space limitations, we only describe the collocation features and refer the reader to (Zhou et al., 2005) for the rest of the features.",
                    "sid": 45,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2.1 Collocation Features.",
                    "sid": 46,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Following (Zhou et al., 2005), we use a single word to represent the head word of a mention.",
                    "sid": 47,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since single words might be ambiguous or polysemous, we incorporate local collocation features which were found to be very useful for WSD.",
                    "sid": 48,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Given the head word hwm of a mention m, the collocation feature Ci,j refers to the sequence of tokens in the immediate context of hwm.",
                    "sid": 49,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The offsets i and j denote the position (relative to hwm) Category Feature Lexical hw of m1 hw of m2 hw of m1 , m2 BOW in m1 BOW in m2 single word between m1 , m2 BOW in between m1 , m2 bigrams in between m1 , m2 first word in between m1 , m2 last word in between m1 , m2 Collocations C\u22121,\u22121 , C+1,+1 C\u22122,\u22121 , C\u22121,+1 , C+1,+2 Structural m1 -in-m2 m2 -in-m1 #mentions between m1 , m2 any word between m1 , m2 M-lvl M-lvl of m1 , m2 and m1 , m2 E-maintype E-type m1 , m2 E-subtype m1 , m2 M-lvl and E-maintype m1 , m2 M-lvl and E-subtype m1 , m2 E-subtype and m1 -in-m2 m1 , m2 E-subtype and m2 -in-m1 Dependency path between m1 , m2 bag-of dep labels between m1 , m2 hw of m1 and dep-parent hw of m2 and dep-parent Table 1: Features in the basic RE system.",
                    "sid": 50,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The abbreviations are as follows.",
                    "sid": 51,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "hw: head word, M- lvl: mention level, E-type: entity type, dep-parent: the word\u2019s parent in the dependency tree.",
                    "sid": 52,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "of the first and last token of the sequence respectively.",
                    "sid": 53,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, C\u22121,+1 denotes a sequence of three tokens, consisting of the single token on the immediate left of hwm, the token hwm itself, and the single token on the immediate right of hwm.",
                    "sid": 54,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For each mention, we extract 5 features: C\u22121,\u22121, C+1,+1, C\u22122,\u22121, C\u22121,+1, and C+1,+2.",
                    "sid": 55,
                    "ssid": 18,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "using background knowledge. ",
            "number": "3",
            "sents": [
                {
                    "text": "Now we describe how we inject additional knowledge into our relation extraction system.",
                    "sid": 56,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.1 Hierarchy of Relations.",
                    "sid": 57,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When our relations of interest are arranged in a hierarchical structure, one should leverage this information to learn more accurate relation predic- tors.",
                    "sid": 58,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, assume that our relations are arranged in a two-level hierarchy and we learn two classifiers, one for disambiguating between the first level coarse-grained relations, and another for disambiguating between the second level fine-grained relations.",
                    "sid": 59,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since there are a lot more fine-grained relation types than coarse-grained relation types, we propose using the coarse-grained predictions which should intuitively be more reliable, to improve the fine-grained predictions.",
                    "sid": 60,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We show how to achieve this through defining appropriate constraints between the coarse-grained and fine-grained relations, which can be enforced through the Constrained Conditional Models framework (aka ILP) (Roth and Yih, 2007; Chang et al., 2008).",
                    "sid": 61,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to space limitations, we refer interested readers to the papers for more information on the CCM framework.",
                    "sid": 62,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By doing this, not only are the predictions of both classifiers coherent with each other (thus obtaining better predictions from both classifiers), but more importantly, we are effectively using the (more reliable) predictions of the coarse-grained classifier to constrain the predictions of the fine- grained classifier.",
                    "sid": 63,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To the best of our knowledge, this approach for RE is novel.",
                    "sid": 64,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this paper, we work on the NIST Automatic Content Extraction (ACE) 2004 corpus.",
                    "sid": 65,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ACE defines several coarse-grained relations such as employment/membership, geopolitical entity (GPE) affiliation, etc. Each coarse-grained relation is further refined into several fine-grained relations1 and each fine-grained relation has a unique parent coarse-grained relation.",
                    "sid": 66,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, the fine- grained relations employed as ordinary staff, employed as an executive, etc. are children relations of employment/membership.",
                    "sid": 67,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let mi and mj denote a pair of mentions i and j drawn from a document containing N mentions.",
                    "sid": 68,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let Ri,j denote a relation between mi and mj , and let R = {Ri,j }, where 1\u2264i, j\u2264N ; i/=j denote the set of relations in the document.",
                    "sid": 69,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Also, we denote the set of predefined coarse-grained relation types and fine-grained relation types as LRc and LRf respectively.",
                    "sid": 70,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since there could possibly be no relation between a mention pair, we add the null la bel to LRc and LRf , allowing our classifiers to predict null for Ri,j . Finally, for a fine-grained relation type rf , let V(rf ) denote its parent coarse grained relation type.",
                    "sid": 71,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 With the exception of the Discourse coarse-grained relation.",
                    "sid": 72,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We learn two classifiers, one for disambiguating between the coarse-grained relations and one for disambiguating between the fine-grained relations.",
                    "sid": 73,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let \u03b8c and \u03b8f denote the feature weights learned for predicting coarse-grained and fine- grained relations respectively.",
                    "sid": 74,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let pR(rc) = logPc(rc|mi, mj ; \u03b8c) be the log probability that relation R is predicted to be of coarse-grained relation type rc.",
                    "sid": 75,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, let pR(rf ) = logPf (rf |mi, mj ; \u03b8f ) be the log probability thatrelation R is predicted to be of fine-grained re lation type rf . Let x(R,rc) be a binary variable which takes on the value of 1 if relation R is labeled with the coarse-grained label rc.",
                    "sid": 76,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Similarly, let y(R,rf ) be a binary variable which takes on the value of 1 if relation R is labeled with the fine- grained label rf . Our objective function is then: art: Ei \u2208{gpe, org, per}, Ej \u2208{fac, gpe, veh, wea} emporg: Ei \u2208{gpe, org, per}, Ej \u2208{gpe, org, per} gpeaff: Ei \u2208{gpe, org, per}, Ej \u2208{gpe, loc} other-aff: Ei \u2208{gpe, org, per}, Ej \u2208{gpe, loc} per-soc: Ei \u2208{per}, Ej \u2208{per} Table 2: Entity type constraints.",
                    "sid": 77,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "which is a child of rc.",
                    "sid": 78,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The logical form of Equation (7) can be written as: y(R,rf ) \u21d2 x(R,V(rf )).",
                    "sid": 79,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This captures the inverse relation and states that if we assign rf to R, then we must also assign to R the relation type V(rf ), which is the parent of rf . Together, Equations (6) and (7) constrain the predictions of the coarse-grained and fine-grained classifiers to be coherent with each other.",
                    "sid": 80,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, max ) R\u2208R ) rc\u2208LRc pR(rc) \u00b7 x (R,rc) we note that one could automatically translate logical constraints into linear inequalities (Chang et + ) R\u2208R ) rf \u2208LRf pR(rf ) \u00b7 y(R,rf ) (1) al., 2008).",
                    "sid": 81,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This method is general and is applicable to subject to the following constraints: other NLP tasks where a hierarchy exists, such as WSD and question answering.",
                    "sid": 82,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, ) rc\u2208LRc ) x(R,rc) y = 1 \u2200R \u2208 R (2) = 1 \u2200R \u2208 R (3) in WSD, one can predict coarse grained and fine- grained senses using suitably defined sense inventories and then perform inference via ILP to obtain rf \u2208LRf (R,rf ) coherent predictions . x(R,rc) \u2208 {0, 1} \u2200R \u2208 R, rc \u2208 LRc (4) y(R,rf ) \u2208 {0, 1} \u2200R \u2208 R, rf \u2208 LRf (5) Equations (2) and (3) require that each relation can only be assigned one coarse-grained label and one fine-grained label.",
                    "sid": 83,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Equations (4) and (5) indicate that x(R,rc) and y(R,rf ) are binary variables.",
                    "sid": 84,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Two more constraints follow: ) 3.2 Entity Type Constraints.",
                    "sid": 85,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each mention in ACE-2004 is annotated with one of seven coarse-grained entity types: person (per), organization (org), location (loc), geopolitical entity (gpe), facility (fac), vehicle (veh), and weapon (wea).",
                    "sid": 86,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Roth and Yih (2007) had shown that entity type x(R,rc) \u2264 {rf \u2208LRf |V(rf )=rc} y(R,rf ) information is useful for constraining the possible labels that a relation R can assume.",
                    "sid": 87,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, \u2200R \u2208 R , rc \u2208 LRc (6)both mentions involved in a personal/social re per.",
                    "sid": 88,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, y(R,rf ) \u2264 x(R,V(rf )) \u2200R \u2208 R, rf \u2208 LRf (7) The logical form of Equation (6) can be written as: x(R,rc) \u21d2 y(R,rf1 ) \u2228 y(R,rf2 ) . . .",
                    "sid": 89,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u2228 y(R,rfn ), where rf1, rf2, . . .",
                    "sid": 90,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": ", rfn are (child) fine-grained relations of the coarse-grained relation rc.",
                    "sid": 91,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "This states that if we assign rc to relation R, then we must also assign to R a fine-grained relation rf lation must be of entity type we gather such information from the ACE-2004 documentation and inject it as constraints (on the coarse-grained relations) into our system.",
                    "sid": 92,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Due to space limitations, we do not state the constraint equations or objective function here, but we list the entity type constraints we imposed for each coarse-grained relation mi-R-mj in Table 22, where Ei (Ej ) denotes the allowed set of entity types for mention mi (mj ).",
                    "sid": 93,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Applying the entity type information improves the predictions of the coarse-grained classifier and this in turn could improve the predictions of the fine-grained classifier.",
                    "sid": 94,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.3 Using Coreference Information.",
                    "sid": 95,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We can also utilize the coreference relations among entity mentions.",
                    "sid": 96,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Assuming that we know mentions mi and mj are coreferent with each other, then there should be no relation between are represented in Wikipedia), we could use the content on their Wikipedia pages to check whether they are related.",
                    "sid": 97,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we use a Wiki system (Ratinov et al., 2010) which performs context-sensitive mapping of mentions to Wikipedia pages.",
                    "sid": 98,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In their work, the authors first identify phrases or mentions that could be mapped.",
                    "sid": 99,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The correct Wikipedia article for each mention is then probabilistically predicted using a combination of features based on Wikipedia hyperlink structure, semantic coherence, etc. The authors\u2019 own evalua them3.",
                    "sid": 100,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Let z be a binary variable which takes tion results indicate that the performance of theiron the value of 1 if mentions mi and mj are coref erent, and 0 if they are not.",
                    "sid": 101,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When z(i,j)=1, we capture the above intuition with the following con straints: system ranges from 70\u201380%.",
                    "sid": 102,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When given a pair of mentions and the system returns the Wikipedia page for either one of the mentions, we introduce a feature: z(i,j) \u2264 x(Ri,j ,null) (8) \uf8f1 i z(i,j) \u2264 y(Ri,j ,null) (9) which can be written in logical form as: z(i,j) \u21d2 w1(mi, mj ) = \uf8f2 1, if Am (mj ) or Amj (mi) \uf8f3 0, otherwise x(Ri,j ,null), and z(i,j) \u21d2 y(Ri,j ,null).",
                    "sid": 103,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We add the following to our objective function in Equation (1): where Ami (mj ) returns true if the head extent of mj is found (via simple string matching) inthe predicted Wikipedia article of mi.",
                    "sid": 104,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The in terpretation of Amj (mi) is similar.",
                    "sid": 105,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We introduce ) mi ,mj \u2208m2 co(i,j) \u00b7 z(i,j) + c\u00afo (i,j) \u00b7 (1 \u2212 z(i,j) ) (10) a new feature into the RE system by combining w1(mi, mj ) with mi, mj E maintype (defined as in Table 1).",
                    "sid": 106,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "where m is the set of mentions in a document, co(i,j) and c\u00afo(i,j) are the log probabilities of predicting that mi and mj are coreferent and not coreferent respectively.",
                    "sid": 107,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we assume we are given coreference information, which is available from the ACE annotation.",
                    "sid": 108,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.4 Using Knowledge from Wikipedia.",
                    "sid": 109,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We propose two ways of using Wikipedia to gather features for relation extraction.",
                    "sid": 110,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Wikipedia is a huge online encyclopedia and mainly contains articles describing entities or concepts.",
                    "sid": 111,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The first intuition is that if we are able to correctly map a pair of mentions mi and mj to their corresponding Wikipedia article (assuming they 2 We do not impose entity type constraints on the coarse- grained relations disc and phys.",
                    "sid": 112,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 In this work, we assume that no relations are reflexive.",
                    "sid": 113,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "After the experiments in this paper are performed, we ver The second feature based on Wikipedia is as follows.",
                    "sid": 114,
                    "ssid": 59,
                    "kind_of_tag": "s"
                },
                {
                    "text": "It will be useful to check whether there is any parent-child relationship between two mentions.",
                    "sid": 115,
                    "ssid": 60,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Intuitively, this will be useful for recognizing several relations such as physical part-whole (e.g. a city is part of a state), subsidiary (a company is a child-company of another), citizenship (a person is a citizen of a country), etc. Given a pair of mentions mi and mj , we use a Parent-Child system (Do and Roth, 2010) to predict whether they have a parent-child relation.",
                    "sid": 116,
                    "ssid": 61,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To achieve this, the system first gathers all Wikipedia articles that are related to mi and mj . It then uses the words in these pages and the category ontology of Wikipedia to make its parent-child predictions, while respecting certain defined constraints.",
                    "sid": 117,
                    "ssid": 62,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we use its prediction as follows: ( 1, if parent-child(m , m ) ified that in the ACE corpus we used, less than 1% of the relations are reflexive.",
                    "sid": 118,
                    "ssid": 63,
                    "kind_of_tag": "s"
                },
                {
                    "text": "w2(mi, mj ) = i j 0, otherwise Figure 1: An example of Brown word cluster hierarchy from (Koo et al., 2008).",
                    "sid": 119,
                    "ssid": 64,
                    "kind_of_tag": "s"
                },
                {
                    "text": "where we combine w2(mi, mj ) with mi, mj E- maintype, introducing this as a new feature into our RE system.",
                    "sid": 120,
                    "ssid": 65,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.5 Using Word Clusters.",
                    "sid": 121,
                    "ssid": 66,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An inherent problem faced by supervised systems is that of data sparseness.",
                    "sid": 122,
                    "ssid": 67,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To mitigate such issues in the lexical features, we use word clusters which are automatically generated from unlabeled texts.",
                    "sid": 123,
                    "ssid": 68,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In this work, we use the Brown clustering algorithm (Brown et al., 1992), which has been shown to improve performance in various NLP applications such as dependency parsing (Koo et al., 2008), named entity recognition (Ratinov and Roth, 2009), and relation extraction (Boschee et al., 2005).",
                    "sid": 124,
                    "ssid": 69,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The algorithm performs a hierarchical clustering of the words and represents them as a binary tree.",
                    "sid": 125,
                    "ssid": 70,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each word is uniquely identified by its path from the root and every path is represented with a bit string.",
                    "sid": 126,
                    "ssid": 71,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Figure 1 shows an example clustering where the maximum path length is 3.",
                    "sid": 127,
                    "ssid": 72,
                    "kind_of_tag": "s"
                },
                {
                    "text": "By using path prefixes of different lengths, one can obtain clusterings at different granularity.",
                    "sid": 128,
                    "ssid": 73,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, using prefixes of length 2 will put apple and pear into the same cluster, Apple and IBM into the same cluster, etc. In our work, we use clusters generated from New York Times text and simply use a path prefix of length 10.",
                    "sid": 129,
                    "ssid": 74,
                    "kind_of_tag": "s"
                },
                {
                    "text": "When Brown clusters are used in our system, all lexical features consisting of single words will be duplicated.",
                    "sid": 130,
                    "ssid": 75,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, for the feature hw of m1, one new feature which is the length-10 bit string path representing the original lexical head word of m1, will be introduced and presented to the classifier as a string feature.",
                    "sid": 131,
                    "ssid": 76,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "experiments. ",
            "number": "4",
            "sents": [
                {
                    "text": "We used the ACE-2004 dataset (catalog LDC2005T09 from the Linguistic Data Consortium) to conduct our experiments.",
                    "sid": 132,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "ACE-2004 defines 7 coarse-grained relations and 23 fine- grained relations.",
                    "sid": 133,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In all of our experiments, unless otherwise stated, we explicitly model the argument order (of the mentions) when asked to disambiguate the relation between a pair of mentions.",
                    "sid": 134,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, we built our coarse-grained classifier with 15 relation labels to disambiguate between (two for each coarse-grained relation type and a null label when the two mentions are not related).",
                    "sid": 135,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Likewise, our fine-grained classifier has to disambiguate between 47 relation labels.",
                    "sid": 136,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the dataset, relations do not cross sentence boundaries.",
                    "sid": 137,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For our experiments, we trained regularized averaged perceptrons (Freund and Schapire, 1999), implemented within the Sparse Network of Winnow framework (Carlson et al., 1999), one for predicting the coarse-grained relations and another for predicting the fine-grained relations.",
                    "sid": 138,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Since the dataset has no split of training, development, and test sets, we followed prior work (Jiang and Zhai, 2007) and performed 5-fold cross validation to obtain our performance results.",
                    "sid": 139,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For simplicity, we used 5 rounds of training and a regularization parameter of 1.5 for the perceptrons in all our experiments.",
                    "sid": 140,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Finally, we concentrate on the evaluation of fine-grained relations.",
                    "sid": 141,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.1 Performance of the Basic RE system.",
                    "sid": 142,
                    "ssid": 11,
                    "kind_of_tag": "s"
                },
                {
                    "text": "As a gauge on the performance of our basic relation extraction system BasicRE using only the features described in Section 2, we compare against the state-of-the-art feature-based RE system of Jiang and Zhai (2007).",
                    "sid": 143,
                    "ssid": 12,
                    "kind_of_tag": "s"
                },
                {
                    "text": "However, we note that in that work, the authors performed their evaluation using undirected coarse-grained relations.",
                    "sid": 144,
                    "ssid": 13,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, they do not distinguish on argument order of mentions and the classifier has to decide among 8 relation labels (7 coarse-grained relation types and a null label).",
                    "sid": 145,
                    "ssid": 14,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Performing 5-fold cross validation on the news wire (nwire) and broadcast news (bnews) corpora in the ACE-2004 dataset, they reported a F-measure of 71.5 using a maximum entropy classifier4.",
                    "sid": 146,
                    "ssid": 15,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Evaluating BasicRE on the same setting, 4 After they heuristically performed feature selection and applied the heuristics giving the best evaluation performance, they obtained a result of 72.9.",
                    "sid": 147,
                    "ssid": 16,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fe atu res A l l n w i r e R ec % Pre% F1% 1 0 % o f n w i r e R ec % Pre% F1% Ba sic RE + Hi er + Hi er +r elE nt C + Co ref + Wi ki + Clu ste r 4 9.",
                    "sid": 148,
                    "ssid": 17,
                    "kind_of_tag": "s"
                },
                {
                    "text": "9 51.0 50.5 + 1.",
                    "sid": 149,
                    "ssid": 18,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3 +1.3 +1.3 + 1.",
                    "sid": 150,
                    "ssid": 19,
                    "kind_of_tag": "s"
                },
                {
                    "text": "5 +2.0 +1.8 \u223c +1.4 +0.7 + 0.",
                    "sid": 151,
                    "ssid": 20,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 +1.9 +1.0 \u2212 0.",
                    "sid": 152,
                    "ssid": 21,
                    "kind_of_tag": "s"
                },
                {
                    "text": "2 +3.2 +1.4 33 .2 29.0 31.0 + 1.1 +1.2 +1.1 + 3.3 +3.5 +3.4 \u2212 0.",
                    "sid": 153,
                    "ssid": 22,
                    "kind_of_tag": "s"
                },
                {
                    "text": "1 +1.0 +0.5 + 1.5 +2.5 +2.0 \u2212 0.",
                    "sid": 154,
                    "ssid": 23,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 +3.9 +1.7 + AL L + 1.5 +6.7 +3.9 + 4.7 +10.2 +7.6 Table 3: BasicRE gives the performance of our basic RE system on predicting fine-grained relations, obtained by performing 5-fold cross validation on only the news wire corpus of ACE-2004.",
                    "sid": 155,
                    "ssid": 24,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Each subsequent row +Hier, +Hier+relEntC, +Coref, +Wiki, and +Cluster gives the individual contribution from using each knowledge.",
                    "sid": 156,
                    "ssid": 25,
                    "kind_of_tag": "s"
                },
                {
                    "text": "The bottom row +ALL gives the performance improvements from adding +Hier+relEntC+Coref+Wiki+Cluster.",
                    "sid": 157,
                    "ssid": 26,
                    "kind_of_tag": "s"
                },
                {
                    "text": "\u223c indicates no change in score.",
                    "sid": 158,
                    "ssid": 27,
                    "kind_of_tag": "s"
                },
                {
                    "text": "we obtained a competitive F-measure of 71.25.",
                    "sid": 159,
                    "ssid": 28,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.2 Experimental Settings for Evaluating.",
                    "sid": 160,
                    "ssid": 29,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Fine-grained Relations Two of our knowledge sources, the Wiki system described in Section 3.4 and the word clusters described in Section 3.5, assume inputs of mixed- cased text.",
                    "sid": 161,
                    "ssid": 30,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We note that the bnews corpus of ACE-2004 is entirely in lower-cased text.",
                    "sid": 162,
                    "ssid": 31,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Hence, we use only the nwire corpus for our experiments here, from which we gathered 28,943 relation instances and 2,226 of those have a valid (non-null) relation6.",
                    "sid": 163,
                    "ssid": 32,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also propose the following experimental setting.",
                    "sid": 164,
                    "ssid": 33,
                    "kind_of_tag": "s"
                },
                {
                    "text": "First, since we made use of coreference information, we made sure that while performing our experiments, all instances from the same document are either all used as training data or all used as test data.",
                    "sid": 165,
                    "ssid": 34,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Prior work in RE had not ensured this, but we argue that this provides a more realistic setting.",
                    "sid": 166,
                    "ssid": 35,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Our own experiments indicate that this results in a 12% lower performance on fine-grained relations.",
                    "sid": 167,
                    "ssid": 36,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Secondly, prior work calculate their performance on relation extraction at the level of mentions.",
                    "sid": 168,
                    "ssid": 37,
                    "kind_of_tag": "s"
                },
                {
                    "text": "That is, each mention pair extracted is scored individually.",
                    "sid": 169,
                    "ssid": 38,
                    "kind_of_tag": "s"
                },
                {
                    "text": "An issue with this way of scoring on the ACE corpus is that ACE annota 5 Using 10 rounds of training and a regularization parameter of 2.5 improves the result to 72.2.",
                    "sid": 170,
                    "ssid": 39,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In general, we found that more rounds of training and a higher regularization value tors rarely duplicate a relation link for coreferent mentions.",
                    "sid": 171,
                    "ssid": 40,
                    "kind_of_tag": "s"
                },
                {
                    "text": "For instance, assume that mentions mi, mj , and mk exist in a given sentence, mentions mi and mj are coreferent, and the annotator establishes a particular relation type r between mj and mk . The annotator will not usually duplicate the same relation r between mi and mk and thus the label between these two mentions is then null.",
                    "sid": 172,
                    "ssid": 41,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We are not suggesting that this is an incorrect approach, but clearly there is an issue since an important goal of performing RE is to populate or build an ontology of entities and establish the relations existing among the entities.",
                    "sid": 173,
                    "ssid": 42,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, we evaluate our performance at the entity-level.7 That is, given a pair of entities, we establish the set of relation types existing between them, based on their mention annotations.",
                    "sid": 174,
                    "ssid": 43,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Then we calculate recall and precision based on these established relations.",
                    "sid": 175,
                    "ssid": 44,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Of course, performing such an evaluation requires knowledge about the coreference relations and in this work, we assume we are given this information.",
                    "sid": 176,
                    "ssid": 45,
                    "kind_of_tag": "s"
                },
                {
                    "text": "4.3 Knowledge-Enriched System.",
                    "sid": 177,
                    "ssid": 46,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Evaluating our system BasicRE (trained only on the features described in Section 2) on the nwire corpus, we obtained a F1 score of 50.5, as shown in Table 3.",
                    "sid": 178,
                    "ssid": 47,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, we exploited the relation hierarchy as in Section 3.1 and obtained an improvement of 1.3, as shown in the row +Hier.",
                    "sid": 179,
                    "ssid": 48,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Next, we added the entity type constraints of Section benefits coarse-grained relation classification, but not fine- grained relation classification.",
                    "sid": 180,
                    "ssid": 49,
                    "kind_of_tag": "s"
                },
                {
                    "text": "6 The number of relation instances in the nwire and bnews corpora are about the same.",
                    "sid": 181,
                    "ssid": 50,
                    "kind_of_tag": "s"
                },
                {
                    "text": "7 Our experiments indicate that performing the usual eval-.",
                    "sid": 182,
                    "ssid": 51,
                    "kind_of_tag": "s"
                },
                {
                    "text": "uation on mentions gives similar performance figures and the trend in Table 3 stays the same.",
                    "sid": 183,
                    "ssid": 52,
                    "kind_of_tag": "s"
                },
                {
                    "text": "3.2.",
                    "sid": 184,
                    "ssid": 53,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Remember that these constraints are imposed.",
                    "sid": 185,
                    "ssid": 54,
                    "kind_of_tag": "s"
                },
                {
                    "text": "on the coarse-grained relations.",
                    "sid": 186,
                    "ssid": 55,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Thus, they would only affect the fine-grained relation predictions if we also exploit the relation hierarchy.",
                    "sid": 187,
                    "ssid": 56,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In the table, we show that all the background knowledge helped to improve performance, providing a total improvement of 3.9 to our basic RE system.",
                    "sid": 188,
                    "ssid": 57,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Though the focus of this work is on fine-grained relations, our approach also improves the performance of coarse-grained relation predictions.",
                    "sid": 189,
                    "ssid": 58,
                    "kind_of_tag": "s"
                },
                {
                    "text": "BasicRE obtains a F1 score of 65.3 on coarse-grained relations and exploiting background knowledge gives a total improvement of 2.9.",
                    "sid": 190,
                    "ssid": 59,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "analysis. ",
            "number": "5",
            "sents": [
                {
                    "text": "We explore the situation where we have very little training data.",
                    "sid": 191,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We assume during each cross validation fold, we are given only 10% of the training data we originally had.",
                    "sid": 192,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Previously, when performing 5-fold cross validation on 2,226 valid relation instances, we had about 1780 as training instances in each fold.",
                    "sid": 193,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Now, we assume we are only given about 178 training instances in each fold.",
                    "sid": 194,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Under this condition, BasicRE gives a F1 score of 31.0 on fine-grained relations.",
                    "sid": 195,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Adding all the background knowledge gives an improvement of 7.6 and this represents an error reduction of 39% when measured against the performance difference of 50.5 (31.0) when we have 1780 training instances vs. 178 training instances.",
                    "sid": 196,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On the coarse-grained relations, BasicRE gives a F1 score of 51.1 and exploiting background knowledge gives a total improvement of 5.0.",
                    "sid": 197,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We also tabulated the list of fine-grained relations that improved by more than 1 F1 score when we incorporated +Wiki, on the experiment using all of nwire data: phys:near (physically near), other-aff:ideology (ideology affiliation), art:user-or-owner (user or owner of artifact), per- soc:business (business relationship), phys:part- whole (physical part-whole), emporg:subsidiary (organization subsidiary), and gpeaff:citizen-or- resident (citizen or resident).",
                    "sid": 198,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Most of these intuitively seemed to be information one would find being mentioned in an encyclopedia.",
                    "sid": 199,
                    "ssid": 9,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "related work. ",
            "number": "6",
            "sents": [
                {
                    "text": "Few prior work has explored using background knowledge to improve relation extraction performance.",
                    "sid": 200,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Zhou et al.",
                    "sid": 201,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2008) took advantage of the hierarchical ontology of relations by proposing methods customized for the perceptron learning algorithm and support vector machines.",
                    "sid": 202,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In contrast, we propose a generic way of using the relation hierarchy which at the same time, gives globally coherent predictions and allows for easy injection of knowledge as constraints.",
                    "sid": 203,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Recently, Jiang (2009) proposed using features which are common across all relations.",
                    "sid": 204,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Her method is complementary to our approach, as she does not consider information such as the relatedness between different relations.",
                    "sid": 205,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "On using semantic resources, Zhou et al.",
                    "sid": 206,
                    "ssid": 7,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2005) gathered two gazettes, one containing country names and another containing words indicating personal relationships.",
                    "sid": 207,
                    "ssid": 8,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In relating the tasks of RE and coreference resolution, Ji et al.",
                    "sid": 208,
                    "ssid": 9,
                    "kind_of_tag": "s"
                },
                {
                    "text": "(2005) used the output of a RE system to rescore coreference hypotheses.",
                    "sid": 209,
                    "ssid": 10,
                    "kind_of_tag": "s"
                },
                {
                    "text": "In our work, we reverse the setting and explore using coreference to improve RE.",
                    "sid": 210,
                    "ssid": 11,
                    "kind_of_tag": "s"
                }
            ]
        },
        {
            "text": "conclusion. ",
            "number": "7",
            "sents": [
                {
                    "text": "In this paper, we proposed a broad range of methods to inject background knowledge into a relation extraction system.",
                    "sid": 211,
                    "ssid": 1,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Some of these methods, such as exploiting the relation hierarchy, are general in nature and could be easily applied to other NLP tasks.",
                    "sid": 212,
                    "ssid": 2,
                    "kind_of_tag": "s"
                },
                {
                    "text": "To combine the various relation predictions and knowledge, we perform global inference within an ILP framework.",
                    "sid": 213,
                    "ssid": 3,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Besides allowing for easy injection of knowledge as constraints, this ensures globally coherent models and predictions.",
                    "sid": 214,
                    "ssid": 4,
                    "kind_of_tag": "s"
                },
                {
                    "text": "Acknowledgements This research was partly sponsored by Air Force Research Laboratory (AFRL) under prime contract no.",
                    "sid": 215,
                    "ssid": 5,
                    "kind_of_tag": "s"
                },
                {
                    "text": "FA875009- C-0181.",
                    "sid": 216,
                    "ssid": 6,
                    "kind_of_tag": "s"
                },
                {
                    "text": "We thank MingWei Chang and James Clarke for discussions on this research.",
                    "sid": 217,
                    "ssid": 7,
                    "kind_of_tag": "s"
                }
            ]
        }
    ]
}